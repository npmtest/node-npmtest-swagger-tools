{"/home/travis/build/npmtest/node-npmtest-swagger-tools/test.js":"/* istanbul instrument in package npmtest_swagger_tools */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/lib.npmtest_swagger_tools.js":"/* istanbul instrument in package npmtest_swagger_tools */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_swagger_tools = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_swagger_tools = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-swagger-tools && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_swagger_tools */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_swagger_tools\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_swagger_tools.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_swagger_tools.rollup.js'] =\n            local.assetsDict['/assets.npmtest_swagger_tools.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_swagger_tools.__dirname + '/lib.npmtest_swagger_tools.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/index.js":"/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Apigee Corporation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\nvar _ = require('lodash-compat');\nvar debug = require('debug')('swagger-tools:middleware');\nvar helpers = require('./lib/helpers');\n\nvar initializeMiddleware = function initializeMiddleware (rlOrSO, resources, callback) {\n  var args;\n  var spec;\n\n  debug('Initializing middleware');\n\n  if (_.isUndefined(rlOrSO)) {\n    throw new Error('rlOrSO is required');\n  } else if (!_.isPlainObject(rlOrSO)) {\n    throw new TypeError('rlOrSO must be an object');\n  }\n\n  args = [rlOrSO];\n  spec = helpers.getSpec(helpers.getSwaggerVersion(rlOrSO), true);\n\n  debug('  Identified Swagger version: %s', spec.version);\n\n  if (spec.version === '1.2') {\n    if (_.isUndefined(resources)) {\n      throw new Error('resources is required');\n    } else if (!_.isArray(resources)) {\n      throw new TypeError('resources must be an array');\n    }\n\n    debug('  Number of API Declarations: %d', resources.length);\n\n    args.push(resources);\n  } else {\n    callback = arguments[1];\n  }\n\n  if (_.isUndefined(callback)) {\n    throw new Error('callback is required');\n  } else if (!_.isFunction(callback)) {\n    throw new TypeError('callback must be a function');\n  }\n\n  args.push(function (err, results) {\n    if (results && results.errors.length + _.reduce(results.apiDeclarations || [], function (count, apiDeclaration) {\n      return count += (apiDeclaration ? apiDeclaration.errors.length : 0);\n    }, 0) > 0) {\n      err = new Error('Swagger document(s) failed validation so the server cannot start');\n\n      err.failedValidation = true;\n      err.results = results;\n    }\n\n    debug('  Validation: %s', err ? 'failed' : 'succeeded');\n\n    try {\n      if (err) {\n        throw err;\n      }\n\n      callback({\n        // Create a wrapper to avoid having to pass the non-optional arguments back to the swaggerMetadata middleware\n        swaggerMetadata: function () {\n          var swaggerMetadata = require('./middleware/swagger-metadata');\n\n          return swaggerMetadata.apply(undefined, args.slice(0, args.length - 1));\n        },\n        swaggerRouter: require('./middleware/swagger-router'),\n        swaggerSecurity: require('./middleware/swagger-security'),\n        // Create a wrapper to avoid having to pass the non-optional arguments back to the swaggerUi middleware\n        swaggerUi: function (options) {\n          var swaggerUi = require('./middleware/swagger-ui');\n          var suArgs = [rlOrSO];\n\n          if (spec.version === '1.2') {\n            suArgs.push(_.reduce(resources, function (map, resource) {\n              map[resource.resourcePath] = resource;\n\n              return map;\n            }, {}));\n          }\n\n          suArgs.push(options || {});\n\n          return swaggerUi.apply(undefined, suArgs);\n        },\n        swaggerValidator: require('./middleware/swagger-validator')\n      });\n    } catch (err) {\n      if (process.env.RUNNING_SWAGGER_TOOLS_TESTS === 'true') {\n        // When running the swagger-tools test suite, we want to return an error instead of exiting the process.  This\n        // does not mean that this function is an error-first callback but due to json-refs using Promises, we have to\n        // return the error to avoid the error being swallowed.\n        callback(err);\n      } else {\n        if (err.failedValidation === true) {\n          helpers.printValidationResults(spec.version, rlOrSO, resources, results, true);\n        } else {\n          console.error('Error initializing middleware');\n          console.error(err.stack);\n        }\n\n        process.exit(1);\n      }\n    }\n  });\n\n  spec.validate.apply(spec, args);\n};\n\nmodule.exports = {\n  initializeMiddleware: initializeMiddleware,\n  specs: require('./lib/specs')\n};\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/lib/helpers.js":"/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Apigee Corporation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\n// Done this way to make the Browserify build smaller\nvar _ = {\n  each: require('lodash-compat/collection/each'),\n  indexOf: require('lodash-compat/array/indexOf'),\n  isArray: require('lodash-compat/lang/isArray'),\n  isPlainObject: require('lodash-compat/lang/isPlainObject'),\n  isString: require('lodash-compat/lang/isString'),\n  isUndefined: require('lodash-compat/lang/isUndefined'),\n  reduce: require('lodash-compat/collection/reduce')\n};\nvar JsonRefs = require('json-refs');\nvar traverse = require('traverse');\nvar ZSchema = require('z-schema');\n\nvar customJsonSchemaFormats = ['byte', 'double', 'float', 'int32', 'int64', 'mime-type', 'uri-template'];\nvar draft04Json = require('../schemas/json-schema-draft-04.json');\nvar draft04Url = 'http://json-schema.org/draft-04/schema';\nvar specCache = {};\n\nmodule.exports.registerCustomFormats = function (json) {\n  traverse(json).forEach(function () {\n    var name = this.key;\n    var format = this.node;\n\n    if (name === 'format' && _.indexOf(ZSchema.getRegisteredFormats(), format) === -1) {\n      ZSchema.registerFormat(format, function () {\n        return true;\n      });\n    }\n  });\n};\n\nmodule.exports.createJsonValidator = function (schemas) {\n  var validator = new ZSchema({\n    breakOnFirstError: false,\n    reportPathAsArray: true\n  });\n  var result;\n\n  // Add the draft-04 spec\n  validator.setRemoteReference(draft04Url, draft04Json);\n\n  // Swagger uses some unsupported/invalid formats so just make them all pass\n  _.each(customJsonSchemaFormats, function (format) {\n    ZSchema.registerFormat(format, function () {\n      return true;\n    });\n  });\n\n  // Compile and validate the schemas\n  if (!_.isUndefined(schemas)) {\n    result = validator.compileSchema(schemas);\n\n    // If there is an error, it's unrecoverable so just blow the eff up\n    if (result === false) {\n      console.error('JSON Schema file' + (schemas.length > 1 ? 's are' : ' is') + ' invalid:');\n\n      _.each(validator.getLastErrors(), function (err) {\n        console.error('  ' + (_.isArray(err.path) ? JsonRefs.pathToPtr(err.path) : err.path) + ': ' + err.message);\n      });\n\n      throw new Error('Unable to create validator due to invalid JSON Schema');\n    }\n  }\n\n  return validator;\n};\n\nmodule.exports.formatResults = function (results) {\n  if (results) {\n    // Update the results based on its content to indicate success/failure accordingly\n    results = (results.errors.length + results.warnings.length +\n    _.reduce(results.apiDeclarations, function (count, aResult) {\n      if (aResult) {\n        count += aResult.errors.length + aResult.warnings.length;\n      }\n\n      return count;\n    }, 0) > 0) ? results : undefined;\n  }\n\n  return results;\n};\n\nvar getErrorCount = module.exports.getErrorCount = function (results) {\n  var errors = 0;\n\n  if (results) {\n    errors = results.errors.length;\n\n    _.each(results.apiDeclarations, function (adResults) {\n      if (adResults) {\n        errors += adResults.errors.length;\n      }\n    });\n  }\n\n  return errors;\n};\n\nvar coerceVersion = function (version) {\n  // Convert the version to a number (Required for helpers.getSpec)\n  if (version && !_.isString(version)) {\n    version = version.toString();\n\n    // Handle rounding issues (Only required for when Swagger version ends in '.0')\n    if (version.indexOf('.') === -1) {\n      version += '.0';\n    }\n  }\n\n  return version;\n};\n\n/**\n * Returns the proper specification based on the human readable version.\n *\n * @param {string} version - The human readable Swagger version (Ex: 1.2)\n * @param {[boolean=false]} throwError - Throw an error if the version could not be identified\n *\n * @returns the corresponding Swagger Specification object or undefined if there is none\n */\nmodule.exports.getSpec = function (version, throwError) {\n  var spec;\n\n  version = coerceVersion(version);\n  spec = specCache[version];\n\n  if (_.isUndefined(spec)) {\n    switch (version) {\n    case '1.2':\n      spec = require('../lib/specs').v1_2; // jshint ignore:line\n\n      break;\n\n    case '2.0':\n      spec = require('../lib/specs').v2_0; // jshint ignore:line\n\n      break;\n\n    default:\n      if (throwError === true) {\n        throw new Error('Unsupported Swagger version: ' + version);\n      }\n    }\n  }\n\n  return spec;\n};\n\n/**\n * Atempts to figure out the Swagger version from the Swagger document.\n *\n * @param {object} document - The Swagger document\n *\n * @returns the Swagger version or undefined if the document is not a Swagger document\n */\nmodule.exports.getSwaggerVersion = function (document) {\n  return _.isPlainObject(document) ? coerceVersion(document.swaggerVersion || document.swagger) : undefined;\n};\n\nmodule.exports.printValidationResults = function (version, apiDOrSO, apiDeclarations, results, printSummary) {\n  var hasErrors = getErrorCount(results) > 0;\n  var stream = hasErrors ? console.error : console.log;\n  var pluralize = function (string, count) {\n    return count === 1 ? string : string + 's';\n  };\n  var printErrorsOrWarnings = function (header, entries, indent) {\n    if (header) {\n      stream(header + ':');\n      stream();\n    }\n\n    _.each(entries, function (entry) {\n      stream(new Array(indent + 1).join(' ') + JsonRefs.pathToPtr(entry.path) + ': ' + entry.message);\n\n      if (entry.inner) {\n        printErrorsOrWarnings (undefined, entry.inner, indent + 2);\n      }\n    });\n\n    if (header) {\n      stream();\n    }\n  };\n  var errorCount = 0;\n  var warningCount = 0;\n\n  stream();\n\n  if (results.errors.length > 0) {\n    errorCount += results.errors.length;\n\n    printErrorsOrWarnings('API Errors', results.errors, 2);\n  }\n\n  if (results.warnings.length > 0) {\n    warningCount += results.warnings.length;\n\n    printErrorsOrWarnings('API Warnings', results.warnings, 2);\n  }\n\n  if (results.apiDeclarations) {\n    results.apiDeclarations.forEach(function (adResult, index) {\n      if (!adResult) {\n        return;\n      }\n\n      var name = apiDeclarations[index].resourcePath || index;\n\n      if (adResult.errors.length > 0) {\n        errorCount += adResult.errors.length;\n\n        printErrorsOrWarnings('  API Declaration (' + name + ') Errors', adResult.errors, 4);\n      }\n\n      if (adResult.warnings.length > 0) {\n        warningCount += adResult.warnings.length;\n\n        printErrorsOrWarnings('  API Declaration (' + name + ') Warnings', adResult.warnings, 4);\n      }\n    });\n  }\n\n  if (printSummary) {\n    if (errorCount > 0) {\n      stream(errorCount + ' ' + pluralize('error', errorCount) + ' and ' + warningCount + ' ' +\n                    pluralize('warning', warningCount));\n    } else {\n      stream('Validation succeeded but with ' + warningCount + ' ' + pluralize('warning', warningCount));\n    }\n  }\n\n  stream();\n};\n\nmodule.exports.swaggerOperationMethods = [\n  'DELETE',\n  'GET',\n  'HEAD',\n  'OPTIONS',\n  'PATCH',\n  'POST',\n  'PUT'\n];\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/lib/specs.js":"/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Apigee Corporation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\n// Done this way to make the Browserify build smaller\nvar _ = {\n  cloneDeep: require('lodash-compat/lang/cloneDeep'),\n  difference: require('lodash-compat/array/difference'),\n  each: require('lodash-compat/collection/each'),\n  find: require('lodash-compat/collection/find'),\n  has: require('lodash-compat/object/has'),\n  isArray: require('lodash-compat/lang/isArray'),\n  isFunction: require('lodash-compat/lang/isFunction'),\n  isPlainObject: require('lodash-compat/lang/isPlainObject'),\n  isString: require('lodash-compat/lang/isString'),\n  isUndefined: require('lodash-compat/lang/isUndefined'),\n  map: require('lodash-compat/collection/map'),\n  reduce: require('lodash-compat/collection/reduce'),\n  set: require('lodash-compat/object/set'),\n  union: require('lodash-compat/array/union')\n};\nvar async = require('async');\nvar helpers = require('./helpers');\nvar JsonRefs = require('json-refs');\nvar SparkMD5 = require('spark-md5');\nvar swaggerConverter = require('swagger-converter');\nvar traverse = require('traverse');\nvar validators = require('./validators');\nvar YAML = require('js-yaml');\n\n// Work around swagger-converter packaging issue (Browser builds only)\nif (_.isPlainObject(swaggerConverter)) {\n  swaggerConverter = global.SwaggerConverter.convert;\n}\n\nvar documentCache = {};\n\nvar sanitizeRef = function (version, ref) {\n  return version !== '1.2' ? ref : ref.replace('#/models/', '');\n};\n\nvar swagger1RefPreProcesor = function (obj) {\n  var pObj = _.cloneDeep(obj);\n\n  pObj.$ref = '#/models/' + obj.$ref;\n\n  return pObj;\n};\nvar validOptionNames = _.map(helpers.swaggerOperationMethods, function (method) {\n  return method.toLowerCase();\n});\n\nvar isRemotePtr = function (refDetails) {\n  return ['relative', 'remote'].indexOf(refDetails.type) > -1;\n};\n\nvar createErrorOrWarning = function (code, message, path, dest) {\n  dest.push({\n    code: code,\n    message: message,\n    path: path\n  });\n};\n\nvar addReference = function (cacheEntry, defPathOrPtr, refPathOrPtr, results, omitError) {\n  var result = true;\n  var swaggerVersion = helpers.getSwaggerVersion(cacheEntry.resolved);\n  var defPath = _.isArray(defPathOrPtr) ? defPathOrPtr : JsonRefs.pathFromPtr(defPathOrPtr);\n  var defPtr = _.isArray(defPathOrPtr) ? JsonRefs.pathToPtr(defPathOrPtr) : defPathOrPtr;\n  var refPath = _.isArray(refPathOrPtr) ? refPathOrPtr : JsonRefs.pathFromPtr(refPathOrPtr);\n  var refPtr = _.isArray(refPathOrPtr) ? JsonRefs.pathToPtr(refPathOrPtr) : refPathOrPtr;\n  var code;\n  var def;\n  var displayId;\n  var i;\n  var msgPrefix;\n  var type;\n\n  def = cacheEntry.definitions[defPtr];\n  type = defPath[0];\n  code = type === 'securityDefinitions' ?\n    'SECURITY_DEFINITION' :\n    type.substring(0, type.length - 1).toUpperCase();\n  displayId = swaggerVersion === '1.2' ? defPath[defPath.length - 1] : defPtr;\n  msgPrefix = type === 'securityDefinitions' ?\n    'Security definition' :\n    code.charAt(0) + code.substring(1).toLowerCase();\n\n  // This is an authorization scope reference\n  if (['authorizations', 'securityDefinitions'].indexOf(defPath[0]) > -1 && defPath[2] === 'scopes') {\n    code += '_SCOPE';\n    msgPrefix += ' scope';\n  }\n\n  // If the reference was not found and this is not an authorization/security scope reference, attempt to find a\n  // parent object to add the reference too.  (Issue 176)\n  if (_.isUndefined(def) && ['AUTHORIZATION_SCOPE', 'SECURITY_DEFINITION_SCOPE'].indexOf(code) === -1) {\n    // Attempt to find the definition in case the reference is to a path within a definition`\n    for (i = 1; i < defPath.length; i++) {\n      var pPath = defPath.slice(0, defPath.length - i);\n      var pPtr = JsonRefs.pathToPtr(pPath);\n      var pDef = cacheEntry.definitions[pPtr];\n\n      if (!_.isUndefined(pDef)) {\n        def = pDef;\n\n        break;\n      }\n    }\n  }\n\n  if (_.isUndefined(def)) {\n    if (!omitError) {\n      if (cacheEntry.swaggerVersion !== '1.2' && ['SECURITY_DEFINITION', 'SECURITY_DEFINITION_SCOPE'].indexOf(code) === -1) {\n        refPath.push('$ref');\n      }\n\n      createErrorOrWarning('UNRESOLVABLE_' + code, msgPrefix + ' could not be resolved: ' + displayId, refPath,\n                           results.errors);\n    }\n\n    result = false;\n  } else {\n    if (_.isUndefined(def.references)) {\n      def.references = [];\n    }\n\n    def.references.push(refPtr);\n  }\n\n  return result;\n};\n\nvar getOrComposeSchema = function (documentMetadata, modelId) {\n  var title = 'Composed ' + (documentMetadata.swaggerVersion === '1.2' ?\n                               JsonRefs.pathFromPtr(modelId).pop() :\n                               modelId);\n  var metadata = documentMetadata.definitions[modelId];\n  var originalT = traverse(documentMetadata.original);\n  var resolvedT = traverse(documentMetadata.resolved);\n  var composed;\n  var original;\n\n  if (!metadata) {\n    return undefined;\n  }\n\n  original = _.cloneDeep(originalT.get(JsonRefs.pathFromPtr(modelId)));\n  composed = _.cloneDeep(resolvedT.get(JsonRefs.pathFromPtr(modelId)));\n\n  // Convert the Swagger 1.2 document to a valid JSON Schema file\n  if (documentMetadata.swaggerVersion === '1.2') {\n    // Create inheritance model\n    if (metadata.lineage.length > 0) {\n      composed.allOf = [];\n\n      _.each(metadata.lineage, function (modelId) {\n        composed.allOf.push(getOrComposeSchema(documentMetadata, modelId));\n      });\n    }\n\n    // Remove the subTypes property\n    delete composed.subTypes;\n\n    _.each(composed.properties, function (property, name) {\n      var oProp = original.properties[name];\n\n      // Convert the string values to numerical values\n      _.each(['maximum', 'minimum'], function (prop) {\n        if (_.isString(property[prop])) {\n          property[prop] = parseFloat(property[prop]);\n        }\n      });\n\n      _.each(JsonRefs.findRefs(oProp, {\n        includeInvalid: true,\n        refPreProcessor: swagger1RefPreProcesor\n      }), function (refDetails, refPtr) {\n        var dMetadata = documentMetadata.definitions[refDetails.uri];\n        var path = JsonRefs.pathFromPtr(refPtr);\n\n        if (dMetadata.lineage.length > 0) {\n          traverse(property).set(path, getOrComposeSchema(documentMetadata, refDetails.uri));\n        } else {\n          traverse(property).set(path.concat('title'), 'Composed ' + sanitizeRef(documentMetadata.swaggerVersion,\n                                                                                 refDetails.uri));\n        }\n      });\n    });\n  }\n\n  // Scrub id properties\n  composed = traverse(composed).map(function (val) {\n    if (this.key === 'id' && _.isString(val)) {\n      this.remove();\n    }\n  });\n\n  composed.title = title;\n\n  return composed;\n};\n\nvar createUnusedErrorOrWarning = function (val, codeSuffix, msgPrefix, path, dest) {\n  createErrorOrWarning('UNUSED_' + codeSuffix, msgPrefix + ' is defined but is not used: ' + val, path, dest);\n};\n\nvar getDocumentCache = function (apiDOrSO) {\n  var key = SparkMD5.hash(JSON.stringify(apiDOrSO));\n  var cacheEntry = documentCache[key] || _.find(documentCache, function (cacheEntry) {\n    return cacheEntry.resolvedId === key;\n  });\n\n  if (!cacheEntry) {\n    cacheEntry = documentCache[key] = {\n      definitions: {},\n      original: apiDOrSO,\n      resolved: undefined,\n      swaggerVersion: helpers.getSwaggerVersion(apiDOrSO)\n    };\n  }\n\n  return cacheEntry;\n};\n\nvar handleValidationError = function (results, callback) {\n  var err = new Error('The Swagger document(s) are invalid');\n\n  err.errors = results.errors;\n  err.failedValidation = true;\n  err.warnings = results.warnings;\n\n  if (results.apiDeclarations) {\n    err.apiDeclarations = results.apiDeclarations;\n  }\n\n  callback(err);\n};\n\nvar normalizePath = function (path) {\n  var matches = path.match(/\\{(.*?)\\}/g);\n  var argNames = [];\n  var normPath = path;\n\n  if (matches) {\n    _.each(matches, function (match, index) {\n      normPath = normPath.replace(match, '{' + index + '}');\n      argNames.push(match.replace(/[{}]/g, ''));\n    });\n  }\n\n  return {\n    path: normPath,\n    args: argNames\n  };\n};\n\nvar removeCirculars = function (obj) {\n  function walk (ancestors, node, path) {\n    function walkItem (item, segment) {\n      path.push(segment);\n      walk(ancestors, item, path);\n      path.pop();\n    }\n\n    // We do not process circular objects again\n    if (ancestors.indexOf(node) === -1) {\n      ancestors.push(node);\n\n      if (_.isArray(node) || _.isPlainObject(node)) {\n        _.each(node, function (member, indexOrKey) {\n          walkItem(member, indexOrKey.toString());\n        });\n      }\n    } else {\n      _.set(obj, path, {});\n    }\n\n    ancestors.pop();\n  }\n\n  walk([], obj, []);\n};\n\n\nvar validateNoExist = function (data, val, codeSuffix, msgPrefix, path, dest) {\n  if (!_.isUndefined(data) && data.indexOf(val) > -1) {\n    createErrorOrWarning('DUPLICATE_' + codeSuffix, msgPrefix + ' already defined: ' + val, path, dest);\n  }\n};\n\nvar validateSchemaConstraints = function (documentMetadata, schema, path, results, skip) {\n  try {\n    validators.validateSchemaConstraints(documentMetadata.swaggerVersion, schema, path, undefined);\n  } catch (err) {\n    if (!skip) {\n      createErrorOrWarning(err.code, err.message, err.path, results.errors);\n    }\n  }\n};\n\nvar processDocument = function (documentMetadata, results) {\n  var swaggerVersion = documentMetadata.swaggerVersion;\n  var getDefinitionMetadata = function (defPath, inline) {\n    var defPtr = JsonRefs.pathToPtr(defPath);\n    var metadata = documentMetadata.definitions[defPtr];\n\n    if (!metadata) {\n      metadata = documentMetadata.definitions[defPtr] = {\n        inline: inline || false,\n        references: []\n      };\n\n      // For model definitions, add the inheritance properties\n      if (['definitions', 'models'].indexOf(JsonRefs.pathFromPtr(defPtr)[0]) > -1) {\n        metadata.cyclical = false;\n        metadata.lineage = undefined;\n        metadata.parents = [];\n      }\n    }\n\n    return metadata;\n  };\n  var getDisplayId = function (id) {\n    return swaggerVersion === '1.2' ? JsonRefs.pathFromPtr(id).pop() : id;\n  };\n  var jsonRefsOptions = {\n    filter: 'local',\n    includeInvalid: true\n  };\n  var walk = function (root, id, lineage) {\n    var definition = documentMetadata.definitions[id || root];\n\n    if (definition) {\n      _.each(definition.parents, function (parent) {\n        lineage.push(parent);\n\n        if (root !== parent) {\n          walk(root, parent, lineage);\n        }\n      });\n    }\n  };\n  var authDefsProp = swaggerVersion === '1.2' ? 'authorizations' : 'securityDefinitions';\n  var modelDefsProp = swaggerVersion === '1.2' ? 'models' : 'definitions';\n\n  // Process authorization definitions\n  _.each(documentMetadata.resolved[authDefsProp], function (authorization, name) {\n    var securityDefPath = [authDefsProp, name];\n\n    // Swagger 1.2 only has authorization definitions in the Resource Listing\n    if (swaggerVersion === '1.2' && !authorization.type) {\n      return;\n    }\n\n    // Create the authorization definition metadata\n    getDefinitionMetadata(securityDefPath);\n\n    _.reduce(authorization.scopes, function (seenScopes, scope, indexOrName) {\n      var scopeName = swaggerVersion === '1.2' ? scope.scope : indexOrName;\n      var scopeDefPath = securityDefPath.concat(['scopes', indexOrName.toString()]);\n      var scopeMetadata = getDefinitionMetadata(securityDefPath.concat(['scopes', scopeName]));\n\n      scopeMetadata.scopePath = scopeDefPath;\n\n      // Identify duplicate authorization scope defined in the Resource Listing\n      validateNoExist(seenScopes, scopeName, 'AUTHORIZATION_SCOPE_DEFINITION', 'Authorization scope definition',\n                      swaggerVersion === '1.2' ? scopeDefPath.concat('scope') : scopeDefPath, results.warnings);\n\n      seenScopes.push(scopeName);\n\n      return seenScopes;\n    }, []);\n  });\n\n  // Process model definitions\n  _.each(documentMetadata.resolved[modelDefsProp], function (model, modelId) {\n    var modelDefPath = [modelDefsProp, modelId];\n    var modelMetadata = getDefinitionMetadata(modelDefPath);\n\n    // Identify model id mismatch (Id in models object is not the same as the model's id in the models object)\n    if (swaggerVersion === '1.2' && modelId !== model.id) {\n      createErrorOrWarning('MODEL_ID_MISMATCH', 'Model id does not match id in models object: ' + model.id,\n                           modelDefPath.concat('id'), results.errors);\n    }\n\n    // Do not reprocess parents/references if already processed\n    if (_.isUndefined(modelMetadata.lineage)) {\n      // Handle inheritance references\n      switch (swaggerVersion) {\n      case '1.2':\n        _.each(model.subTypes, function (subType, index) {\n          var subPath = ['models', subType];\n          var subPtr = JsonRefs.pathToPtr(subPath);\n          var subMetadata = documentMetadata.definitions[subPtr];\n          var refPath = modelDefPath.concat(['subTypes', index.toString()]);\n\n          // If the metadata does not yet exist, create it\n          if (!subMetadata && documentMetadata.resolved[modelDefsProp][subType]) {\n            subMetadata = getDefinitionMetadata(subPath);\n          }\n\n          // If the reference is valid, add the parent\n          if (addReference(documentMetadata, subPath, refPath, results)) {\n            subMetadata.parents.push(JsonRefs.pathToPtr(modelDefPath));\n          }\n        });\n\n        break;\n\n      default:\n        _.each(documentMetadata.original[modelDefsProp][modelId].allOf, function (schema, index) {\n          var isInline = false;\n          var parentPath;\n\n          if (_.isUndefined(schema.$ref) || isRemotePtr(JsonRefs.getRefDetails(schema))) {\n            isInline = true;\n            parentPath = modelDefPath.concat(['allOf', index.toString()]);\n          } else {\n            parentPath = JsonRefs.pathFromPtr(schema.$ref);\n          }\n\n          // If the parent model does not exist, do not create its metadata\n          if (!_.isUndefined(traverse(documentMetadata.resolved).get(parentPath))) {\n            // Create metadata for parent\n            getDefinitionMetadata(parentPath, isInline);\n\n            modelMetadata.parents.push(JsonRefs.pathToPtr(parentPath));\n          }\n        });\n\n        break;\n      }\n    }\n  });\n\n  switch (swaggerVersion) {\n  case '2.0':\n    // Process parameter definitions\n    _.each(documentMetadata.resolved.parameters, function (parameter, name) {\n      var path = ['parameters', name];\n\n      getDefinitionMetadata(path);\n\n      validateSchemaConstraints(documentMetadata, parameter, path, results);\n    });\n\n    // Process response definitions\n    _.each(documentMetadata.resolved.responses, function (response, name) {\n      var path = ['responses', name];\n\n      getDefinitionMetadata(path);\n\n      validateSchemaConstraints(documentMetadata, response, path, results);\n    });\n\n    break;\n  }\n\n  // Validate definition/models (Inheritance, property definitions, ...)\n  _.each(documentMetadata.definitions, function (metadata, id) {\n    var defPath = JsonRefs.pathFromPtr(id);\n    var definition = traverse(documentMetadata.original).get(defPath);\n    var defProp = defPath[0];\n    var code = defProp.substring(0, defProp.length - 1).toUpperCase();\n    var msgPrefix = code.charAt(0) + code.substring(1).toLowerCase();\n    var dProperties;\n    var iProperties;\n    var lineage;\n\n    // The only checks we perform below are inheritance checks so skip all non-model definitions\n    if (['definitions', 'models'].indexOf(defProp) === -1) {\n      return;\n    }\n\n    dProperties = [];\n    iProperties = [];\n    lineage = metadata.lineage;\n\n    // Do not reprocess lineage if already processed\n    if (_.isUndefined(lineage)) {\n      lineage = [];\n\n      walk(id, undefined, lineage);\n\n      // Root > next > ...\n      lineage.reverse();\n\n      metadata.lineage = _.cloneDeep(lineage);\n\n      metadata.cyclical = lineage.length > 1 && lineage[0] === id;\n    }\n\n    // Swagger 1.2 does not allow multiple inheritance while Swagger 2.0+ does\n    if (metadata.parents.length > 1 && swaggerVersion === '1.2') {\n      createErrorOrWarning('MULTIPLE_' + code + '_INHERITANCE',\n                           'Child ' + code.toLowerCase() + ' is sub type of multiple models: ' +\n                           _.map(metadata.parents, function (parent) {\n                             return getDisplayId(parent);\n                           }).join(' && '), defPath, results.errors);\n    }\n\n    if (metadata.cyclical) {\n      createErrorOrWarning('CYCLICAL_' + code + '_INHERITANCE',\n                           msgPrefix + ' has a circular inheritance: ' +\n                             _.map(lineage, function (dep) {\n                               return getDisplayId(dep);\n                             }).join(' -> ') + ' -> ' + getDisplayId(id),\n                            defPath.concat(swaggerVersion === '1.2' ? 'subTypes' : 'allOf'), results.errors);\n    }\n\n    // Remove self reference from the end of the lineage (Front too if cyclical)\n    _.each(lineage.slice(metadata.cyclical ? 1 : 0), function (id) {\n      var pModel = traverse(documentMetadata.resolved).get(JsonRefs.pathFromPtr(id));\n\n      _.each(Object.keys(pModel.properties || {}), function (name) {\n        if (iProperties.indexOf(name) === -1) {\n          iProperties.push(name);\n        }\n      });\n    });\n\n    // Validate simple definitions\n    validateSchemaConstraints(documentMetadata, definition, defPath, results);\n\n    // Identify redeclared properties\n    _.each(definition.properties, function (property, name) {\n      var pPath = defPath.concat(['properties', name]);\n\n      // Do not process unresolved properties\n      if (!_.isUndefined(property)) {\n        validateSchemaConstraints(documentMetadata, property, pPath, results);\n\n        if (iProperties.indexOf(name) > -1) {\n          createErrorOrWarning('CHILD_' + code + '_REDECLARES_PROPERTY',\n                               'Child ' + code.toLowerCase() + ' declares property already declared by ancestor: ' +\n                               name,\n                               pPath, results.errors);\n        } else {\n          dProperties.push(name);\n        }\n      }\n    });\n\n    // Identify missing required properties\n    _.each(definition.required || [], function (name, index) {\n      var type = swaggerVersion === '1.2' ? 'Model' : 'Definition';\n\n      if (iProperties.indexOf(name) === -1 && dProperties.indexOf(name) === -1) {\n        createErrorOrWarning('MISSING_REQUIRED_' + type.toUpperCase() + '_PROPERTY',\n                             type + ' requires property but it is not defined: ' + name,\n                             defPath.concat(['required', index.toString()]), results.errors);\n      }\n    });\n  });\n\n  if (documentMetadata.swaggerVersion === '1.2') {\n    jsonRefsOptions.refPreProcessor = swagger1RefPreProcesor;\n  }\n\n  // Process local references\n  _.each(JsonRefs.findRefs(documentMetadata.original, jsonRefsOptions), function (refDetails, refPtr) {\n    addReference(documentMetadata, refDetails.uri, refPtr, results);\n  });\n\n  // Process invalid references\n  _.each(documentMetadata.referencesMetadata, function (refDetails, refPtr) {\n    if (isRemotePtr(refDetails) && refDetails.missing === true) {\n      results.errors.push({\n        code: 'UNRESOLVABLE_REFERENCE',\n        message: 'Reference could not be resolved: ' + sanitizeRef(documentMetadata.swaggerVersion, refDetails.uri),\n        path: JsonRefs.pathFromPtr(refPtr).concat('$ref')\n      });\n    }\n  });\n};\n\nvar validateExist = function (data, val, codeSuffix, msgPrefix, path, dest) {\n  if (!_.isUndefined(data) && data.indexOf(val) === -1) {\n    createErrorOrWarning('UNRESOLVABLE_' + codeSuffix, msgPrefix + ' could not be resolved: ' + val, path, dest);\n  }\n};\n\nvar processAuthRefs = function (documentMetadata, authRefs, path, results) {\n  var code = documentMetadata.swaggerVersion === '1.2' ? 'AUTHORIZATION' : 'SECURITY_DEFINITION';\n  var msgPrefix = code === 'AUTHORIZATION' ? 'Authorization' : 'Security definition';\n\n  if (documentMetadata.swaggerVersion === '1.2') {\n    _.reduce(authRefs, function (seenNames, scopes, name) {\n      var authPtr = ['authorizations', name];\n      var aPath = path.concat([name]);\n\n      // Add reference or record unresolved authorization\n      if (addReference(documentMetadata, authPtr, aPath, results)) {\n        _.reduce(scopes, function (seenScopes, scope, index) {\n          var sPath = aPath.concat(index.toString(), 'scope');\n          var sPtr = authPtr.concat(['scopes', scope.scope]);\n\n          validateNoExist(seenScopes, scope.scope, code + '_SCOPE_REFERENCE', msgPrefix + ' scope reference', sPath,\n                          results.warnings);\n\n          // Add reference or record unresolved authorization scope\n          addReference(documentMetadata, sPtr, sPath, results);\n\n          return seenScopes.concat(scope.scope);\n        }, []);\n      }\n\n      return seenNames.concat(name);\n    }, []);\n  } else {\n    _.reduce(authRefs, function (seenNames, scopes, index) {\n      _.each(scopes, function (scopes, name) {\n        var authPtr = ['securityDefinitions', name];\n        var authRefPath = path.concat(index.toString(), name);\n\n        // Ensure the security definition isn't referenced more than once (Swagger 2.0+)\n        validateNoExist(seenNames, name, code + '_REFERENCE', msgPrefix + ' reference', authRefPath,\n                        results.warnings);\n\n        seenNames.push(name);\n\n        // Add reference or record unresolved authorization\n        if (addReference(documentMetadata, authPtr, authRefPath, results)) {\n          _.each(scopes, function (scope, index) {\n            // Add reference or record unresolved authorization scope\n            var sPtr = authPtr.concat(['scopes', scope]);\n            addReference(documentMetadata, sPtr, authRefPath.concat(index.toString()),\n                         results);\n          });\n        }\n      });\n\n      return seenNames;\n    }, []);\n  }\n};\n\nvar resolveRefs = function (apiDOrSO, callback) {\n  var cacheEntry = getDocumentCache(apiDOrSO);\n  var swaggerVersion = helpers.getSwaggerVersion(apiDOrSO);\n  var jsonRefsOptions = {\n    includeInvalid: true,\n    loaderOptions: {\n      processContent: function (res, callback) {\n        callback(undefined, YAML.safeLoad(res.text));\n      }\n    }\n  };\n\n  if (!cacheEntry.resolved) {\n    // For Swagger 1.2, we have to create real JSON References\n    if (swaggerVersion === '1.2') {\n      jsonRefsOptions.refPreProcessor = swagger1RefPreProcesor;\n    }\n\n    // Resolve references\n    JsonRefs.resolveRefs(apiDOrSO, jsonRefsOptions)\n      .then(function (results) {\n        removeCirculars(results.resolved);\n\n        // Fix circular references\n        _.each(results.refs, function (refDetails, refPtr) {\n          if (refDetails.circular) {\n            _.set(results.resolved, JsonRefs.pathFromPtr(refPtr), {});\n          }\n        });\n\n        cacheEntry.referencesMetadata = results.refs;\n        cacheEntry.resolved = results.resolved;\n        cacheEntry.resolvedId = SparkMD5.hash(JSON.stringify(results.resolved));\n\n        callback();\n      })\n      .catch(callback);\n  } else {\n    callback();\n  }\n};\n\nvar validateAgainstSchema = function (spec, schemaOrName, data, callback) {\n  var validator = _.isString(schemaOrName) ? spec.validators[schemaOrName] : helpers.createJsonValidator();\n\n  helpers.registerCustomFormats(data);\n\n  try {\n    validators.validateAgainstSchema(schemaOrName, data, validator);\n  } catch (err) {\n    if (err.failedValidation) {\n      return callback(undefined, err.results);\n    } else {\n      return callback(err);\n    }\n  }\n\n  resolveRefs(data, function (err) {\n    return callback(err);\n  });\n};\n\nvar validateDefinitions = function (documentMetadata, results) {\n  // Validate unused definitions\n  _.each(documentMetadata.definitions, function (metadata, id) {\n    var defPath = JsonRefs.pathFromPtr(id);\n    var defType = defPath[0].substring(0, defPath[0].length - 1);\n    var displayId = documentMetadata.swaggerVersion === '1.2' ? defPath[defPath.length - 1] : id;\n    var code = defType === 'securityDefinition' ? 'SECURITY_DEFINITION' : defType.toUpperCase();\n    var msgPrefix = defType === 'securityDefinition' ?\n                             'Security definition' :\n                             defType.charAt(0).toUpperCase() + defType.substring(1);\n\n    if (metadata.references.length === 0 && !metadata.inline) {\n      // Swagger 1.2 authorization scope\n      if (metadata.scopePath) {\n        code += '_SCOPE';\n        msgPrefix += ' scope';\n        defPath = metadata.scopePath;\n      }\n\n      createUnusedErrorOrWarning(displayId, code, msgPrefix, defPath, results.warnings);\n    }\n  });\n};\n\nvar validateParameters = function (spec, documentMetadata, nPath, parameters, path, results,\n                                   skipMissing) {\n  var createParameterComboError = function (path) {\n    createErrorOrWarning('INVALID_PARAMETER_COMBINATION',\n                         'API cannot have a a body parameter and a ' +\n                           (spec.version === '1.2' ? 'form' : 'formData') + ' parameter',\n                         path, results.errors);\n  };\n  var pathParams = [];\n  var seenBodyParam = false;\n  var seenFormParam = false;\n\n  _.reduce(parameters, function (seenParameters, parameter, index) {\n    var pPath = path.concat(['parameters', index.toString()]);\n\n    // Unresolved parameter\n    if (_.isUndefined(parameter)) {\n      return;\n    }\n\n    // Identify duplicate parameter names\n    validateNoExist(seenParameters, parameter.name, 'PARAMETER', 'Parameter', pPath.concat('name'),\n                    results.errors);\n\n    // Keep track of body and path parameters\n    if (parameter.paramType === 'body' || parameter.in === 'body') {\n      if (seenBodyParam === true) {\n        createErrorOrWarning('DUPLICATE_API_BODY_PARAMETER', 'API has more than one body parameter', pPath,\n                             results.errors);\n      } else if (seenFormParam === true) {\n        createParameterComboError(pPath);\n      }\n\n      seenBodyParam = true;\n    } else if (parameter.paramType === 'form' || parameter.in === 'formData') {\n      if (seenBodyParam === true) {\n        createParameterComboError(pPath);\n      }\n\n      seenFormParam = true;\n    } else if (parameter.paramType === 'path' || parameter.in === 'path') {\n      if (nPath.args.indexOf(parameter.name) === -1) {\n        createErrorOrWarning('UNRESOLVABLE_API_PATH_PARAMETER',\n                             'API path parameter could not be resolved: ' + parameter.name, pPath.concat('name'),\n                             results.errors);\n      }\n\n      pathParams.push(parameter.name);\n    }\n\n    if (spec.primitives.indexOf(parameter.type) === -1 && spec.version === '1.2') {\n      addReference(documentMetadata, '#/models/' + parameter.type, pPath.concat('type'), results);\n    }\n\n    // Validate parameter constraints\n    validateSchemaConstraints(documentMetadata, parameter, pPath, results, parameter.skipErrors);\n\n    return seenParameters.concat(parameter.name);\n  }, []);\n\n  // Validate missing path parameters (in path but not in operation.parameters)\n  if (_.isUndefined(skipMissing) || skipMissing === false) {\n    _.each(_.difference(nPath.args, pathParams), function (unused) {\n      createErrorOrWarning('MISSING_API_PATH_PARAMETER', 'API requires path parameter but it is not defined: ' + unused,\n                           documentMetadata.swaggerVersion === '1.2' ? path.slice(0, 2).concat('path') : path,\n                           results.errors);\n    });\n  }\n};\n\nvar validateSwagger1_2 = function (spec, resourceListing, apiDeclarations, callback) { // jshint ignore:line\n  var adResourcePaths = [];\n  var rlDocumentMetadata = getDocumentCache(resourceListing);\n  var rlResourcePaths = [];\n  var results = {\n    errors: [],\n    warnings: [],\n    apiDeclarations: []\n  };\n\n  // Process Resource Listing resource definitions\n  rlResourcePaths = _.reduce(resourceListing.apis, function (seenPaths, api, index) {\n    // Identify duplicate resource paths defined in the Resource Listing\n    validateNoExist(seenPaths, api.path, 'RESOURCE_PATH', 'Resource path', ['apis', index.toString(), 'path'],\n                    results.errors);\n\n    seenPaths.push(api.path);\n\n    return seenPaths;\n  }, []);\n\n  // Process Resource Listing definitions (authorizations)\n  processDocument(rlDocumentMetadata, results);\n\n\n  // Process each API Declaration\n  adResourcePaths = _.reduce(apiDeclarations, function (seenResourcePaths, apiDeclaration, index) {\n    var aResults = results.apiDeclarations[index] = {\n      errors: [],\n      warnings: []\n    };\n    var adDocumentMetadata = getDocumentCache(apiDeclaration);\n\n    // Identify duplicate resource paths defined in the API Declarations\n    validateNoExist(seenResourcePaths, apiDeclaration.resourcePath, 'RESOURCE_PATH', 'Resource path',\n                    ['resourcePath'], aResults.errors);\n\n    if (adResourcePaths.indexOf(apiDeclaration.resourcePath) === -1) {\n      // Identify unused resource paths defined in the API Declarations\n      validateExist(rlResourcePaths, apiDeclaration.resourcePath, 'RESOURCE_PATH', 'Resource path',\n                    ['resourcePath'], aResults.errors);\n\n      seenResourcePaths.push(apiDeclaration.resourcePath);\n    }\n\n    // TODO: Process authorization references\n    // Not possible due to https://github.com/swagger-api/swagger-spec/issues/159\n\n    // Process models\n    processDocument(adDocumentMetadata, aResults);\n\n    // Process the API definitions\n    _.reduce(apiDeclaration.apis, function (seenPaths, api, index) {\n      var aPath = ['apis', index.toString()];\n      var nPath = normalizePath(api.path);\n\n      // Validate duplicate resource path\n      if (seenPaths.indexOf(nPath.path) > -1) {\n        createErrorOrWarning('DUPLICATE_API_PATH', 'API path (or equivalent) already defined: ' + api.path,\n                             aPath.concat('path'), aResults.errors);\n      } else {\n        seenPaths.push(nPath.path);\n      }\n\n      // Process the API operations\n      _.reduce(api.operations, function (seenMethods, operation, index) {\n        var oPath = aPath.concat(['operations', index.toString()]);\n\n        // Validate duplicate operation method\n        validateNoExist(seenMethods, operation.method, 'OPERATION_METHOD', 'Operation method', oPath.concat('method'),\n                        aResults.errors);\n\n        // Keep track of the seen methods\n        seenMethods.push(operation.method);\n\n        // Keep track of operation types\n        if (spec.primitives.indexOf(operation.type) === -1 && spec.version === '1.2') {\n          addReference(adDocumentMetadata, '#/models/' + operation.type, oPath.concat('type'), aResults);\n        }\n\n        // Process authorization references\n        processAuthRefs(rlDocumentMetadata, operation.authorizations, oPath.concat('authorizations'), aResults);\n\n        // Validate validate inline constraints\n        validateSchemaConstraints(adDocumentMetadata, operation, oPath, aResults);\n\n        // Validate parameters\n        validateParameters(spec, adDocumentMetadata, nPath, operation.parameters, oPath, aResults);\n\n        // Validate unique response code\n        _.reduce(operation.responseMessages, function (seenResponseCodes, responseMessage, index) {\n          var rmPath = oPath.concat(['responseMessages', index.toString()]);\n\n          validateNoExist(seenResponseCodes, responseMessage.code, 'RESPONSE_MESSAGE_CODE', 'Response message code',\n                          rmPath.concat(['code']), aResults.errors);\n\n          // Validate missing model\n          if (responseMessage.responseModel) {\n            addReference(adDocumentMetadata, '#/models/' + responseMessage.responseModel,\n                         rmPath.concat('responseModel'), aResults);\n          }\n\n          return seenResponseCodes.concat(responseMessage.code);\n        }, []);\n\n        return seenMethods;\n      }, []);\n\n      return seenPaths;\n    }, []);\n\n    // Validate API Declaration definitions\n    validateDefinitions(adDocumentMetadata, aResults);\n\n    return seenResourcePaths;\n  }, []);\n\n  // Validate API Declaration definitions\n  validateDefinitions(rlDocumentMetadata, results);\n\n  // Identify unused resource paths defined in the Resource Listing\n  _.each(_.difference(rlResourcePaths, adResourcePaths), function (unused) {\n    var index = rlResourcePaths.indexOf(unused);\n\n    createUnusedErrorOrWarning(resourceListing.apis[index].path, 'RESOURCE_PATH', 'Resource path',\n                               ['apis', index.toString(), 'path'], results.errors);\n  });\n\n  callback(undefined, results);\n};\n\nvar validateSwagger2_0 = function (spec, swaggerObject, callback) { // jshint ignore:line\n  var documentMetadata = getDocumentCache(swaggerObject);\n  var results = {\n    errors: [],\n    warnings: []\n  };\n\n  // Process definitions\n  processDocument(documentMetadata, results);\n\n  // Process security references\n  processAuthRefs(documentMetadata, swaggerObject.security, ['security'], results);\n\n  _.reduce(documentMetadata.resolved.paths, function (seenPaths, path, name) {\n    var pPath = ['paths', name];\n    var nPath = normalizePath(name);\n\n    // Validate duplicate resource path\n    if (seenPaths.indexOf(nPath.path) > -1) {\n      createErrorOrWarning('DUPLICATE_API_PATH', 'API path (or equivalent) already defined: ' + name, pPath,\n                           results.errors);\n    }\n\n    // Validate parameters\n    validateParameters(spec, documentMetadata, nPath, path.parameters, pPath, results, true);\n\n    // Validate the Operations\n    _.each(path, function (operation, method) {\n      var cParams = [];\n      var oPath = pPath.concat(method);\n      var seenParams = [];\n\n      if (validOptionNames.indexOf(method) === -1) {\n        return;\n      }\n\n      // Process security references\n      processAuthRefs(documentMetadata, operation.security, oPath.concat('security'), results);\n\n      // Compose parameters from path global parameters and operation parameters\n      _.each(operation.parameters, function (parameter) {\n        // Can happen with invalid references\n        if (_.isUndefined(parameter)) {\n          return;\n        }\n\n        cParams.push(parameter);\n\n        seenParams.push(parameter.name + ':' + parameter.in);\n      });\n\n      _.each(path.parameters, function (parameter) {\n        var cloned = _.cloneDeep(parameter);\n\n        // The only errors that can occur here are schema constraint validation errors which are already reported above\n        // so do not report them again.\n        cloned.skipErrors = true;\n\n        if (seenParams.indexOf(parameter.name + ':' + parameter.in) === -1) {\n          cParams.push(cloned);\n        }\n      });\n\n      // Validate parameters\n      validateParameters(spec, documentMetadata, nPath, cParams, oPath, results);\n\n      // Validate responses\n      _.each(operation.responses, function (response, responseCode) {\n        // Do not process references to missing responses\n        if (!_.isUndefined(response)) {\n          // Validate validate inline constraints\n          validateSchemaConstraints(documentMetadata, response, oPath.concat('responses', responseCode), results);\n        }\n      });\n    });\n\n    return seenPaths.concat(nPath.path);\n  }, []);\n\n  // Validate definitions\n  validateDefinitions(documentMetadata, results);\n\n  callback(undefined, results);\n};\n\nvar validateSemantically = function (spec, rlOrSO, apiDeclarations, callback) {\n  var cbWrapper = function (err, results) {\n    callback(err, helpers.formatResults(results));\n  };\n  if (spec.version === '1.2') {\n    validateSwagger1_2(spec, rlOrSO, apiDeclarations, cbWrapper); // jshint ignore:line\n  } else {\n    validateSwagger2_0(spec, rlOrSO, cbWrapper); // jshint ignore:line\n  }\n};\n\nvar validateStructurally = function (spec, rlOrSO, apiDeclarations, callback) {\n  validateAgainstSchema(spec, spec.version === '1.2' ? 'resourceListing.json' : 'schema.json', rlOrSO,\n                        function (err, results) {\n                          if (err) {\n                            return callback(err);\n                          }\n\n                          // Only validate the API Declarations if the API is 1.2 and the Resource Listing was valid\n                          if (!results && spec.version === '1.2') {\n                            results = {\n                              errors: [],\n                              warnings: [],\n                              apiDeclarations: []\n                            };\n\n                            async.map(apiDeclarations, function (apiDeclaration, callback2) {\n                              validateAgainstSchema(spec, 'apiDeclaration.json', apiDeclaration, callback2);\n                            }, function (err, allResults) {\n                              if (err) {\n                                return callback(err);\n                              }\n\n                              _.each(allResults, function (result, index) {\n                                results.apiDeclarations[index] = result;\n                              });\n\n                              callback(undefined, results);\n                            });\n                          } else {\n                            callback(undefined, results);\n                          }\n                        });\n};\n\n/**\n * Creates a new Swagger specification object.\n *\n * @param {string} version - The Swagger version\n *\n * @constructor\n */\nvar Specification = function (version) {\n  var that = this;\n  var createValidators = function (spec, validatorsMap) {\n    return _.reduce(validatorsMap, function (result, schemas, schemaName) {\n      result[schemaName] = helpers.createJsonValidator(schemas);\n\n      return result;\n    }, {});\n  };\n  var fixSchemaId = function (schemaName) {\n    // Swagger 1.2 schema files use one id but use a different id when referencing schema files.  We also use the schema\n    // file name to reference the schema in ZSchema.  To fix this so that the JSON Schema validator works properly, we\n    // need to set the id to be the name of the schema file.\n    var fixed = _.cloneDeep(that.schemas[schemaName]);\n\n    fixed.id = schemaName;\n\n    return fixed;\n  };\n  var primitives = ['string', 'number', 'boolean', 'integer', 'array'];\n\n  switch (version) {\n  case '1.2':\n    this.docsUrl = 'https://github.com/swagger-api/swagger-spec/blob/master/versions/1.2.md';\n    this.primitives = _.union(primitives, ['void', 'File']);\n    this.schemasUrl = 'https://github.com/swagger-api/swagger-spec/tree/master/schemas/v1.2';\n\n    // Here explicitly to allow browserify to work\n    this.schemas = {\n      'apiDeclaration.json': require('../schemas/1.2/apiDeclaration.json'),\n      'authorizationObject.json': require('../schemas/1.2/authorizationObject.json'),\n      'dataType.json': require('../schemas/1.2/dataType.json'),\n      'dataTypeBase.json': require('../schemas/1.2/dataTypeBase.json'),\n      'infoObject.json': require('../schemas/1.2/infoObject.json'),\n      'modelsObject.json': require('../schemas/1.2/modelsObject.json'),\n      'oauth2GrantType.json': require('../schemas/1.2/oauth2GrantType.json'),\n      'operationObject.json': require('../schemas/1.2/operationObject.json'),\n      'parameterObject.json': require('../schemas/1.2/parameterObject.json'),\n      'resourceListing.json': require('../schemas/1.2/resourceListing.json'),\n      'resourceObject.json': require('../schemas/1.2/resourceObject.json')\n    };\n\n    this.validators = createValidators(this, {\n      'apiDeclaration.json': _.map([\n        'dataTypeBase.json',\n        'modelsObject.json',\n        'oauth2GrantType.json',\n        'authorizationObject.json',\n        'parameterObject.json',\n        'operationObject.json',\n        'apiDeclaration.json'\n      ], fixSchemaId),\n      'resourceListing.json': _.map([\n        'resourceObject.json',\n        'infoObject.json',\n        'oauth2GrantType.json',\n        'authorizationObject.json',\n        'resourceListing.json'\n      ], fixSchemaId)\n    });\n\n    break;\n\n  case '2.0':\n    this.docsUrl = 'https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md';\n    this.primitives = _.union(primitives, ['file']);\n    this.schemasUrl = 'https://github.com/swagger-api/swagger-spec/tree/master/schemas/v2.0';\n\n    // Here explicitly to allow browserify to work\n    this.schemas = {\n      'schema.json': require('../schemas/2.0/schema.json')\n    };\n\n    this.validators = createValidators(this, {\n      'schema.json': [fixSchemaId('schema.json')]\n    });\n\n    break;\n\n  default:\n    throw new Error(version + ' is an unsupported Swagger specification version');\n  }\n\n  this.version = version;\n};\n\n/**\n * Returns the result of the validation of the Swagger document(s).\n *\n * @param {object} rlOrSO - The Swagger Resource Listing (1.2) or Swagger Object (2.0)\n * @param {object[]} [apiDeclarations] - The array of Swagger API Declarations (1.2)\n * @param {resultCallback} callback - The result callback\n *\n * @returns undefined if validation passes or an object containing errors and/or warnings\n * @throws Error if the arguments provided are not valid\n */\nSpecification.prototype.validate = function (rlOrSO, apiDeclarations, callback) {\n  // Validate arguments\n  switch (this.version) {\n  case '1.2':\n    // Validate arguments\n    if (_.isUndefined(rlOrSO)) {\n      throw new Error('resourceListing is required');\n    } else if (!_.isPlainObject(rlOrSO)) {\n      throw new TypeError('resourceListing must be an object');\n    }\n\n    if (_.isUndefined(apiDeclarations)) {\n      throw new Error('apiDeclarations is required');\n    } else if (!_.isArray(apiDeclarations)) {\n      throw new TypeError('apiDeclarations must be an array');\n    }\n\n    break;\n\n  case '2.0':\n    // Validate arguments\n    if (_.isUndefined(rlOrSO)) {\n      throw new Error('swaggerObject is required');\n    } else if (!_.isPlainObject(rlOrSO)) {\n      throw new TypeError('swaggerObject must be an object');\n    }\n\n    break;\n  }\n\n  if (this.version === '2.0') {\n    callback = arguments[1];\n  }\n\n  if (_.isUndefined(callback)) {\n    throw new Error('callback is required');\n  } else if (!_.isFunction(callback)) {\n    throw new TypeError('callback must be a function');\n  }\n\n  // For Swagger 2.0, make sure apiDeclarations is an empty array\n  if (this.version === '2.0') {\n    apiDeclarations = [];\n  }\n\n  var that = this;\n\n  // Perform the validation\n  validateStructurally(this, rlOrSO, apiDeclarations, function (err, result) {\n    if (err || helpers.formatResults(result)) {\n      callback(err, result);\n    } else {\n      validateSemantically(that, rlOrSO, apiDeclarations, callback);\n    }\n  });\n};\n\n/**\n * Returns a JSON Schema representation of a composed model based on its id or reference.\n *\n * Note: For Swagger 1.2, we only perform structural validation prior to composing the model.\n *\n * @param {object} apiDOrSO - The Swagger Resource API Declaration (1.2) or the Swagger Object (2.0)\n * @param {string} modelIdOrRef - The model id (1.2) or the reference to the model (1.2 or 2.0)\n * @param {resultCallback} callback - The result callback\n *\n * @returns the object representing a composed object\n *\n * @throws Error if there are validation errors while creating\n */\nSpecification.prototype.composeModel = function (apiDOrSO, modelIdOrRef, callback) {\n  var swaggerVersion = helpers.getSwaggerVersion(apiDOrSO);\n  var doComposition = function (err, results) {\n    var documentMetadata;\n\n    if (err) {\n      return callback(err);\n    } else if (helpers.getErrorCount(results) > 0) {\n      return handleValidationError(results, callback);\n    }\n\n    documentMetadata = getDocumentCache(apiDOrSO);\n    results = {\n      errors: [],\n      warnings: []\n    };\n\n    processDocument(documentMetadata, results);\n\n    if (!documentMetadata.definitions[modelIdOrRef]) {\n      return callback();\n    }\n\n    if (helpers.getErrorCount(results) > 0) {\n      return handleValidationError(results, callback);\n    }\n\n    callback(undefined, getOrComposeSchema(documentMetadata, modelIdOrRef));\n  };\n\n  switch (this.version) {\n  case '1.2':\n    // Validate arguments\n    if (_.isUndefined(apiDOrSO)) {\n      throw new Error('apiDeclaration is required');\n    } else if (!_.isPlainObject(apiDOrSO)) {\n      throw new TypeError('apiDeclaration must be an object');\n    }\n\n    if (_.isUndefined(modelIdOrRef)) {\n      throw new Error('modelId is required');\n    }\n\n    break;\n\n  case '2.0':\n    // Validate arguments\n    if (_.isUndefined(apiDOrSO)) {\n      throw new Error('swaggerObject is required');\n    } else if (!_.isPlainObject(apiDOrSO)) {\n      throw new TypeError('swaggerObject must be an object');\n    }\n\n    if (_.isUndefined(modelIdOrRef)) {\n      throw new Error('modelRef is required');\n    }\n\n    break;\n  }\n\n  if (_.isUndefined(callback)) {\n    throw new Error('callback is required');\n  } else if (!_.isFunction(callback)) {\n    throw new TypeError('callback must be a function');\n  }\n\n  if (modelIdOrRef.charAt(0) !== '#') {\n    if (this.version === '1.2') {\n      modelIdOrRef = '#/models/' + modelIdOrRef;\n    } else {\n      throw new Error('modelRef must be a JSON Pointer');\n    }\n  }\n\n  // Ensure the document is valid first\n  if (swaggerVersion === '1.2') {\n    validateAgainstSchema(this, 'apiDeclaration.json', apiDOrSO, doComposition);\n  } else {\n    this.validate(apiDOrSO, doComposition);\n  }\n};\n\n/**\n * Validates a model based on its id.\n *\n * Note: For Swagger 1.2, we only perform structural validation prior to composing the model.\n *\n * @param {object} apiDOrSO - The Swagger Resource API Declaration (1.2) or the Swagger Object (2.0)\n * @param {string} modelIdOrRef - The model id (1.2) or the reference to the model (1.2 or 2.0)\n * @param {*} data - The model to validate\n * @param {resultCallback} callback - The result callback\n *\n * @returns undefined if validation passes or an object containing errors and/or warnings\n *\n * @throws Error if there are validation errors while creating\n */\nSpecification.prototype.validateModel = function (apiDOrSO, modelIdOrRef, data, callback) {\n  switch (this.version) {\n  case '1.2':\n    // Validate arguments\n    if (_.isUndefined(apiDOrSO)) {\n      throw new Error('apiDeclaration is required');\n    } else if (!_.isPlainObject(apiDOrSO)) {\n      throw new TypeError('apiDeclaration must be an object');\n    }\n\n    if (_.isUndefined(modelIdOrRef)) {\n      throw new Error('modelId is required');\n    }\n\n    break;\n\n  case '2.0':\n    // Validate arguments\n    if (_.isUndefined(apiDOrSO)) {\n      throw new Error('swaggerObject is required');\n    } else if (!_.isPlainObject(apiDOrSO)) {\n      throw new TypeError('swaggerObject must be an object');\n    }\n\n    if (_.isUndefined(modelIdOrRef)) {\n      throw new Error('modelRef is required');\n    }\n\n    break;\n  }\n\n  if (_.isUndefined(data)) {\n    throw new Error('data is required');\n  }\n\n  if (_.isUndefined(callback)) {\n    throw new Error('callback is required');\n  } else if (!_.isFunction(callback)) {\n    throw new TypeError('callback must be a function');\n  }\n\n  var that = this;\n\n  this.composeModel(apiDOrSO, modelIdOrRef, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n\n    validateAgainstSchema(that, result, data, callback);\n  });\n};\n\n/**\n * Returns a fully resolved document or document fragment.  (Does not perform validation as this is typically called\n * after validation occurs.))\n *\n * @param {object} document - The document to resolve or the document containing the reference to resolve\n * @param {string} [ptr] - The JSON Pointer or undefined to return the whole document\n * @param {resultCallback} callback - The result callback\n *\n * @returns the fully resolved document or fragment\n *\n * @throws Error if there are upstream errors\n */\nSpecification.prototype.resolve = function (document, ptr, callback) {\n  var documentMetadata;\n  var respond = function (document) {\n    if (_.isString(ptr)) {\n      return callback(undefined, traverse(document).get(JsonRefs.pathFromPtr(ptr)));\n    } else {\n      return callback(undefined, document);\n    }\n  };\n\n  // Validate arguments\n  if (_.isUndefined(document)) {\n    throw new Error('document is required');\n  } else if (!_.isPlainObject(document)) {\n    throw new TypeError('document must be an object');\n  }\n\n  if (arguments.length === 2) {\n    callback = arguments[1];\n    ptr = undefined;\n  }\n\n  if (!_.isUndefined(ptr) && !_.isString(ptr)) {\n    throw new TypeError('ptr must be a JSON Pointer string');\n  }\n\n  if (_.isUndefined(callback)) {\n    throw new Error('callback is required');\n  } else if (!_.isFunction(callback)) {\n    throw new TypeError('callback must be a function');\n  }\n\n  documentMetadata = getDocumentCache(document);\n\n  // Swagger 1.2 is not supported due to invalid JSON References being used.  Even if the JSON References were valid,\n  // the JSON Schema for Swagger 1.2 do not allow JavaScript objects in all places where the resoution would occur.\n  if (documentMetadata.swaggerVersion === '1.2') {\n    throw new Error('Swagger 1.2 is not supported');\n  }\n\n  if (!documentMetadata.resolved) {\n    // Ensure the document is valid first\n    this.validate(document, function (err, results) {\n      if (err) {\n        return callback(err);\n      } else if (helpers.getErrorCount(results) > 0) {\n        return handleValidationError(results, callback);\n      }\n\n      return respond(documentMetadata.resolved);\n    });\n  } else {\n    return respond(documentMetadata.resolved);\n  }\n};\n\n/**\n * Converts the Swagger 1.2 documents to a Swagger 2.0 document.\n *\n * @param {object} resourceListing - The Swagger Resource Listing\n * @param {object[]} [apiDeclarations] - The array of Swagger API Declarations\n * @param {boolean=false} [skipValidation] - Whether or not to skip validation\n * @param {resultCallback} callback - The result callback\n *\n * @returns the converted Swagger document\n *\n * @throws Error if the arguments provided are not valid\n */\nSpecification.prototype.convert = function (resourceListing, apiDeclarations, skipValidation, callback) {\n  var doConvert = function (resourceListing, apiDeclarations) {\n    callback(undefined, swaggerConverter(resourceListing, apiDeclarations));\n  };\n\n  if (this.version !== '1.2') {\n    throw new Error('Specification#convert only works for Swagger 1.2');\n  }\n\n  // Validate arguments\n  if (_.isUndefined(resourceListing)) {\n    throw new Error('resourceListing is required');\n  } else if (!_.isPlainObject(resourceListing)) {\n    throw new TypeError('resourceListing must be an object');\n  }\n\n  // API Declarations are optional because swagger-converter was written to support it\n  if (_.isUndefined(apiDeclarations)) {\n    apiDeclarations = [];\n  }\n\n  if (!_.isArray(apiDeclarations)) {\n    throw new TypeError('apiDeclarations must be an array');\n  }\n\n  if (arguments.length < 4) {\n    callback = arguments[arguments.length - 1];\n  }\n\n  if (_.isUndefined(callback)) {\n    throw new Error('callback is required');\n  } else if (!_.isFunction(callback)) {\n    throw new TypeError('callback must be a function');\n  }\n\n  if (skipValidation === true) {\n    doConvert(resourceListing, apiDeclarations);\n  } else {\n    this.validate(resourceListing, apiDeclarations, function (err, results) {\n      if (err) {\n        return callback(err);\n      } else if (helpers.getErrorCount(results) > 0) {\n        return handleValidationError(results, callback);\n      }\n\n      doConvert(resourceListing, apiDeclarations);\n    });\n  }\n};\n\nmodule.exports.v1 = module.exports.v1_2 = new Specification('1.2'); // jshint ignore:line\nmodule.exports.v2 = module.exports.v2_0 = new Specification('2.0'); // jshint ignore:line\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/lib/validators.js":"/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Apigee Corporation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\n// Done this way to make the Browserify build smaller\nvar _ = {\n  cloneDeep: require('lodash-compat/lang/cloneDeep'),\n  each: require('lodash-compat/collection/each'),\n  isArray: require('lodash-compat/lang/isArray'),\n  isBoolean: require('lodash-compat/lang/isBoolean'),\n  isDate: require('lodash-compat/lang/isDate'),\n  isFinite: require('lodash-compat/lang/isFinite'),\n  isNull: require('lodash-compat/lang/isNull'),\n  isNumber: require('lodash-compat/lang/isNumber'),\n  isPlainObject: require('lodash-compat/lang/isPlainObject'),\n  isString: require('lodash-compat/lang/isString'),\n  isUndefined: require('lodash-compat/lang/isUndefined'),\n  map: require('lodash-compat/collection/map'),\n  union: require('lodash-compat/array/union'),\n  uniq: require('lodash-compat/array/uniq')\n};\nvar helpers = require('./helpers');\n\n// http://tools.ietf.org/html/rfc3339#section-5.6\nvar dateRegExp = /^([0-9]{4})-([0-9]{2})-([0-9]{2})$/;\n// http://tools.ietf.org/html/rfc3339#section-5.6\nvar dateTimeRegExp = /^([0-9]{2}):([0-9]{2}):([0-9]{2})(.[0-9]+)?(z|([+-][0-9]{2}:[0-9]{2}))$/;\nvar isValidDate = function (date) {\n  var day;\n  var matches;\n  var month;\n\n  if (_.isDate(date)) {\n    return true;\n  }\n\n  if (!_.isString(date)) {\n    date = date.toString();\n  }\n\n  matches = dateRegExp.exec(date);\n\n  if (matches === null) {\n    return false;\n  }\n\n  day = matches[3];\n  month = matches[2];\n\n  if (month < '01' || month > '12' || day < '01' || day > '31') {\n    return false;\n  }\n\n  return true;\n};\nvar isValidDateTime = function (dateTime) {\n  var hour;\n  var date;\n  var time;\n  var matches;\n  var minute;\n  var parts;\n  var second;\n\n  if (_.isDate(dateTime)) {\n    return true;\n  }\n\n  if (!_.isString(dateTime)) {\n    dateTime = dateTime.toString();\n  }\n\n  parts = dateTime.toLowerCase().split('t');\n  date = parts[0];\n  time = parts.length > 1 ? parts[1] : undefined;\n\n  if (!isValidDate(date)) {\n    return false;\n  }\n\n  matches = dateTimeRegExp.exec(time);\n\n  if (matches === null) {\n    return false;\n  }\n\n  hour = matches[1];\n  minute = matches[2];\n  second = matches[3];\n\n  if (hour > '23' || minute > '59' || second > '59') {\n    return false;\n  }\n\n  return true;\n};\n\nvar throwErrorWithCode = function (code, msg) {\n  var err = new Error(msg);\n\n  err.code = code;\n  err.failedValidation = true;\n\n  throw err;\n};\n\nmodule.exports.validateAgainstSchema = function (schemaOrName, data, validator) {\n  var sanitizeError = function (obj) {\n    // Make anyOf/oneOf errors more human readable (Issue 200)\n    var defType = ['additionalProperties', 'items'].indexOf(obj.path[obj.path.length - 1]) > -1 ?\n          'schema' :\n          obj.path[obj.path.length - 2];\n\n    if (['ANY_OF_MISSING', 'ONE_OF_MISSING'].indexOf(obj.code) > -1) {\n      switch (defType) {\n      case 'parameters':\n        defType = 'parameter';\n        break;\n\n      case 'responses':\n        defType = 'response';\n        break;\n\n      case 'schema':\n        defType += ' ' + obj.path[obj.path.length - 1];\n\n        // no default\n      }\n\n      obj.message = 'Not a valid ' + defType + ' definition';\n    }\n\n    // Remove the params portion of the error\n    delete obj.params;\n    delete obj.schemaId;\n\n    if (obj.inner) {\n      _.each(obj.inner, function (nObj) {\n        sanitizeError(nObj);\n      });\n    }\n  };\n  var schema = _.isPlainObject(schemaOrName) ? _.cloneDeep(schemaOrName) : schemaOrName;\n\n  // We don't check this due to internal usage but if validator is not provided, schemaOrName must be a schema\n  if (_.isUndefined(validator)) {\n    validator = helpers.createJsonValidator([schema]);\n  }\n\n  var valid = validator.validate(data, schema);\n\n  if (!valid) {\n    try {\n      throwErrorWithCode('SCHEMA_VALIDATION_FAILED', 'Failed schema validation');\n    } catch (err) {\n      err.results = {\n        errors: _.map(validator.getLastErrors(), function (err) {\n          sanitizeError(err);\n\n          return err;\n        }),\n        warnings: []\n      };\n\n      throw err;\n    }\n  }\n};\n\n\n/**\n * Validates a schema of type array is properly formed (when necessar).\n *\n * *param {object} schema - The schema object to validate\n *\n * @throws Error if the schema says it's an array but it is not formed properly\n *\n * @see {@link https://github.com/swagger-api/swagger-spec/issues/174}\n */\nvar validateArrayType = module.exports.validateArrayType = function (schema) {\n  // We have to do this manually for now\n  if (schema.type === 'array' && _.isUndefined(schema.items)) {\n    throwErrorWithCode('OBJECT_MISSING_REQUIRED_PROPERTY', 'Missing required property: items');\n  }\n};\n\n/**\n * Validates the request or response content type (when necessary).\n *\n * @param {string[]} gPOrC - The valid consumes at the API scope\n * @param {string[]} oPOrC - The valid consumes at the operation scope\n * @param {object} reqOrRes - The request or response\n *\n * @throws Error if the content type is invalid\n */\nmodule.exports.validateContentType = function (gPOrC, oPOrC, reqOrRes) {\n  // http://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html#sec7.2.1\n  var isResponse = typeof reqOrRes.end === 'function';\n  var contentType = isResponse ? reqOrRes.getHeader('content-type') : reqOrRes.headers['content-type'];\n  var pOrC = _.map(_.union(gPOrC, oPOrC), function (contentType) {\n    return contentType.split(';')[0];\n  });\n\n  if (!contentType) {\n    if (isResponse) {\n      contentType = 'text/plain';\n    } else {\n      contentType = 'application/octet-stream';\n    }\n  }\n\n  contentType = contentType.split(';')[0];\n\n  if (pOrC.length > 0 && (isResponse ?\n                          true :\n                          ['POST', 'PUT'].indexOf(reqOrRes.method) !== -1) && pOrC.indexOf(contentType) === -1) {\n    throw new Error('Invalid content type (' + contentType + ').  These are valid: ' + pOrC.join(', '));\n  }\n};\n\n/**\n * Validates the value against the allowable values (when necessary).\n *\n * @param {*} val - The parameter value\n * @param {string[]} allowed - The allowable values\n *\n * @throws Error if the value is not allowable\n */\nvar validateEnum = module.exports.validateEnum = function (val, allowed) {\n  if (!_.isUndefined(allowed) && !_.isUndefined(val) && allowed.indexOf(val) === -1) {\n    throwErrorWithCode('ENUM_MISMATCH', 'Not an allowable value (' + allowed.join(', ') + '): ' + val);\n  }\n};\n\n/**\n * Validates the value is less than the maximum (when necessary).\n *\n * @param {*} val - The parameter value\n * @param {string} maximum - The maximum value\n * @param {boolean} [exclusive=false] - Whether or not the value includes the maximum in its comparison\n *\n * @throws Error if the value is greater than the maximum\n */\nvar validateMaximum = module.exports.validateMaximum = function (val, maximum, type, exclusive) {\n  var code = exclusive === true ? 'MAXIMUM_EXCLUSIVE' : 'MAXIMUM';\n  var testMax;\n  var testVal;\n\n  if (_.isUndefined(exclusive)) {\n    exclusive = false;\n  }\n\n  if (type === 'integer') {\n    testVal = parseInt(val, 10);\n  } else if (type === 'number') {\n    testVal = parseFloat(val);\n  }\n\n  if (!_.isUndefined(maximum)) {\n    testMax = parseFloat(maximum);\n\n    if (exclusive && testVal >= testMax) {\n      throwErrorWithCode(code, 'Greater than or equal to the configured maximum (' + maximum + '): ' + val);\n    } else if (testVal > testMax) {\n      throwErrorWithCode(code, 'Greater than the configured maximum (' + maximum + '): ' + val);\n    }\n  }\n};\n\n/**\n * Validates the array count is less than the maximum (when necessary).\n *\n * @param {*[]} val - The parameter value\n * @param {number} maxItems - The maximum number of items\n *\n * @throws Error if the value contains more items than allowable\n */\nvar validateMaxItems = module.exports.validateMaxItems = function (val, maxItems) {\n  if (!_.isUndefined(maxItems) && val.length > maxItems) {\n    throwErrorWithCode('ARRAY_LENGTH_LONG', 'Array is too long (' + val.length + '), maximum ' + maxItems);\n  }\n};\n\n/**\n * Validates the value length is less than the maximum (when necessary).\n *\n * @param {*[]} val - The parameter value\n * @param {number} maxLength - The maximum length\n *\n * @throws Error if the value's length is greater than the maximum\n */\nvar validateMaxLength = module.exports.validateMaxLength = function (val, maxLength) {\n  if (!_.isUndefined(maxLength) && val.length > maxLength) {\n    throwErrorWithCode('MAX_LENGTH', 'String is too long (' + val.length + ' chars), maximum ' + maxLength);\n  }\n};\n\n/**\n * Validates the value's property count is greater than the maximum (when necessary).\n *\n * @param {*[]} val - The parameter value\n * @param {number} minProperties - The maximum number of properties\n *\n * @throws Error if the value's property count is less than the maximum\n */\nvar validateMaxProperties = module.exports.validateMaxProperties = function (val, maxProperties) {\n  var propCount = _.isPlainObject(val) ? Object.keys(val).length : 0;\n\n  if (!_.isUndefined(maxProperties) && propCount > maxProperties) {\n    throwErrorWithCode('MAX_PROPERTIES',\n                       'Number of properties is too many (' + propCount + ' properties), maximum ' + maxProperties);\n  }\n};\n\n/**\n * Validates the value array count is greater than the minimum (when necessary).\n *\n * @param {*} val - The parameter value\n * @param {string} minimum - The minimum value\n * @param {boolean} [exclusive=false] - Whether or not the value includes the minimum in its comparison\n *\n * @throws Error if the value is less than the minimum\n */\nvar validateMinimum = module.exports.validateMinimum = function (val, minimum, type, exclusive) {\n  var code = exclusive === true ? 'MINIMUM_EXCLUSIVE' : 'MINIMUM';\n  var testMin;\n  var testVal;\n\n  if (_.isUndefined(exclusive)) {\n    exclusive = false;\n  }\n\n  if (type === 'integer') {\n    testVal = parseInt(val, 10);\n  } else if (type === 'number') {\n    testVal = parseFloat(val);\n  }\n\n  if (!_.isUndefined(minimum)) {\n    testMin = parseFloat(minimum);\n\n    if (exclusive && testVal <= testMin) {\n      throwErrorWithCode(code, 'Less than or equal to the configured minimum (' + minimum + '): ' + val);\n    } else if (testVal < testMin) {\n      throwErrorWithCode(code, 'Less than the configured minimum (' + minimum + '): ' + val);\n    }\n  }\n};\n\n/**\n * Validates the value value contains fewer items than allowed (when necessary).\n *\n * @param {*[]} val - The parameter value\n * @param {number} minItems - The minimum number of items\n *\n * @throws Error if the value contains fewer items than allowable\n */\nvar validateMinItems = module.exports.validateMinItems = function (val, minItems) {\n  if (!_.isUndefined(minItems) && val.length < minItems) {\n    throwErrorWithCode('ARRAY_LENGTH_SHORT', 'Array is too short (' + val.length + '), minimum ' + minItems);\n  }\n};\n\n/**\n * Validates the value length is less than the minimum (when necessary).\n *\n * @param {*[]} val - The parameter value\n * @param {number} minLength - The minimum length\n *\n * @throws Error if the value's length is less than the minimum\n */\nvar validateMinLength = module.exports.validateMinLength = function (val, minLength) {\n  if (!_.isUndefined(minLength) && val.length < minLength) {\n    throwErrorWithCode('MIN_LENGTH', 'String is too short (' + val.length + ' chars), minimum ' + minLength);\n  }\n};\n\n/**\n * Validates the value's property count is less than or equal to the minimum (when necessary).\n *\n * @param {*[]} val - The parameter value\n * @param {number} minProperties - The minimum number of properties\n *\n * @throws Error if the value's property count is less than the minimum\n */\nvar validateMinProperties = module.exports.validateMinProperties = function (val, minProperties) {\n  var propCount = _.isPlainObject(val) ? Object.keys(val).length : 0;\n\n  if (!_.isUndefined(minProperties) && propCount < minProperties) {\n    throwErrorWithCode('MIN_PROPERTIES',\n                       'Number of properties is too few (' + propCount + ' properties), minimum ' + minProperties);\n  }\n};\n\n/**\n * Validates the value is a multiple of the provided number (when necessary).\n *\n * @param {*[]} val - The parameter value\n * @param {number} multipleOf - The number that should divide evenly into the value\n *\n * @throws Error if the value contains fewer items than allowable\n */\nvar validateMultipleOf = module.exports.validateMultipleOf = function (val, multipleOf) {\n  if (!_.isUndefined(multipleOf) && val % multipleOf !== 0) {\n    throwErrorWithCode('MULTIPLE_OF', 'Not a multiple of ' + multipleOf);\n  }\n};\n\n/**\n * Validates the value matches a pattern (when necessary).\n *\n * @param {string} name - The parameter name\n * @param {*} val - The parameter value\n * @param {string} pattern - The pattern\n *\n * @throws Error if the value does not match the pattern\n */\nvar validatePattern = module.exports.validatePattern = function (val, pattern) {\n  if (!_.isUndefined(pattern) && _.isNull(val.match(new RegExp(pattern)))) {\n    throwErrorWithCode('PATTERN', 'Does not match required pattern: ' + pattern);\n  }\n};\n\n/**\n * Validates the value requiredness (when necessary).\n *\n * @param {*} val - The parameter value\n * @param {boolean} required - Whether or not the parameter is required\n *\n * @throws Error if the value is required but is not present\n */\nmodule.exports.validateRequiredness = function (val, required) {\n  if (!_.isUndefined(required) && required === true && _.isUndefined(val)) {\n    throwErrorWithCode('REQUIRED', 'Is required');\n  }\n};\n\n/**\n * Validates the value type and format (when necessary).\n *\n * @param {string} version - The Swagger version\n * @param {*} val - The parameter value\n * @param {string} type - The parameter type\n * @param {string} format - The parameter format\n * @param {boolean} [skipError=false] - Whether or not to skip throwing an error (Useful for validating arrays)\n *\n * @throws Error if the value is not the proper type or format\n */\nvar validateTypeAndFormat = module.exports.validateTypeAndFormat =\n  function validateTypeAndFormat (version, val, type, format, allowEmptyValue, skipError) {\n    var result = true;\n    var oVal = val;\n\n    // If there is an empty value and we allow empty values, the value is always valid\n    if (allowEmptyValue === true && val === '') {\n      return;\n    }\n\n    if (_.isArray(val)) {\n      _.each(val, function (aVal, index) {\n        if (!validateTypeAndFormat(version, aVal, type, format, allowEmptyValue, true)) {\n          throwErrorWithCode('INVALID_TYPE', 'Value at index ' + index + ' is not a valid ' + type + ': ' + aVal);\n        }\n      });\n    } else {\n      switch (type) {\n      case 'boolean':\n        // Coerce the value only for Swagger 1.2\n        if (version === '1.2' && _.isString(val)) {\n          if (val === 'false') {\n            val = false;\n          } else if (val === 'true') {\n            val = true;\n          }\n        }\n\n        result = _.isBoolean(val);\n        break;\n      case 'integer':\n        // Coerce the value only for Swagger 1.2\n        if (version === '1.2' && _.isString(val)) {\n          val = Number(val);\n        }\n\n        result = _.isFinite(val) && (Math.round(val) === val);\n        break;\n      case 'number':\n        // Coerce the value only for Swagger 1.2\n        if (version === '1.2' && _.isString(val)) {\n          val = Number(val);\n        }\n\n        result = _.isFinite(val);\n        break;\n      case 'string':\n        if (!_.isUndefined(format)) {\n          switch (format) {\n          case 'date':\n            result = isValidDate(val);\n            break;\n          case 'date-time':\n            result = isValidDateTime(val);\n            break;\n          }\n        }\n        break;\n      case 'void':\n        result = _.isUndefined(val);\n        break;\n      }\n    }\n\n    if (skipError) {\n      return result;\n    } else if (!result) {\n      throwErrorWithCode('INVALID_TYPE',\n                         type !== 'void' ?\n                           'Not a valid ' + (_.isUndefined(format) ? '' : format + ' ') + type + ': ' + oVal :\n                           'Void does not allow a value');\n    }\n  };\n\n/**\n * Validates the value values are unique (when necessary).\n *\n * @param {string[]} val - The parameter value\n * @param {boolean} isUnique - Whether or not the parameter values are unique\n *\n * @throws Error if the value has duplicates\n */\nvar validateUniqueItems = module.exports.validateUniqueItems = function (val, isUnique) {\n  if (!_.isUndefined(isUnique) && _.uniq(val).length !== val.length) {\n    throwErrorWithCode('ARRAY_UNIQUE', 'Does not allow duplicate values: ' + val.join(', '));\n  }\n};\n\n/**\n * Validates the value against the schema.\n *\n * @param {string} version - The Swagger version\n * @param {object} schema - The schema to use to validate things\n * @param {string[]} path - The path to the schema\n * @param {*} [val] - The value to validate or undefined to use the default value provided by the schema\n *\n * @throws Error if any validation failes\n */\nvar validateSchemaConstraints = module.exports.validateSchemaConstraints = function (version, schema, path, val) {\n  var resolveSchema = function (schema) {\n    var resolved = schema;\n\n    if (resolved.schema) {\n      path = path.concat(['schema']);\n\n      resolved = resolveSchema(resolved.schema);\n    }\n\n    return resolved;\n  };\n\n  var type = schema.type;\n  var allowEmptyValue;\n\n  if (!type) {\n    if (!schema.schema) {\n      if (path[path.length - 2] === 'responses') {\n        type = 'void';\n      } else {\n        type = 'object';\n      }\n    } else {\n      schema = resolveSchema(schema);\n      type = schema.type || 'object';\n    }\n  }\n\n  allowEmptyValue = schema ? schema.allowEmptyValue === true : false;\n\n  try {\n    // Always perform this check even if there is no value\n    if (type === 'array') {\n      validateArrayType(schema);\n    }\n\n    // Default to default value if necessary\n    if (_.isUndefined(val)) {\n      val = version === '1.2' ? schema.defaultValue : schema.default;\n\n      path = path.concat([version === '1.2' ? 'defaultValue' : 'default']);\n    }\n\n    // If there is no explicit default value, return as all validations will fail\n    if (_.isUndefined(val)) {\n      return;\n    }\n\n    if (type === 'array') {\n      _.each(val, function (val, index) {\n        try {\n          validateSchemaConstraints(version, schema.items || {}, path.concat(index.toString()), val);\n        } catch (err) {\n          err.message = 'Value at index ' + index + ' ' + (err.code === 'INVALID_TYPE' ? 'is ' : '') +\n            err.message.charAt(0).toLowerCase() + err.message.substring(1);\n\n          throw err;\n        }\n      });\n    } else {\n      validateTypeAndFormat(version, val, type, schema.format, allowEmptyValue);\n    }\n\n    // Validate enum\n    validateEnum(val, schema.enum);\n\n    // Validate maximum\n    validateMaximum(val, schema.maximum, type, schema.exclusiveMaximum);\n\n\n    // Validate maxItems (Swagger 2.0+)\n    validateMaxItems(val, schema.maxItems);\n\n    // Validate maxLength (Swagger 2.0+)\n    validateMaxLength(val, schema.maxLength);\n\n    // Validate maxProperties (Swagger 2.0+)\n    validateMaxProperties(val, schema.maxProperties);\n\n    // Validate minimum\n    validateMinimum(val, schema.minimum, type, schema.exclusiveMinimum);\n\n    // Validate minItems\n    validateMinItems(val, schema.minItems);\n\n    // Validate minLength (Swagger 2.0+)\n    validateMinLength(val, schema.minLength);\n\n    // Validate minProperties (Swagger 2.0+)\n    validateMinProperties(val, schema.minProperties);\n\n    // Validate multipleOf (Swagger 2.0+)\n    validateMultipleOf(val, schema.multipleOf);\n\n    // Validate pattern (Swagger 2.0+)\n    validatePattern(val, schema.pattern);\n\n    // Validate uniqueItems\n    validateUniqueItems(val, schema.uniqueItems);\n  } catch (err) {\n    err.path = path;\n\n    throw err;\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-metadata.js":"/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Apigee Corporation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\nvar _ = require('lodash-compat');\nvar async = require('async');\nvar bp = require('body-parser');\nvar cHelpers = require('../lib/helpers');\nvar debug = require('debug')('swagger-tools:middleware:metadata');\nvar mHelpers = require('./helpers');\nvar multer = require('multer');\nvar parseurl = require('parseurl');\nvar pathToRegexp = require('path-to-regexp');\n\n// Upstream middlewares\nvar bodyParserOptions = {\n  extended: false\n};\nvar multerOptions = {\n  storage: multer.memoryStorage()\n};\nvar textBodyParserOptions = {\n  type: '*/*'\n};\n\nvar jsonBodyParser = bp.json();\nvar parseQueryString = mHelpers.parseQueryString;\nvar queryParser = function (req, res, next) {\n  if (_.isUndefined(req.query)) {\n    req.query = parseQueryString(req);\n  }\n\n  return next();\n};\nvar realTextBodyParser = bp.text(textBodyParserOptions);\nvar textBodyParser = function (req, res, next) {\n  if (_.isUndefined(req.body)) {\n    realTextBodyParser(req, res, next);\n  } else {\n    next();\n  }\n};\nvar urlEncodedBodyParser = bp.urlencoded(bodyParserOptions);\nvar bodyParser = function (req, res, next) {\n  if (_.isUndefined(req.body)) {\n    urlEncodedBodyParser(req, res, function (err) {\n      if (err) {\n        next(err);\n      } else {\n        jsonBodyParser(req, res, next);\n      }\n    });\n  } else {\n    next();\n  }\n};\nvar realMultiPartParser = multer(multerOptions);\nvar makeMultiPartParser = function (parser) {\n  return function (req, res, next) {\n    if (_.isUndefined(req.files)) {\n      parser(req, res, next);\n    } else {\n      next();\n    }\n  };\n};\n\n// Helper functions\nvar expressStylePath = function (basePath, apiPath) {\n  basePath = parseurl({url: basePath || '/'}).pathname || '/';\n\n  // Make sure the base path starts with '/'\n  if (basePath.charAt(0) !== '/') {\n    basePath = '/' + basePath;\n  }\n\n  // Make sure the base path ends with '/'\n  if (basePath.charAt(basePath.length - 1) !== '/') {\n    basePath = basePath + '/';\n  }\n\n  // Make sure the api path does not start with '/' since the base path will end with '/'\n  if (apiPath.charAt(0) === '/') {\n    apiPath = apiPath.substring(1);\n  }\n\n  // Replace Swagger syntax for path parameters with Express' version (All Swagger path parameters are required)\n  return (basePath + apiPath).replace(/{/g, ':').replace(/}/g, '');\n};\n\nvar processOperationParameters = function (swaggerMetadata, pathKeys, pathMatch, req, res, next) {\n  var version = swaggerMetadata.swaggerVersion;\n  var spec = cHelpers.getSpec(cHelpers.getSwaggerVersion(version === '1.2' ?\n                                                         swaggerMetadata.resourceListing :\n                                                         swaggerMetadata.swaggerObject), true);\n  var parameters = !_.isUndefined(swaggerMetadata) ?\n                     (version === '1.2' ? swaggerMetadata.operation.parameters : swaggerMetadata.operationParameters) :\n                     undefined;\n\n  if (!parameters) {\n    return next();\n  }\n\n  debug('  Processing Parameters');\n\n  var parsers = _.reduce(parameters, function (requestParsers, parameter) {\n    var contentType = req.headers['content-type'];\n    var paramLocation = version === '1.2' ? parameter.paramType : parameter.schema.in;\n    var paramType = mHelpers.getParameterType(version === '1.2' ? parameter : parameter.schema);\n    var parsableBody = mHelpers.isModelType(spec, paramType) || ['array', 'object'].indexOf(paramType) > -1;\n    var parser;\n\n    switch (paramLocation) {\n      case 'body':\n      case 'form':\n      case 'formData':\n        if (paramType.toLowerCase() === 'file' || (contentType && contentType.split(';')[0] === 'multipart/form-data')) {\n          // Do not add a parser, multipart will be handled after\n          break;\n        } else if (paramLocation !== 'body' || parsableBody) {\n          parser = bodyParser;\n        } else {\n          parser = textBodyParser;\n        }\n\n        break;\n\n      case 'query':\n        parser = queryParser;\n\n        break;\n    }\n\n    if (parser && requestParsers.indexOf(parser) === -1) {\n      requestParsers.push(parser);\n    }\n\n    return requestParsers;\n  }, []);\n\n  // Multipart is handled by multer, which needs an array of {parameterName, maxCount}\n  var multiPartFields = _.reduce(parameters, function (fields, parameter) {\n    var paramLocation = version === '1.2' ? parameter.paramType : parameter.schema.in;\n    var paramType = mHelpers.getParameterType(version === '1.2' ? parameter : parameter.schema);\n    var paramName = version === '1.2' ? parameter.name : parameter.schema.name;\n\n    switch (paramLocation) {\n      case 'body':\n      case 'form':\n      case 'formData':\n        if (paramType.toLowerCase() === 'file') {\n          // Swagger spec does not allow array of files, so maxCount should be 1\n          fields.push({name: paramName, maxCount: 1});\n        }\n        break;\n    }\n\n    return fields;\n  }, []);\n  \n  var contentType = req.headers['content-type'];\n  if (multiPartFields.length) {\n    // If there are files, use multer#fields\n    parsers.push(makeMultiPartParser(realMultiPartParser.fields(multiPartFields)));\n  } else if (contentType && contentType.split(';')[0] === 'multipart/form-data') {\n    // If no files but multipart form, use empty multer#array for text fields\n    parsers.push(makeMultiPartParser(realMultiPartParser.array()));\n  }\n\n  async.map(parsers, function (parser, callback) {\n    parser(req, res, callback);\n  }, function (err) {\n    if (err) {\n      return next(err);\n    }\n\n    _.each(parameters, function (parameterOrMetadata, index) {\n      var parameter = version === '1.2' ? parameterOrMetadata : parameterOrMetadata.schema;\n      var pType = mHelpers.getParameterType(parameter);\n      var oVal;\n      var value;\n\n      debug('    %s', parameter.name);\n      debug('      Type: %s%s', pType, !_.isUndefined(parameter.format) ? ' (format: ' + parameter.format + ')': '');\n\n      // Located here to make the debug output pretty\n      oVal = mHelpers.getParameterValue(version, parameter, pathKeys, pathMatch, req, debug);\n      value = mHelpers.convertValue(oVal, _.isUndefined(parameter.schema) ? parameter : parameter.schema, pType);\n\n      debug('      Value: %s', value);\n\n      swaggerMetadata.params[parameter.name] = {\n        path: version === '1.2' ?\n                swaggerMetadata.operationPath.concat(['parameters', index.toString()]) :\n                parameterOrMetadata.path,\n        schema: parameter,\n        originalValue: oVal,\n        value: value\n      };\n    });\n\n    return next();\n  });\n};\nvar processSwaggerDocuments = function (rlOrSO, apiDeclarations) {\n  if (_.isUndefined(rlOrSO)) {\n    throw new Error('rlOrSO is required');\n  } else if (!_.isPlainObject(rlOrSO)) {\n    throw new TypeError('rlOrSO must be an object');\n  }\n\n  var spec = cHelpers.getSpec(cHelpers.getSwaggerVersion(rlOrSO), true);\n  var apiCache = {};\n  var composeParameters = function (apiPath, method, path, operation) {\n    var cParams = [];\n    var seenParams = [];\n\n    _.each(operation.parameters, function (parameter, index) {\n      cParams.push({\n        path: apiPath.concat([method, 'parameters', index.toString()]),\n        schema: parameter\n      });\n\n      seenParams.push(parameter.name + ':' + parameter.in);\n    });\n\n    _.each(path.parameters, function (parameter, index) {\n      if (seenParams.indexOf(parameter.name + ':' + parameter.in) === -1) {\n        cParams.push({\n          path: apiPath.concat(['parameters', index.toString()]),\n          schema: parameter\n        });\n      }\n    });\n\n    return cParams;\n  };\n  var createCacheEntry = function (adOrSO, apiOrPath, indexOrName, indent) {\n    var apiPath = spec.version === '1.2' ? apiOrPath.path : indexOrName;\n    var expressPath = expressStylePath(adOrSO.basePath, spec.version === '1.2' ? apiOrPath.path: indexOrName);\n    var keys = [];\n    var handleSubPaths = !(rlOrSO.paths && rlOrSO.paths[apiPath]['x-swagger-router-handle-subpaths']);\n    var re = pathToRegexp(expressPath, keys, { end: handleSubPaths });\n    var cacheKey = re.toString();\n    var cacheEntry;\n\n    // This is an absolute path, use it as the cache key\n    if (expressPath.indexOf('{') === -1) {\n      cacheKey = expressPath;\n    }\n\n    debug(new Array(indent + 1).join(' ') + 'Found %s: %s',\n          (spec.version === '1.2' ? 'API' : 'Path'),\n          apiPath);\n\n    cacheEntry = apiCache[cacheKey] = spec.version === '1.2' ?\n      {\n        api: apiOrPath,\n        apiDeclaration: adOrSO,\n        apiIndex: indexOrName,\n        keys: keys,\n        params: {},\n        re: re,\n        operations: {},\n        resourceListing: rlOrSO\n      } :\n      {\n        apiPath: indexOrName,\n        path: apiOrPath,\n        keys: keys,\n        re: re,\n        operations: {},\n        swaggerObject: {\n          original: rlOrSO,\n          resolved: adOrSO\n        }\n      };\n\n    return cacheEntry;\n  };\n\n  debug('  Identified Swagger version: %s', spec.version);\n\n  if (spec.version === '1.2') {\n    if (_.isUndefined(apiDeclarations)) {\n      throw new Error('apiDeclarations is required');\n    } else if (!_.isArray(apiDeclarations)) {\n      throw new TypeError('apiDeclarations must be an array');\n    }\n\n    debug('  Number of API Declarations: %d', apiDeclarations.length);\n\n    _.each(apiDeclarations, function (apiDeclaration, adIndex) {\n      debug('  Processing API Declaration %d', adIndex);\n\n      _.each(apiDeclaration.apis, function (api, apiIndex) {\n        var cacheEntry = createCacheEntry(apiDeclaration, api, apiIndex, 4);\n\n        cacheEntry.resourceIndex = adIndex;\n\n        _.each(api.operations, function (operation, operationIndex) {\n          cacheEntry.operations[operation.method.toLowerCase()] = {\n            operation: operation,\n            operationPath: ['apis', apiIndex.toString(), 'operations', operationIndex.toString()],\n            operationParameters: operation.parameters\n          };\n        });\n      });\n    });\n  } else {\n    // To avoid running into issues with references throughout the Swagger object we will use the resolved version.\n    // Getting the resolved version is an asynchronous process but since initializeMiddleware caches the resolved document\n    // this is a synchronous action at this point.\n    spec.resolve(rlOrSO, function (err, resolved) {\n      // Gather the paths, their path regex patterns and the corresponding operations\n      _.each(resolved.paths, function (path, pathName) {\n        var cacheEntry = createCacheEntry(resolved, path, pathName, 2);\n\n        _.each(['get', 'put', 'post', 'delete', 'options', 'head', 'patch'], function (method) {\n          var operation = path[method];\n\n          if (!_.isUndefined(operation)) {\n            cacheEntry.operations[method] = {\n              operation: operation,\n              operationPath: ['paths', pathName, method],\n              // Required since we have to compose parameters based on the operation and the path\n              operationParameters: composeParameters(['paths', pathName], method, path, operation)\n            };\n          }\n        });\n      });\n    });\n  }\n\n  return apiCache;\n};\n\n/**\n * Middleware for providing Swagger information to downstream middleware and request handlers.  For all requests that\n * match a Swagger path, 'req.swagger' will be provided with pertinent Swagger details.  Since Swagger 1.2 and 2.0\n * differ a bit, the structure of this object will change so please view the documentation below for more details:\n *\n *     https://github.com/apigee-127/swagger-tools/blob/master/docs/Middleware.md#swagger-metadata\n *\n * @param {object} rlOrSO - The Resource Listing (Swagger 1.2) or Swagger Object (Swagger 2.0)\n * @param {object[]} apiDeclarations - The array of API Declarations (Swagger 1.2)\n *\n * @returns the middleware function\n */\nexports = module.exports = function (rlOrSO, apiDeclarations) {\n  debug('Initializing swagger-metadata middleware');\n\n  var apiCache = processSwaggerDocuments(rlOrSO, apiDeclarations);\n  var swaggerVersion = cHelpers.getSwaggerVersion(rlOrSO);\n\n  if (_.isUndefined(rlOrSO)) {\n    throw new Error('rlOrSO is required');\n  } else if (!_.isPlainObject(rlOrSO)) {\n    throw new TypeError('rlOrSO must be an object');\n  }\n\n  if (swaggerVersion === '1.2') {\n    if (_.isUndefined(apiDeclarations)) {\n      throw new Error('apiDeclarations is required');\n    } else if (!_.isArray(apiDeclarations)) {\n      throw new TypeError('apiDeclarations must be an array');\n    }\n  }\n\n  return function swaggerMetadata (req, res, next) {\n    var method = req.method.toLowerCase();\n    var path = parseurl(req).pathname;\n    var cacheEntry;\n    var match;\n    var metadata;\n\n    cacheEntry = apiCache[path] || _.find(apiCache, function (metadata) {\n      match = metadata.re.exec(path);\n      return _.isArray(match);\n    });\n\n    debug('%s %s', req.method, req.url);\n    debug('  Is a Swagger path: %s', !_.isUndefined(cacheEntry));\n\n    // Request does not match an API defined in the Swagger document(s)\n    if (!cacheEntry) {\n      return next();\n    }\n\n    metadata = swaggerVersion === '1.2' ?\n      {\n        api: cacheEntry.api,\n        apiDeclaration: cacheEntry.apiDeclaration,\n        apiIndex: cacheEntry.apiIndex,\n        params: {},\n        resourceIndex: cacheEntry.resourceIndex,\n        resourceListing: cacheEntry.resourceListing\n      } :\n    {\n      apiPath : cacheEntry.apiPath,\n      path: cacheEntry.path,\n      params: {},\n      swaggerObject: cacheEntry.swaggerObject.resolved\n    };\n\n    if (_.isPlainObject(cacheEntry.operations[method])) {\n      metadata.operation = cacheEntry.operations[method].operation;\n      metadata.operationPath = cacheEntry.operations[method].operationPath;\n\n      if (swaggerVersion === '1.2') {\n        metadata.authorizations = metadata.operation.authorizations || cacheEntry.apiDeclaration.authorizations;\n      } else {\n        metadata.operationParameters = cacheEntry.operations[method].operationParameters;\n        metadata.security = metadata.operation.security || metadata.swaggerObject.security || [];\n      }\n    }\n\n    metadata.swaggerVersion = swaggerVersion;\n\n    req.swagger = metadata;\n\n    debug('  Is a Swagger operation: %s', !_.isUndefined(metadata.operation));\n\n    if (metadata.operation) {\n      // Process the operation parameters\n      return processOperationParameters(metadata, cacheEntry.keys, match, req, res, next, debug);\n    } else {\n      return next();\n    }\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/helpers.js":"/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Apigee Corporation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\n/* This module contains code that is reused in more than one of the Swagger middlewares */\n\nvar _ = require('lodash-compat');\nvar helpers = require('../lib/helpers');\nvar parseurl = require('parseurl');\nvar qs = require('qs');\n\nvar isModelType = module.exports.isModelType = function (spec, type) {\n  return spec.primitives.indexOf(type) === -1;\n};\n\nvar getParameterType = module.exports.getParameterType = function (schema) {\n  var type = schema.type;\n\n  if (!type && schema.schema) {\n    type = getParameterType(schema.schema);\n  }\n\n  if (!type) {\n    type = 'object';\n  }\n\n  return type;\n};\n\nvar isModelParameter = module.exports.isModelParameter = function (version, param) {\n  var spec = helpers.getSpec(version);\n  var type = getParameterType(param);\n  var isModel = false;\n\n  if (type === 'object' || isModelType(spec, type)) {\n    isModel = true;\n  } else if (type === 'array' && isModelType(spec, param.items ?\n                                             param.items.type || param.items.$ref :\n                                             undefined)) {\n    isModel = true;\n  }\n\n  return isModel;\n};\n\nmodule.exports.getParameterValue = function (version, parameter, pathKeys, match, req, debug) {\n  var defaultVal = version === '1.2' ? parameter.defaultValue : parameter.default;\n  var paramLocation = version === '1.2' ? parameter.paramType : parameter.in;\n  var paramType = getParameterType(parameter);\n  var val;\n\n  // Get the value to validate based on the operation parameter type\n  switch (paramLocation) {\n  case 'body':\n    val = req.body;\n\n    break;\n  case 'form':\n  case 'formData':\n    if (paramType.toLowerCase() === 'file') {\n      if (_.isArray(req.files)) {\n        val = _.find(req.files, function (file) {\n          return file.fieldname === parameter.name;\n        });\n      } else if (!_.isUndefined(req.files)) {\n        val = req.files[parameter.name] ? req.files[parameter.name] : undefined;\n      }\n\n      // Swagger does not allow an array of files\n      if (_.isArray(val)) {\n        val = val[0];\n      }\n    } else if (isModelParameter(version, parameter)) {\n      val = req.body;\n    } else {\n      val = req.body[parameter.name];\n    }\n\n    break;\n  case 'header':\n    val = req.headers[parameter.name.toLowerCase()];\n\n    break;\n  case 'path':\n    _.each(pathKeys, function (key, index) {\n      if (key.name === parameter.name) {\n        val = decodeURIComponent(match[index + 1]);\n      }\n    });\n\n    break;\n  case 'query':\n    val = _.get(req.query, parameter.name);\n\n    break;\n  }\n\n  debug('      Value provided: %s', !_.isUndefined(val));\n\n  // Use the default value when necessary\n  if (_.isUndefined(val) && !_.isUndefined(defaultVal)) {\n    val = defaultVal;\n  }\n\n  return val;\n};\n\nmodule.exports.parseQueryString = function(req) {\n  return req.url.indexOf('?') > -1 ? qs.parse(parseurl(req).query, {}) : {};\n};\n\nmodule.exports.debugError = function (err, debug) {\n  var reason = err.message.replace(/^.*validation failed: /, '');\n\n  reason = reason.charAt(0).toUpperCase() + reason.substring(1);\n\n  debug('  Reason: %s', reason);\n\n  if (err.failedValidation === true) {\n    if (err.results) {\n      debug('  Errors:');\n\n      _.each(err.results.errors, function (error, index) {\n        debug('    %d:', index);\n        debug('      code: %s', error.code);\n        debug('      message: %s', error.message);\n        debug('      path: %s', JSON.stringify(error.path));\n      });\n    }\n  }\n\n  if (err.stack) {\n    debug('  Stack:');\n\n    _.each(err.stack.split('\\n'), function (line, index) {\n      // Skip the first line since it's in the reasonx\n      if (index > 0) {\n        debug('  %s', line);\n      }\n    });\n  }\n};\n\nvar convertValue = module.exports.convertValue = function (value, schema, type) {\n  var original = value;\n\n  // Default to {}\n  if (_.isUndefined(schema)) {\n    schema = {};\n  }\n\n  // Try to find the type or default to 'object'\n  if (_.isUndefined(type)) {\n    type = getParameterType(schema);\n  }\n\n  // If there is no value, do not convert it\n  if (_.isUndefined(value)) {\n    return value;\n  }\n\n  // If there is an empty value and allowEmptyValue is true, return it\n  if (schema.allowEmptyValue && value === '') {\n    return value;\n  }\n\n  switch (type) {\n  case 'array':\n    if (_.isString(value)) {\n      switch (schema.collectionFormat) {\n      case 'csv':\n      case undefined:\n        try {\n          value = JSON.parse(value);\n        } catch (err) {\n          value = original;\n        }\n\n        if (_.isString(value)) {\n          value = value.split(',');\n        }\n        break;\n      case 'multi':\n        value = [value];\n        break;\n      case 'pipes':\n        value = value.split('|');\n        break;\n      case 'ssv':\n        value = value.split(' ');\n        break;\n      case 'tsv':\n        value = value.split('\\t');\n        break;\n      }\n    }\n\n    // Handle situation where the expected type is array but only one value was provided\n    if (!_.isArray(value)) {\n      value = [value];\n    }\n\n    value = _.map(value, function (item, index) {\n      var iSchema = _.isArray(schema.items) ? schema.items[index] : schema.items;\n\n      return convertValue(item, iSchema, iSchema ? iSchema.type : undefined);\n    });\n\n    break;\n\n  case 'boolean':\n    if (!_.isBoolean(value)) {\n      if (['false', 'true'].indexOf(value) === -1) {\n        value = original;\n      } else {\n        value = value === 'true' || value === true ? true : false;\n      }\n    }\n\n    break;\n\n  case 'integer':\n    if (!_.isNumber(value)) {\n      if (_.isString(value) && _.trim(value).length === 0) {\n        value = NaN;\n      }\n\n      value = Number(value);\n\n      if (isNaN(value)) {\n        value = original;\n      }\n    }\n\n    break;\n\n  case 'number':\n    if (!_.isNumber(value)) {\n      if (_.isString(value) && _.trim(value).length === 0) {\n        value = NaN;\n      }\n\n      value = Number(value);\n\n      if (isNaN(value)) {\n        value = original;\n      }\n    }\n\n    break;\n\n  case 'object':\n    if (_.isString(value)) {\n      try {\n        value = JSON.parse(value);\n      } catch (err) {\n        value = original;\n      }\n    }\n\n    break;\n\n  case 'string':\n    if (['date', 'date-time'].indexOf(schema.format) > -1 && !_.isDate(value)) {\n      value = new Date(value);\n\n      if (!_.isDate(value) || value.toString() === 'Invalid Date') {\n        value = original;\n      }\n    }\n\n    break;\n\n  }\n\n  return value;\n};\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-router.js":"/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Apigee Corporation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\nvar _ = require('lodash-compat');\nvar cHelpers = require('../lib/helpers');\nvar debug = require('debug')('swagger-tools:middleware:router');\nvar fs = require('fs');\nvar mHelpers = require('./helpers');\nvar path = require('path');\n\nvar defaultOptions = {\n  controllers: {},\n  useStubs: false // Should we set this automatically based on process.env.NODE_ENV?\n};\nvar getHandlerName = function (req) {\n  var handlerName;\n\n  switch (req.swagger.swaggerVersion) {\n  case '1.2':\n    handlerName = req.swagger.operation.nickname;\n    break;\n\n  case '2.0':\n    if (req.swagger.operation['x-swagger-router-controller'] || req.swagger.path['x-swagger-router-controller']) {\n      handlerName = (req.swagger.operation['x-swagger-router-controller'] ?\n        req.swagger.operation['x-swagger-router-controller'] :\n        req.swagger.path['x-swagger-router-controller']) + '_' +\n        (req.swagger.operation.operationId ? req.swagger.operation.operationId : req.method.toLowerCase());\n    } else {\n      handlerName = req.swagger.operation.operationId;\n    }\n\n    break;\n  }\n\n  return handlerName;\n};\nvar handlerCacheFromDir = function (dirOrDirs) {\n  var handlerCache = {};\n  var jsFileRegex = /\\.(coffee|js)$/;\n  var dirs = [];\n\n  if (_.isArray(dirOrDirs)) {\n    dirs = dirOrDirs;\n  } else {\n    dirs.push(dirOrDirs);\n  }\n\n  debug('  Controllers:');\n\n  _.each(dirs, function (dir) {\n    _.each(fs.readdirSync(dir), function (file) {\n      var controllerName = file.replace(jsFileRegex, '');\n      var controller;\n\n      if (file.match(jsFileRegex)) {\n        controller = require(path.resolve(path.join(dir, controllerName)));\n\n        debug('    %s%s:',\n              path.resolve(path.join(dir, file)),\n              (_.isPlainObject(controller) ? '' : ' (not an object, skipped)'));\n\n        if (_.isPlainObject(controller)) {\n          _.each(controller, function (value, name) {\n            var handlerId = controllerName + '_' + name;\n\n            debug('      %s%s',\n                  handlerId,\n                  (_.isFunction(value) ? '' : ' (not a function, skipped)'));\n\n            // TODO: Log this situation\n\n            if (_.isFunction(value) && !handlerCache[handlerId]) {\n              handlerCache[handlerId] = value;\n            }\n          });\n        }\n      }\n    });\n  });\n\n  return handlerCache;\n};\nvar getMockValue = function (version, schema) {\n  var type = _.isPlainObject(schema) ? schema.type : schema;\n  var value;\n\n  if (!type) {\n    type = 'object';\n  }\n\n  switch (type) {\n  case 'array':\n    value = [getMockValue(version, _.isArray(schema.items) ? schema.items[0] : schema.items)];\n\n    break;\n\n  case 'boolean':\n    if (version === '1.2' && !_.isUndefined(schema.defaultValue)) {\n      value = schema.defaultValue;\n    } else if (version === '2.0' && !_.isUndefined(schema.default)) {\n      value = schema.default;\n    } else if (_.isArray(schema.enum)) {\n      value = schema.enum[0];\n    } else {\n      value = 'true';\n    }\n\n    // Convert value if necessary\n    value = value === 'true' || value === true ? true : false;\n\n    break;\n\n  case 'file':\n  case 'File':\n    value = 'Pretend this is some file content';\n\n    break;\n\n  case 'integer':\n    if (version === '1.2' && !_.isUndefined(schema.defaultValue)) {\n      value = schema.defaultValue;\n    } else if (version === '2.0' && !_.isUndefined(schema.default)) {\n      value = schema.default;\n    } else if (_.isArray(schema.enum)) {\n      value = schema.enum[0];\n    } else {\n      value = 1;\n    }\n\n    // Convert value if necessary\n    if (!_.isNumber(value)) {\n      value = parseInt(value, 10);\n    }\n\n    // TODO: Handle constraints and formats\n\n    break;\n\n  case 'object':\n    value = {};\n\n    _.each(schema.allOf, function (parentSchema) {\n      _.each(parentSchema.properties, function (property, propName) {\n        value[propName] = getMockValue(version, property);\n      });\n    });\n\n    _.each(schema.properties, function (property, propName) {\n      value[propName] = getMockValue(version, property);\n    });\n\n    break;\n\n  case 'number':\n    if (version === '1.2' && !_.isUndefined(schema.defaultValue)) {\n      value = schema.defaultValue;\n    } else if (version === '2.0' && !_.isUndefined(schema.default)) {\n      value = schema.default;\n    } else if (_.isArray(schema.enum)) {\n      value = schema.enum[0];\n    } else {\n      value = 1.0;\n    }\n\n    // Convert value if necessary\n    if (!_.isNumber(value)) {\n      value = parseFloat(value);\n    }\n\n    // TODO: Handle constraints and formats\n\n    break;\n\n  case 'string':\n    if (version === '1.2' && !_.isUndefined(schema.defaultValue)) {\n      value = schema.defaultValue;\n    } else if (version === '2.0' && !_.isUndefined(schema.default)) {\n      value = schema.default;\n    } else if (_.isArray(schema.enum)) {\n      value = schema.enum[0];\n    } else {\n      if (schema.format === 'date') {\n        value = new Date().toISOString().split('T')[0];\n      } else if (schema.format === 'date-time') {\n        value = new Date().toISOString();\n      } else {\n        value = 'Sample text';\n      }\n    }\n\n    break;\n  }\n\n  return value;\n};\nvar mockResponse = function (req, res, next, handlerName) {\n  var method = req.method.toLowerCase();\n  var operation = req.swagger.operation;\n  var sendResponse = function (err, response) {\n    if (err) {\n      debug('next with error: %j', err);\n      return next(err);\n    } else {\n      debug('send mock response: %s', response);\n\n      // Explicitly set the response status to 200 if not present (Issue #269)\n      if (_.isUndefined(req.statusCode)) {\n        res.statusCode = 200;\n      }\n\n      // Mock mode only supports JSON right now\n      res.setHeader('Content-Type', 'application/json');\n\n      return res.end(response);\n    }\n  };\n  var spec = cHelpers.getSpec(req.swagger.swaggerVersion);\n  var stubResponse = 'Stubbed response for ' + handlerName;\n  var apiDOrSO;\n  var responseType;\n\n  switch (req.swagger.swaggerVersion) {\n  case '1.2':\n    apiDOrSO = req.swagger.apiDeclaration;\n    responseType = operation.type;\n\n    break;\n\n  case '2.0':\n    apiDOrSO = req.swagger.swaggerObject;\n\n    if (method === 'post' && operation.responses['201']) {\n      responseType = operation.responses['201'];\n\n      res.statusCode = 201;\n    } else if (method === 'delete' && operation.responses['204']) {\n      responseType = operation.responses['204'];\n\n      res.statusCode = 204;\n    } else if (operation.responses['200']) {\n      responseType = operation.responses['200'];\n    } else if (operation.responses['default']) {\n      responseType = operation.responses['default'];\n    } else {\n      responseType = 'void';\n    }\n\n    break;\n  }\n\n  if (_.isPlainObject(responseType) || mHelpers.isModelType(spec, responseType)) {\n    if (req.swagger.swaggerVersion === '1.2') {\n      spec.composeModel(apiDOrSO, responseType, function (err, result) {\n        if (err) {\n          return sendResponse(undefined, err);\n        } else {\n          // Should we handle this differently as undefined typically means the model doesn't exist\n          return sendResponse(undefined, _.isUndefined(result) ?\n                                           stubResponse :\n                                           JSON.stringify(getMockValue(req.swagger.swaggerVersion, result)));\n        }\n      });\n    } else {\n      return sendResponse(undefined, JSON.stringify(getMockValue(req.swagger.swaggerVersion, responseType.schema || responseType)));\n    }\n  } else {\n    return sendResponse(undefined, getMockValue(req.swagger.swaggerVersion, responseType));\n  }\n};\nvar createStubHandler = function (req, res, next, handlerName) {\n  // TODO: Handle headers for 2.0\n  // TODO: Handle examples (per mime-type) for 2.0\n  // TODO: Handle non-JSON response types\n\n  return function stubHandler (req, res, next) {\n    mockResponse(req, res, next, handlerName);\n  };\n};\n\nvar send405 = function (req, res, next) {\n  var allowedMethods = [];\n  var err = new Error('Route defined in Swagger specification (' +\n                        (_.isUndefined(req.swagger.api) ? req.swagger.apiPath : req.swagger.api.path) +\n                        ') but there is no defined ' +\n                      (req.swagger.swaggerVersion === '1.2' ? req.method.toUpperCase() : req.method.toLowerCase()) + ' operation.');\n\n  if (!_.isUndefined(req.swagger.api)) {\n    _.each(req.swagger.api.operations, function (operation) {\n      allowedMethods.push(operation.method.toUpperCase());\n    });\n  } else {\n    _.each(req.swagger.path, function (operation, method) {\n      if (cHelpers.swaggerOperationMethods.indexOf(method.toUpperCase()) !== -1) {\n        allowedMethods.push(method.toUpperCase());\n      }\n    });\n  }\n\n  err.allowedMethods = allowedMethods;\n\n  res.setHeader('Allow', allowedMethods.sort().join(', '));\n  res.statusCode = 405;\n\n  return next(err);\n};\n\n/**\n * Middleware for using Swagger information to route requests to handlers.  Due to the differences between Swagger 1.2\n * and Swagger 2.0, the way in which your Swagger document(s) are annotated to work with this middleware differs as well\n * so please view the documentation below for more details:\n *\n *     https://github.com/apigee-127/swagger-tools/blob/master/docs/Middleware.md#swaggerrouteroptions\n *\n * This middleware also requires that you use the swagger-metadata middleware before this middleware.  This middleware\n * also makes no attempt to work around invalid Swagger documents.  If you would like to validate your requests using\n * the swagger-validator middleware, you must use it prior to using this middleware.\n *\n * @param {object} [options] - The middleware options\n * @param {(string|object|string[]} [options.controllers=./controllers] - If this is a string or string array, this is\n *                                                                        the path, or paths, to find the controllers\n *                                                                        in.  If it's an object, the keys are the\n *                                                                        controller \"name\" (as described above) and the\n *                                                                        value is a function.\n * @param {boolean} [options.useStubs=false] - Whether or not to stub missing controllers and methods\n *\n * @returns the middleware function\n */\nexports = module.exports = function (options) {\n  var handlerCache = {};\n\n  debug('Initializing swagger-router middleware');\n\n  // Set the defaults\n  options = _.defaults(options || {}, defaultOptions);\n\n  debug('  Mock mode: %s', options.useStubs === true ? 'enabled' : 'disabled');\n\n  if (_.isPlainObject(options.controllers)) {\n    debug('  Controllers:');\n\n    // Create the handler cache from the passed in controllers object\n    _.each(options.controllers, function (func, handlerName) {\n      debug('    %s', handlerName);\n\n      if (!_.isFunction(func)) {\n        throw new Error('options.controllers values must be functions');\n      }\n    });\n\n    handlerCache = options.controllers;\n  } else {\n    // Create the handler cache from the modules in the controllers directory\n    handlerCache = handlerCacheFromDir(options.controllers);\n  }\n\n  return function swaggerRouter (req, res, next) {\n    var operation = req.swagger ? req.swagger.operation : undefined;\n    var handler;\n    var handlerName;\n    var rErr;\n\n    debug('%s %s', req.method, req.url);\n    debug('  Will process: %s', _.isUndefined(operation) ? 'no' : 'yes');\n\n    if (req.swagger) {\n      if (operation) {\n        handlerName = getHandlerName(req);\n        handler = handlerCache[handlerName];\n\n        req.swagger.useStubs = options.useStubs;\n\n        debug('  Route handler: %s', handlerName);\n        debug('    Missing: %s', _.isUndefined(handler) ? 'yes' : 'no');\n        debug('    Ignored: %s', options.ignoreMissingHandlers === true ? 'yes' : 'no');\n        debug('    Using mock: %s', options.useStubs && _.isUndefined(handler) ? 'yes' : 'no');\n\n        if (_.isUndefined(handler) && options.useStubs === true) {\n          handler = handlerCache[handlerName] = createStubHandler(handlerName);\n        }\n\n        if (!_.isUndefined(handler)) {\n          try {\n            return handler(req, res, next);\n          } catch (err) {\n            rErr = err;\n\n            debug('Handler threw an unexpected error: %s\\n%s', err.message, err.stack);\n          }\n        } else if (options.ignoreMissingHandlers !== true) {\n          rErr = new Error('Cannot resolve the configured swagger-router handler: ' + handlerName);\n\n          res.statusCode = 500;\n        }\n      } else {\n        debug('  No handler for method: %s', req.method);\n\n        return send405(req, res, next);\n      }\n    }\n\n    if (rErr) {\n      mHelpers.debugError(rErr, debug);\n    }\n\n    return next(rErr);\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-security.js":"/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Apigee Corporation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n'use strict';\n\nvar _ = require('lodash-compat');\nvar async = require('async');\nvar debug = require('debug')('swagger-tools:middleware:security');\nvar helpers = require('./helpers');\n\nvar getScopeOrAPIKey = function (req, secDef, secName, secReq) {\n  var swaggerVersion = req.swagger.swaggerVersion;\n  var apiKeyPropName = swaggerVersion === '1.2' ? secDef.keyname : secDef.name;\n  var apiKeyLocation = swaggerVersion === '1.2' ? secDef.passAs : secDef.in;\n  var scopeOrKey;\n\n  if (secDef.type === 'oauth2') {\n    if (swaggerVersion === '1.2') {\n      scopeOrKey = _.map(secReq[secName], function (scope) {\n        return scope.scope;\n      });\n    } else {\n      scopeOrKey = secReq[secName];\n    }\n  } else if (secDef.type === 'apiKey') {\n    if (apiKeyLocation === 'query') {\n      scopeOrKey = (req.query ? req.query : helpers.parseQueryString(req))[apiKeyPropName];\n    } else if (apiKeyLocation === 'header') {\n      scopeOrKey = req.headers[apiKeyPropName.toLowerCase()];\n    }\n  }\n\n  return scopeOrKey;\n};\nvar sendSecurityError = function (err, res, next) {\n  // Populate default values if not present\n  if (!err.code) {\n    err.code = 'server_error';\n  }\n\n  if (!err.statusCode) {\n    err.statusCode = 403;\n  }\n\n  if (err.headers) {\n    _.each(err.headers, function (header, name) {\n      res.setHeader(name, header);\n    });\n  }\n\n  res.statusCode = err.statusCode;\n\n  next(err);\n};\n\n/**\n * Middleware for using Swagger security information to authenticate requests.\n *\n * This middleware also requires that you use the swagger-metadata middleware before this middleware. It is recommended\n * that this middleware is included before swagger-validator and swagger-router. This makes no attempt to work around\n * invalid Swagger documents.\n *\n *\n * A SecurityImplementation is essentially middleware must include 2 exported methods:\n *   configure (SecurityDefinition)\n *   authorize (request, response, SecurityRequirement)\n *\n * @param {object} [options] - The middleware options\n *                 [options.{name}={handler}] - the keys match SecurityDefinition names and the associated values are\n *                                              functions that accept the following parameters: (request,\n *                                              securityDefinition, scopes, callback) where callback accepts one\n *                                              argument - an Error if unauthorized. The Error may include \"message\",\n *                                              \"state\", and \"code\" fields to be conveyed to the client in the response\n *                                              body and a \"headers\" field containing an object representing headers\n *                                              to be set on the response to the client. In addition, if the Error has\n *                                              a statusCode field, the response statusCode will be set to match -\n *                                              otherwise, the statusCode will be set to 403.\n *\n * @returns the middleware function\n */\nexports = module.exports = function (options) {\n  var handlers = options || {};\n\n  debug('Initializing swagger-security middleware');\n  debug('  Security handlers:%s', Object.keys(handlers).length > 0 ? '' : ' ' + Object.keys(handlers).length);\n\n  _.each(options, function (func, name) {\n    debug('    %s', name);\n  });\n\n  return function swaggerSecurity (req, res, next) {\n    var operation = req.swagger ? req.swagger.operation : undefined;\n    var securityReqs;\n\n    debug('%s %s', req.method, req.url);\n    debug('  Will process: %s', _.isUndefined(operation) ? 'no' : 'yes');\n\n    if (operation) {\n      securityReqs = req.swagger.swaggerVersion === '1.2' ?\n        // Global (path level), authorization support is not possible:\n        //   Not possible due to https://github.com/swagger-api/swagger-spec/issues/159\n        _.reduce(req.swagger.operation.authorizations, function (arr, authorization, name) {\n          var obj = {};\n\n          obj[name] = _.map(authorization, function (scope) {\n            return scope.scope;\n          });\n\n          return arr.concat(obj);\n        }, []) :\n      req.swagger.operation.security || req.swagger.swaggerObject.security;\n\n      if (securityReqs && securityReqs.length > 0) {\n        async.map(securityReqs, function (secReq, cb) { // logical OR - any one can allow\n          var secName;\n\n          async.map(Object.keys(secReq), function (name, cb) { // logical AND - all must allow\n            var secDef = req.swagger.swaggerVersion === '1.2' ?\n                  req.swagger.resourceListing.authorizations[name] :\n                  req.swagger.swaggerObject.securityDefinitions[name];\n            var handler = handlers[name];\n\n            secName = name;\n\n            if (!handler) {\n              return cb(new Error('unknown security handler: ' + name));\n            }\n\n            return handler(req, secDef, getScopeOrAPIKey(req, secDef, name, secReq), cb);\n          }, function (err) {\n            debug('    Security check (%s): %s', secName, _.isNull(err) ? 'allowed' : 'denied');\n\n            // swap normal err and result to short-circuit the logical OR\n            if (err) {\n              return cb(undefined, err);\n            }\n\n            return cb(new Error('OK'));\n          });\n        }, function (ok, errors) { // note swapped results\n          var allowed = !_.isNull(ok) && ok.message === 'OK';\n\n          debug('    Request allowed: %s', allowed);\n\n          if (allowed) {\n            return next();\n          }\n\n          return sendSecurityError(errors[0], res, next);\n        });\n      } else {\n        return next();\n      }\n    } else {\n      return next();\n    }\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui.js":"/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Apigee Corporation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\nvar _ = require('lodash-compat');\nvar debug = require('debug')('swagger-tools:middleware:ui');\nvar fs = require('fs');\nvar helpers = require('../lib/helpers');\nvar parseurl = require('parseurl');\nvar path = require('path');\nvar serveStatic = require('serve-static');\n\nvar defaultOptions = {\n  apiDocs: '/api-docs',\n  swaggerUi: '/docs'\n};\nvar staticOptions = {};\n\n/**\n * Middleware for serving the Swagger documents and Swagger UI.\n *\n * @param {object} rlOrSO - The Resource Listing (Swagger 1.2) or Swagger Object (Swagger 2.0)\n * @param {object[]} apiDeclarations - The array of API Declarations (Swagger 1.2)\n * @param {object} [options] - The configuration options\n * @param {string=/api-docs} [options.apiDocs] - The relative path to serve your Swagger documents from\n * @param {string=/docs} [options.swaggerUi] - The relative path to serve Swagger UI from\n * @param {string} [options.swaggerUiDir] - The filesystem path to your custom swagger-ui deployment to serve\n *\n * @returns the middleware function\n */\nexports = module.exports = function (rlOrSO, apiDeclarations, options) {\n  debug('Initializing swagger-ui middleware');\n\n  var swaggerVersion = helpers.getSwaggerVersion(rlOrSO);\n  var apiDocsCache = {}; // Swagger document endpoints cache\n  var apiDocsPaths = [];\n  var staticMiddleware;\n  var swaggerApiDocsURL;\n  var swaggerUiPath;\n\n  if (swaggerVersion !== '1.2') {\n    options = apiDeclarations;\n    apiDeclarations = [];\n  }\n\n  // Set the defaults\n  options = _.defaults(options || {}, defaultOptions);\n\n  if (_.isUndefined(rlOrSO)) {\n    throw new Error('rlOrSO is required');\n  } else if (!_.isPlainObject(rlOrSO)) {\n    throw new TypeError('rlOrSO must be an object');\n  }\n\n  if (swaggerVersion === '1.2') {\n    if (_.isUndefined(apiDeclarations)) {\n      throw new Error('apiDeclarations is required');\n    } else if (!_.isPlainObject(apiDeclarations)) {\n      throw new TypeError('apiDeclarations must be an object');\n    }\n  }\n\n  swaggerUiPath = options.swaggerUiDir ?\n    path.resolve(options.swaggerUiDir) :\n    path.join(__dirname, 'swagger-ui');\n\n  if (options.swaggerUiDir) {\n    if (!fs.existsSync(swaggerUiPath)) {\n      throw new Error('options.swaggerUiDir path does not exist: ' + swaggerUiPath);\n    } else if (!fs.statSync(swaggerUiPath).isDirectory()) {\n      throw new Error('options.swaggerUiDir path is not a directory: ' + swaggerUiPath);\n    }\n  }\n\n  staticMiddleware = serveStatic(swaggerUiPath, staticOptions);\n\n  // Sanitize values\n  if (options.apiDocs.charAt(options.apiDocs.length -1) === '/') {\n    options.apiDocs = options.apiDocs.substring(0, options.apiDocs.length - 1);\n  }\n\n  if (options.swaggerUi.charAt(options.swaggerUi.length -1) === '/') {\n    options.swaggerUi = options.swaggerUi.substring(0, options.swaggerUi.length - 1);\n  }\n\n  debug('  Using swagger-ui from: %s', options.swaggerUiDir ? swaggerUiPath : 'internal');\n  debug('  API Docs path: %s', options.apiDocs);\n\n  // Add the Resource Listing or SwaggerObject to the response cache\n  apiDocsCache[options.apiDocs] = JSON.stringify(rlOrSO, null, 2);\n\n  // Add API Declarations to the response cache\n  _.each(apiDeclarations, function (resource, resourcePath) {\n    var adPath = options.apiDocs + resourcePath;\n\n    // Respond with pretty JSON (Configurable?)\n    apiDocsCache[adPath] = JSON.stringify(resource, null, 2);\n\n    debug('    API Declaration path: %s', adPath);\n  });\n\n  apiDocsPaths = Object.keys(apiDocsCache);\n\n  debug('  swagger-ui path: %s', options.swaggerUi);\n\n  return function swaggerUI (req, res, next) {\n    var path = parseurl(req).pathname;\n    var isApiDocsPath = apiDocsPaths.indexOf(path) > -1 || (swaggerVersion !== '1.2' && path === options.apiDocsPath);\n    var isSwaggerUiPath = path === options.swaggerUi || path.indexOf(options.swaggerUi + '/') === 0;\n\n    if (_.isUndefined(swaggerApiDocsURL)) {\n      // Start with the original path\n      swaggerApiDocsURL = parseurl.original(req).pathname;\n\n      // Remove the part after the mount point\n      swaggerApiDocsURL = swaggerApiDocsURL.substring(0, swaggerApiDocsURL.indexOf(req.url));\n      \n      // Add the API docs path and remove any double dashes\n      swaggerApiDocsURL = ((options.swaggerUiPrefix ? options.swaggerUiPrefix : '') + swaggerApiDocsURL + options.apiDocs).replace(/\\/\\//g, '/'); \n    }\n\n    debug('%s %s', req.method, req.url);\n    debug('  Will process: %s', isApiDocsPath || isSwaggerUiPath ? 'yes' : 'no');\n\n    if (isApiDocsPath) {\n      debug('  Serving API Docs');\n\n      res.setHeader('Content-Type', 'application/json');\n\n      return res.end(apiDocsCache[path]);\n    } else if (isSwaggerUiPath) {\n      debug('  Serving swagger-ui');\n\n      res.setHeader('Swagger-API-Docs-URL', swaggerApiDocsURL);\n\n      if (path === options.swaggerUi || path === options.swaggerUi + '/') {\n        req.url = '/';\n      } else {\n        req.url = req.url.substring(options.swaggerUi.length);\n      }\n\n      return staticMiddleware(req, res, next);\n    }\n\n    return next();\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-validator.js":"/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Apigee Corporation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\nvar _ = require('lodash-compat');\nvar async = require('async');\nvar cHelpers = require('../lib/helpers');\nvar debug = require('debug')('swagger-tools:middleware:validator');\nvar mHelpers = require('./helpers');\nvar validators = require('../lib/validators');\n\nvar sendData = function (swaggerVersion, res, data, encoding, skipped) {\n  // 'res.end' requires a Buffer or String so if it's not one, create a String\n  if (!(data instanceof Buffer) && !_.isString(data)) {\n    data = JSON.stringify(data);\n  }\n\n  if (skipped) {\n    if (_.isUndefined(res.getHeader('content-type'))) {\n      // This scenario only happens for a 204/304 response and there is no Content-Type\n      debug('    Validation: skipped (Cached response for \\'%d\\')', res.statusCode);\n    } else if (swaggerVersion === '1.2') {\n      debug('    Validation: skipped (No responseMessage definition)', res.statusCode);\n    } else {\n      debug('    Validation: skipped (No response definition)', res.statusCode);\n    }\n  } else {\n    debug('    Validation: succeeded');\n  }\n\n  res.end(data, encoding);\n};\n\nvar send400 = function (req, res, next, err) {\n  var currentMessage;\n  var validationMessage;\n\n  res.statusCode = 400;\n\n  // Format the errors to include the parameter information\n  if (err.failedValidation === true) {\n    currentMessage = err.message;\n    validationMessage = 'Parameter (' + err.paramName + ') ';\n\n    switch (err.code) {\n    case 'ENUM_MISMATCH':\n    case 'MAXIMUM':\n    case 'MAXIMUM_EXCLUSIVE':\n    case 'MINIMUM':\n    case 'MINIMUM_EXCLUSIVE':\n    case 'MULTIPLE_OF':\n    case 'INVALID_TYPE':\n      if (err.code === 'INVALID_TYPE' && err.message.split(' ')[0] === 'Value') {\n        validationMessage += err.message.split(' ').slice(1).join(' ');\n      } else {\n        validationMessage += 'is ' + err.message.charAt(0).toLowerCase() + err.message.substring(1);\n      }\n\n      break;\n\n    case 'ARRAY_LENGTH_LONG':\n    case 'ARRAY_LENGTH_SHORT':\n    case 'MAX_LENGTH':\n    case 'MIN_LENGTH':\n      validationMessage += err.message.split(' ').slice(1).join(' ');\n\n      break;\n\n    case 'MAX_PROPERTIES':\n    case 'MIN_PROPERTIES':\n      validationMessage += 'properties are ' + err.message.split(' ').slice(4).join(' ');\n\n      break;\n\n    default:\n      validationMessage += err.message.charAt(0).toLowerCase() + err.message.substring(1);\n    }\n\n    // Replace the message\n    err.message = 'Request validation failed: ' + validationMessage;\n\n    // Replace the stack message\n    err.stack = err.stack.replace(currentMessage, validationMessage);\n  }\n\n  return next(err);\n};\nvar validateValue = function (req, schema, path, val, callback) {\n  var document = req.swagger.apiDeclaration || req.swagger.swaggerObject;\n  var version = req.swagger.apiDeclaration ? '1.2' : '2.0';\n  var isModel = mHelpers.isModelParameter(version, schema);\n  var spec = cHelpers.getSpec(version);\n\n  val = mHelpers.convertValue(val, schema, mHelpers.getParameterType(schema));\n\n  try {\n    validators.validateSchemaConstraints(version, schema, path, val);\n  } catch (err) {\n    return callback(err);\n  }\n\n  if (isModel) {\n    if (_.isString(val)) {\n      try {\n        val = JSON.parse(val);\n      } catch (err) {\n        err.failedValidation = true;\n        err.message = 'Value expected to be an array/object but is not';\n\n        throw err;\n      }\n    }\n\n    async.map(schema.type === 'array' ? val : [val], function (aVal, oCallback) {\n      if (version === '1.2') {\n        spec.validateModel(document, '#/models/' + (schema.items ?\n                                                    schema.items.type || schema.items.$ref :\n                                                    schema.type), aVal, oCallback);\n      } else {\n        try {\n          validators.validateAgainstSchema(schema.schema ? schema.schema : schema, val);\n\n          oCallback();\n        } catch (err) {\n          oCallback(err);\n        }\n      }\n    }, function (err, allResults) {\n      if (!err) {\n        _.each(allResults, function (results) {\n          if (results && cHelpers.getErrorCount(results) > 0) {\n            err = new Error('Failed schema validation');\n\n            err.code = 'SCHEMA_VALIDATION_FAILED';\n            err.errors = results.errors;\n            err.warnings = results.warnings;\n            err.failedValidation = true;\n\n            return false;\n          }\n        });\n      }\n\n      callback(err);\n    });\n  } else {\n    callback();\n  }\n};\nvar wrapEnd = function (req, res, next) {\n  var operation = req.swagger.operation;\n  var originalEnd = res.end;\n  var vPath = _.cloneDeep(req.swagger.operationPath);\n  var swaggerVersion = req.swagger.swaggerVersion;\n\n  res.end = function (data, encoding) {\n    var schema = operation;\n    var val = data;\n    var responseCode;\n\n    // Replace 'res.end' with the original\n    res.end = originalEnd;\n\n    debug('  Response validation:');\n\n    // If the data is a buffer, convert it to a string so we can parse it prior to validation\n    if (val instanceof Buffer) {\n      val = data.toString(encoding);\n    }\n\n    // Express removes the Content-Type header from 204/304 responses which makes response validation impossible\n    if (_.isUndefined(res.getHeader('content-type')) && [204, 304].indexOf(res.statusCode) > -1) {\n      sendData(swaggerVersion, res, data, encoding, true);\n      return; // do NOT call next() here, doing so would execute remaining middleware chain twice\n    }\n\n    try {\n      // Validate the content type\n      try {\n        validators.validateContentType(req.swagger.apiDeclaration ?\n                                         req.swagger.apiDeclaration.produces :\n                                         req.swagger.swaggerObject.produces,\n                                       operation.produces, res);\n      } catch (err) {\n        err.failedValidation = true;\n\n        throw err;\n      }\n\n      if (_.isUndefined(schema.type)) {\n        if (schema.schema) {\n          schema = schema.schema;\n        } else if (swaggerVersion === '1.2') {\n          schema = _.find(operation.responseMessages, function (responseMessage, index) {\n            if (responseMessage.code === res.statusCode) {\n              vPath.push('responseMessages', index.toString());\n\n              responseCode = responseMessage.code;\n\n              return true;\n            }\n          });\n\n          if (!_.isUndefined(schema)) {\n            schema = schema.responseModel;\n          }\n        } else {\n          schema = _.find(operation.responses, function (response, code) {\n            if (code === (res.statusCode || 200).toString()) {\n              vPath.push('responses', code);\n\n              responseCode = code;\n\n              return true;\n            }\n          });\n\n          if (_.isUndefined(schema) && operation.responses.default) {\n            responseCode = 'default';\n            schema = operation.responses.default;\n\n            vPath.push('responses', 'default');\n          }\n        }\n      }\n\n      debug('    Response ' + (swaggerVersion === '1.2' ? 'message' : 'code') + ': ' + responseCode);\n\n      if (_.isUndefined(schema)) {\n        sendData(swaggerVersion, res, data, encoding, true);\n      } else {\n        validateValue(req, schema, vPath, val, function (err) {\n          if (err) {\n            throw err;\n          }\n          \n          sendData(swaggerVersion, res, data, encoding, false);\n        });\n      }\n    } catch (err) {\n      if (err.failedValidation) {\n        err.originalResponse = data;\n        err.message = 'Response validation failed: ' + err.message.charAt(0).toLowerCase() + err.message.substring(1);\n        \n        debug('    Validation: failed');\n\n        mHelpers.debugError(err, debug);\n      }\n\n      return next(err);\n    }\n  };\n};\n\n/**\n * Middleware for using Swagger information to validate API requests/responses.\n *\n * This middleware also requires that you use the swagger-metadata middleware before this middleware.  This middleware\n * also makes no attempt to work around invalid Swagger documents.\n *\n * @param {object} [options] - The middleware options\n * @param {boolean} [options.validateResponse=false] - Whether or not to validate responses\n *\n * @returns the middleware function\n */\nexports = module.exports = function (options) {\n  debug('Initializing swagger-validator middleware');\n\n  if (_.isUndefined(options)) {\n    options = {};\n  }\n\n  debug('  Response validation: %s', options.validateResponse === true ? 'enabled' : 'disabled');\n\n  return function swaggerValidator (req, res, next) {\n    var operation = req.swagger ? req.swagger.operation : undefined;\n    var paramIndex = 0;\n    var swaggerVersion = req.swagger ? req.swagger.swaggerVersion : undefined;\n    var paramName; // Here since we use it in the catch block\n    var paramPath; // Here since we use it in the catch block\n\n    debug('%s %s', req.method, req.url);\n    debug('  Will process: %s', _.isUndefined(operation) ? 'no' : 'yes');\n\n    if (!_.isUndefined(operation)) {\n      // If necessary, override 'res.end'\n      if (options.validateResponse === true) {\n        wrapEnd(req, res, next);\n      }\n\n      debug('  Request validation:');\n\n      // Validate the request\n      try {\n        // Validate the content type\n        validators.validateContentType(req.swagger.swaggerVersion === '1.2' ?\n                                         req.swagger.api.consumes :\n                                         req.swagger.swaggerObject.consumes,\n                                       operation.consumes, req);\n\n        async.map(swaggerVersion === '1.2' ?\n                  operation.parameters :\n                  req.swagger.operationParameters, function (parameter, oCallback) {\n                    var schema = swaggerVersion === '1.2' ? parameter : parameter.schema;\n                    var val;\n\n                    paramName = schema.name;\n                    paramPath = swaggerVersion === '1.2' ?\n                      req.swagger.operationPath.concat(['params', paramIndex.toString()]) :\n                      parameter.path;\n                    val = req.swagger.params[paramName].value;\n\n                    // Validate requiredness\n                    validators.validateRequiredness(val, schema.required);\n\n                    // Quick return if the value is not present\n                    if (_.isUndefined(val)) {\n                      return oCallback();\n                    }\n\n                    validateValue(req, schema, paramPath, val, oCallback);\n\n                    paramIndex++;\n                  }, function (err) {\n                    if (err) {\n                      throw err;\n                    } else {\n                      debug('    Validation: succeeded');\n\n                      return next();\n                    }\n                  });\n      } catch (err) {\n        if (err.failedValidation === true) {\n          if (!err.path) {\n            err.path = paramPath;\n          }\n\n          err.paramName = paramName;\n        }\n\n        debug('    Validation: failed');\n\n        mHelpers.debugError(err, debug);\n\n        return send400(req, res, next, err);\n      }\n    } else {\n      return next();\n    }\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lang/en.js":"'use strict';\n\n/* jshint quotmark: double */\nwindow.SwaggerTranslator.learn({\n    \"Warning: Deprecated\":\"Warning: Deprecated\",\n    \"Implementation Notes\":\"Implementation Notes\",\n    \"Response Class\":\"Response Class\",\n    \"Status\":\"Status\",\n    \"Parameters\":\"Parameters\",\n    \"Parameter\":\"Parameter\",\n    \"Value\":\"Value\",\n    \"Description\":\"Description\",\n    \"Parameter Type\":\"Parameter Type\",\n    \"Data Type\":\"Data Type\",\n    \"Response Messages\":\"Response Messages\",\n    \"HTTP Status Code\":\"HTTP Status Code\",\n    \"Reason\":\"Reason\",\n    \"Response Model\":\"Response Model\",\n    \"Request URL\":\"Request URL\",\n    \"Response Body\":\"Response Body\",\n    \"Response Code\":\"Response Code\",\n    \"Response Headers\":\"Response Headers\",\n    \"Hide Response\":\"Hide Response\",\n    \"Headers\":\"Headers\",\n    \"Try it out!\":\"Try it out!\",\n    \"Show/Hide\":\"Show/Hide\",\n    \"List Operations\":\"List Operations\",\n    \"Expand Operations\":\"Expand Operations\",\n    \"Raw\":\"Raw\",\n    \"can't parse JSON.  Raw result\":\"can't parse JSON.  Raw result\",\n    \"Example Value\":\"Example Value\",\n    \"Model Schema\":\"Model Schema\",\n    \"Model\":\"Model\",\n    \"Click to set as parameter value\":\"Click to set as parameter value\",\n    \"apply\":\"apply\",\n    \"Username\":\"Username\",\n    \"Password\":\"Password\",\n    \"Terms of service\":\"Terms of service\",\n    \"Created by\":\"Created by\",\n    \"See more at\":\"See more at\",\n    \"Contact the developer\":\"Contact the developer\",\n    \"api version\":\"api version\",\n    \"Response Content Type\":\"Response Content Type\",\n    \"Parameter content type:\":\"Parameter content type:\",\n    \"fetching resource\":\"fetching resource\",\n    \"fetching resource list\":\"fetching resource list\",\n    \"Explore\":\"Explore\",\n    \"Show Swagger Petstore Example Apis\":\"Show Swagger Petstore Example Apis\",\n    \"Can't read from server.  It may not have the appropriate access-control-origin settings.\":\"Can't read from server.  It may not have the appropriate access-control-origin settings.\",\n    \"Please specify the protocol for\":\"Please specify the protocol for\",\n    \"Can't read swagger JSON from\":\"Can't read swagger JSON from\",\n    \"Finished Loading Resource Information. Rendering Swagger UI\":\"Finished Loading Resource Information. Rendering Swagger UI\",\n    \"Unable to read api\":\"Unable to read api\",\n    \"from path\":\"from path\",\n    \"server returned\":\"server returned\"\n});\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lang/es.js":"'use strict';\n\n/* jshint quotmark: double */\nwindow.SwaggerTranslator.learn({\n    \"Warning: Deprecated\":\"Advertencia: Obsoleto\",\n    \"Implementation Notes\":\"Notas de implementación\",\n    \"Response Class\":\"Clase de la Respuesta\",\n    \"Status\":\"Status\",\n    \"Parameters\":\"Parámetros\",\n    \"Parameter\":\"Parámetro\",\n    \"Value\":\"Valor\",\n    \"Description\":\"Descripción\",\n    \"Parameter Type\":\"Tipo del Parámetro\",\n    \"Data Type\":\"Tipo del Dato\",\n    \"Response Messages\":\"Mensajes de la Respuesta\",\n    \"HTTP Status Code\":\"Código de Status HTTP\",\n    \"Reason\":\"Razón\",\n    \"Response Model\":\"Modelo de la Respuesta\",\n    \"Request URL\":\"URL de la Solicitud\",\n    \"Response Body\":\"Cuerpo de la Respuesta\",\n    \"Response Code\":\"Código de la Respuesta\",\n    \"Response Headers\":\"Encabezados de la Respuesta\",\n    \"Hide Response\":\"Ocultar Respuesta\",\n    \"Try it out!\":\"Pruébalo!\",\n    \"Show/Hide\":\"Mostrar/Ocultar\",\n    \"List Operations\":\"Listar Operaciones\",\n    \"Expand Operations\":\"Expandir Operaciones\",\n    \"Raw\":\"Crudo\",\n    \"can't parse JSON.  Raw result\":\"no puede parsear el JSON.  Resultado crudo\",\n    \"Example Value\":\"Valor de Ejemplo\",\n    \"Model Schema\":\"Esquema del Modelo\",\n    \"Model\":\"Modelo\",\n    \"apply\":\"aplicar\",\n    \"Username\":\"Nombre de usuario\",\n    \"Password\":\"Contraseña\",\n    \"Terms of service\":\"Términos de Servicio\",\n    \"Created by\":\"Creado por\",\n    \"See more at\":\"Ver más en\",\n    \"Contact the developer\":\"Contactar al desarrollador\",\n    \"api version\":\"versión de la api\",\n    \"Response Content Type\":\"Tipo de Contenido (Content Type) de la Respuesta\",\n    \"fetching resource\":\"buscando recurso\",\n    \"fetching resource list\":\"buscando lista del recurso\",\n    \"Explore\":\"Explorar\",\n    \"Show Swagger Petstore Example Apis\":\"Mostrar Api Ejemplo de Swagger Petstore\",\n    \"Can't read from server.  It may not have the appropriate access-control-origin settings.\":\"No se puede leer del servidor. Tal vez no tiene la configuración de control de acceso de origen (access-control-origin) apropiado.\",\n    \"Please specify the protocol for\":\"Por favor, especificar el protocola para\",\n    \"Can't read swagger JSON from\":\"No se puede leer el JSON de swagger desde\",\n    \"Finished Loading Resource Information. Rendering Swagger UI\":\"Finalizada la carga del recurso de Información. Mostrando Swagger UI\",\n    \"Unable to read api\":\"No se puede leer la api\",\n    \"from path\":\"desde ruta\",\n    \"server returned\":\"el servidor retornó\"\n});\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lang/fr.js":"'use strict';\n\n/* jshint quotmark: double */\nwindow.SwaggerTranslator.learn({\n    \"Warning: Deprecated\":\"Avertissement : Obsolète\",\n    \"Implementation Notes\":\"Notes d'implementation\",\n    \"Response Class\":\"Classe de la réponse\",\n    \"Status\":\"Statut\",\n    \"Parameters\":\"Paramètres\",\n    \"Parameter\":\"Paramètre\",\n    \"Value\":\"Valeur\",\n    \"Description\":\"Description\",\n    \"Parameter Type\":\"Type du paramètre\",\n    \"Data Type\":\"Type de données\",\n    \"Response Messages\":\"Messages de la réponse\",\n    \"HTTP Status Code\":\"Code de statut HTTP\",\n    \"Reason\":\"Raison\",\n    \"Response Model\":\"Modèle de réponse\",\n    \"Request URL\":\"URL appelée\",\n    \"Response Body\":\"Corps de la réponse\",\n    \"Response Code\":\"Code de la réponse\",\n    \"Response Headers\":\"En-têtes de la réponse\",\n    \"Hide Response\":\"Cacher la réponse\",\n    \"Headers\":\"En-têtes\",\n    \"Try it out!\":\"Testez !\",\n    \"Show/Hide\":\"Afficher/Masquer\",\n    \"List Operations\":\"Liste des opérations\",\n    \"Expand Operations\":\"Développer les opérations\",\n    \"Raw\":\"Brut\",\n    \"can't parse JSON.  Raw result\":\"impossible de décoder le JSON.  Résultat brut\",\n    \"Example Value\":\"Valeur exemple\",\n    \"Model Schema\":\"Définition du modèle\",\n    \"Model\":\"Modèle\",\n    \"apply\":\"appliquer\",\n    \"Username\":\"Nom d'utilisateur\",\n    \"Password\":\"Mot de passe\",\n    \"Terms of service\":\"Conditions de service\",\n    \"Created by\":\"Créé par\",\n    \"See more at\":\"Voir plus sur\",\n    \"Contact the developer\":\"Contacter le développeur\",\n    \"api version\":\"version de l'api\",\n    \"Response Content Type\":\"Content Type de la réponse\",\n    \"fetching resource\":\"récupération de la ressource\",\n    \"fetching resource list\":\"récupération de la liste de ressources\",\n    \"Explore\":\"Explorer\",\n    \"Show Swagger Petstore Example Apis\":\"Montrer les Apis de l'exemple Petstore de Swagger\",\n    \"Can't read from server.  It may not have the appropriate access-control-origin settings.\":\"Impossible de lire à partir du serveur. Il se peut que les réglages access-control-origin ne soient pas appropriés.\",\n    \"Please specify the protocol for\":\"Veuillez spécifier un protocole pour\",\n    \"Can't read swagger JSON from\":\"Impossible de lire le JSON swagger à partir de\",\n    \"Finished Loading Resource Information. Rendering Swagger UI\":\"Chargement des informations terminé. Affichage de Swagger UI\",\n    \"Unable to read api\":\"Impossible de lire l'api\",\n    \"from path\":\"à partir du chemin\",\n    \"server returned\":\"réponse du serveur\"\n});\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lang/it.js":"'use strict';\n\n/* jshint quotmark: double */\nwindow.SwaggerTranslator.learn({\n    \"Warning: Deprecated\":\"Attenzione: Deprecato\",\n    \"Implementation Notes\":\"Note di implementazione\",\n    \"Response Class\":\"Classe della risposta\",\n    \"Status\":\"Stato\",\n    \"Parameters\":\"Parametri\",\n    \"Parameter\":\"Parametro\",\n    \"Value\":\"Valore\",\n    \"Description\":\"Descrizione\",\n    \"Parameter Type\":\"Tipo di parametro\",\n    \"Data Type\":\"Tipo di dato\",\n    \"Response Messages\":\"Messaggi della risposta\",\n    \"HTTP Status Code\":\"Codice stato HTTP\",\n    \"Reason\":\"Motivo\",\n    \"Response Model\":\"Modello di risposta\",\n    \"Request URL\":\"URL della richiesta\",\n    \"Response Body\":\"Corpo della risposta\",\n    \"Response Code\":\"Oggetto della risposta\",\n    \"Response Headers\":\"Intestazioni della risposta\",\n    \"Hide Response\":\"Nascondi risposta\",\n    \"Try it out!\":\"Provalo!\",\n    \"Show/Hide\":\"Mostra/Nascondi\",\n    \"List Operations\":\"Mostra operazioni\",\n    \"Expand Operations\":\"Espandi operazioni\",\n    \"Raw\":\"Grezzo (raw)\",\n    \"can't parse JSON.  Raw result\":\"non è possibile parsare il JSON. Risultato grezzo (raw).\",\n    \"Model Schema\":\"Schema del modello\",\n    \"Model\":\"Modello\",\n    \"apply\":\"applica\",\n    \"Username\":\"Nome utente\",\n    \"Password\":\"Password\",\n    \"Terms of service\":\"Condizioni del servizio\",\n    \"Created by\":\"Creato da\",\n    \"See more at\":\"Informazioni aggiuntive:\",\n    \"Contact the developer\":\"Contatta lo sviluppatore\",\n    \"api version\":\"versione api\",\n    \"Response Content Type\":\"Tipo di contenuto (content type) della risposta\",\n    \"fetching resource\":\"recuperando la risorsa\",\n    \"fetching resource list\":\"recuperando lista risorse\",\n    \"Explore\":\"Esplora\",\n    \"Show Swagger Petstore Example Apis\":\"Mostra le api di esempio di Swagger Petstore\",\n    \"Can't read from server.  It may not have the appropriate access-control-origin settings.\":\"Non è possibile leggere dal server. Potrebbe non avere le impostazioni di controllo accesso origine (access-control-origin) appropriate.\",\n    \"Please specify the protocol for\":\"Si prega di specificare il protocollo per\",\n    \"Can't read swagger JSON from\":\"Impossibile leggere JSON swagger da:\",\n    \"Finished Loading Resource Information. Rendering Swagger UI\":\"Lettura informazioni risorse termianta. Swagger UI viene mostrata\",\n    \"Unable to read api\":\"Impossibile leggere la api\",\n    \"from path\":\"da cartella\",\n    \"server returned\":\"il server ha restituito\"\n});\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lang/ja.js":"'use strict';\n\n/* jshint quotmark: double */\nwindow.SwaggerTranslator.learn({\n    \"Warning: Deprecated\":\"警告: 廃止予定\",\n    \"Implementation Notes\":\"実装メモ\",\n    \"Response Class\":\"レスポンスクラス\",\n    \"Status\":\"ステータス\",\n    \"Parameters\":\"パラメータ群\",\n    \"Parameter\":\"パラメータ\",\n    \"Value\":\"値\",\n    \"Description\":\"説明\",\n    \"Parameter Type\":\"パラメータタイプ\",\n    \"Data Type\":\"データタイプ\",\n    \"Response Messages\":\"レスポンスメッセージ\",\n    \"HTTP Status Code\":\"HTTPステータスコード\",\n    \"Reason\":\"理由\",\n    \"Response Model\":\"レスポンスモデル\",\n    \"Request URL\":\"リクエストURL\",\n    \"Response Body\":\"レスポンスボディ\",\n    \"Response Code\":\"レスポンスコード\",\n    \"Response Headers\":\"レスポンスヘッダ\",\n    \"Hide Response\":\"レスポンスを隠す\",\n    \"Headers\":\"ヘッダ\",\n    \"Try it out!\":\"実際に実行!\",\n    \"Show/Hide\":\"表示/非表示\",\n    \"List Operations\":\"操作一覧\",\n    \"Expand Operations\":\"操作の展開\",\n    \"Raw\":\"Raw\",\n    \"can't parse JSON.  Raw result\":\"JSONへ解釈できません.  未加工の結果\",\n    \"Model Schema\":\"モデルスキーマ\",\n    \"Model\":\"モデル\",\n    \"apply\":\"実行\",\n    \"Username\":\"ユーザ名\",\n    \"Password\":\"パスワード\",\n    \"Terms of service\":\"サービス利用規約\",\n    \"Created by\":\"Created by\",\n    \"See more at\":\"See more at\",\n    \"Contact the developer\":\"開発者に連絡\",\n    \"api version\":\"APIバージョン\",\n    \"Response Content Type\":\"レスポンス コンテンツタイプ\",\n    \"fetching resource\":\"リソースの取得\",\n    \"fetching resource list\":\"リソース一覧の取得\",\n    \"Explore\":\"Explore\",\n    \"Show Swagger Petstore Example Apis\":\"SwaggerペットストアAPIの表示\",\n    \"Can't read from server.  It may not have the appropriate access-control-origin settings.\":\"サーバから読み込めません.  適切なaccess-control-origin設定を持っていない可能性があります.\",\n    \"Please specify the protocol for\":\"プロトコルを指定してください\",\n    \"Can't read swagger JSON from\":\"次からswagger JSONを読み込めません\",\n    \"Finished Loading Resource Information. Rendering Swagger UI\":\"リソース情報の読み込みが完了しました. Swagger UIを描画しています\",\n    \"Unable to read api\":\"APIを読み込めません\",\n    \"from path\":\"次のパスから\",\n    \"server returned\":\"サーバからの返答\"\n});\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lang/pl.js":"'use strict';\n\n/* jshint quotmark: double */\nwindow.SwaggerTranslator.learn({\n    \"Warning: Deprecated\":\"Uwaga: Wycofane\",\n    \"Implementation Notes\":\"Uwagi Implementacji\",\n    \"Response Class\":\"Klasa Odpowiedzi\",\n    \"Status\":\"Status\",\n    \"Parameters\":\"Parametry\",\n    \"Parameter\":\"Parametr\",\n    \"Value\":\"Wartość\",\n    \"Description\":\"Opis\",\n    \"Parameter Type\":\"Typ Parametru\",\n    \"Data Type\":\"Typ Danych\",\n    \"Response Messages\":\"Wiadomości Odpowiedzi\",\n    \"HTTP Status Code\":\"Kod Statusu HTTP\",\n    \"Reason\":\"Przyczyna\",\n    \"Response Model\":\"Model Odpowiedzi\",\n    \"Request URL\":\"URL Wywołania\",\n    \"Response Body\":\"Treść Odpowiedzi\",\n    \"Response Code\":\"Kod Odpowiedzi\",\n    \"Response Headers\":\"Nagłówki Odpowiedzi\",\n    \"Hide Response\":\"Ukryj Odpowiedź\",\n    \"Headers\":\"Nagłówki\",\n    \"Try it out!\":\"Wypróbuj!\",\n    \"Show/Hide\":\"Pokaż/Ukryj\",\n    \"List Operations\":\"Lista Operacji\",\n    \"Expand Operations\":\"Rozwiń Operacje\",\n    \"Raw\":\"Nieprzetworzone\",\n    \"can't parse JSON.  Raw result\":\"nie można przetworzyć pliku JSON.  Nieprzetworzone dane\",\n    \"Model Schema\":\"Schemat Modelu\",\n    \"Model\":\"Model\",\n    \"apply\":\"użyj\",\n    \"Username\":\"Nazwa użytkownika\",\n    \"Password\":\"Hasło\",\n    \"Terms of service\":\"Warunki używania\",\n    \"Created by\":\"Utworzone przez\",\n    \"See more at\":\"Zobacz więcej na\",\n    \"Contact the developer\":\"Kontakt z deweloperem\",\n    \"api version\":\"wersja api\",\n    \"Response Content Type\":\"Typ Zasobu Odpowiedzi\",\n    \"fetching resource\":\"ładowanie zasobu\",\n    \"fetching resource list\":\"ładowanie listy zasobów\",\n    \"Explore\":\"Eksploruj\",\n    \"Show Swagger Petstore Example Apis\":\"Pokaż Przykładowe Api Swagger Petstore\",\n    \"Can't read from server.  It may not have the appropriate access-control-origin settings.\":\"Brak połączenia z serwerem. Może on nie mieć odpowiednich ustawień access-control-origin.\",\n    \"Please specify the protocol for\":\"Proszę podać protokół dla\",\n    \"Can't read swagger JSON from\":\"Nie można odczytać swagger JSON z\",\n    \"Finished Loading Resource Information. Rendering Swagger UI\":\"Ukończono Ładowanie Informacji o Zasobie. Renderowanie Swagger UI\",\n    \"Unable to read api\":\"Nie można odczytać api\",\n    \"from path\":\"ze ścieżki\",\n    \"server returned\":\"serwer zwrócił\"\n});\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lang/pt.js":"'use strict';\n\n/* jshint quotmark: double */\nwindow.SwaggerTranslator.learn({\n    \"Warning: Deprecated\":\"Aviso: Depreciado\",\n    \"Implementation Notes\":\"Notas de Implementação\",\n    \"Response Class\":\"Classe de resposta\",\n    \"Status\":\"Status\",\n    \"Parameters\":\"Parâmetros\",\n    \"Parameter\":\"Parâmetro\",\n    \"Value\":\"Valor\",\n    \"Description\":\"Descrição\",\n    \"Parameter Type\":\"Tipo de parâmetro\",\n    \"Data Type\":\"Tipo de dados\",\n    \"Response Messages\":\"Mensagens de resposta\",\n    \"HTTP Status Code\":\"Código de status HTTP\",\n    \"Reason\":\"Razão\",\n    \"Response Model\":\"Modelo resposta\",\n    \"Request URL\":\"URL requisição\",\n    \"Response Body\":\"Corpo da resposta\",\n    \"Response Code\":\"Código da resposta\",\n    \"Response Headers\":\"Cabeçalho da resposta\",\n    \"Headers\":\"Cabeçalhos\",\n    \"Hide Response\":\"Esconder resposta\",\n    \"Try it out!\":\"Tente agora!\",\n    \"Show/Hide\":\"Mostrar/Esconder\",\n    \"List Operations\":\"Listar operações\",\n    \"Expand Operations\":\"Expandir operações\",\n    \"Raw\":\"Cru\",\n    \"can't parse JSON.  Raw result\":\"Falha ao analisar JSON.  Resulto cru\",\n    \"Model Schema\":\"Modelo esquema\",\n    \"Model\":\"Modelo\",\n    \"apply\":\"Aplicar\",\n    \"Username\":\"Usuário\",\n    \"Password\":\"Senha\",\n    \"Terms of service\":\"Termos do serviço\",\n    \"Created by\":\"Criado por\",\n    \"See more at\":\"Veja mais em\",\n    \"Contact the developer\":\"Contate o desenvolvedor\",\n    \"api version\":\"Versão api\",\n    \"Response Content Type\":\"Tipo de conteúdo da resposta\",\n    \"fetching resource\":\"busca recurso\",\n    \"fetching resource list\":\"buscando lista de recursos\",\n    \"Explore\":\"Explorar\",\n    \"Show Swagger Petstore Example Apis\":\"Show Swagger Petstore Example Apis\",\n    \"Can't read from server.  It may not have the appropriate access-control-origin settings.\":\"Não é possível ler do servidor. Pode não ter as apropriadas configurações access-control-origin\",\n    \"Please specify the protocol for\":\"Por favor especifique o protocolo\",\n    \"Can't read swagger JSON from\":\"Não é possível ler o JSON Swagger de\",\n    \"Finished Loading Resource Information. Rendering Swagger UI\":\"Carregar informação de recurso finalizada. Renderizando Swagger UI\",\n    \"Unable to read api\":\"Não foi possível ler api\",\n    \"from path\":\"do caminho\",\n    \"server returned\":\"servidor retornou\"\n});\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lang/ru.js":"'use strict';\n\n/* jshint quotmark: double */\nwindow.SwaggerTranslator.learn({\n    \"Warning: Deprecated\":\"Предупреждение: Устарело\",\n    \"Implementation Notes\":\"Заметки\",\n    \"Response Class\":\"Пример ответа\",\n    \"Status\":\"Статус\",\n    \"Parameters\":\"Параметры\",\n    \"Parameter\":\"Параметр\",\n    \"Value\":\"Значение\",\n    \"Description\":\"Описание\",\n    \"Parameter Type\":\"Тип параметра\",\n    \"Data Type\":\"Тип данных\",\n    \"HTTP Status Code\":\"HTTP код\",\n    \"Reason\":\"Причина\",\n    \"Response Model\":\"Структура ответа\",\n    \"Request URL\":\"URL запроса\",\n    \"Response Body\":\"Тело ответа\",\n    \"Response Code\":\"HTTP код ответа\",\n    \"Response Headers\":\"Заголовки ответа\",\n    \"Hide Response\":\"Спрятать ответ\",\n    \"Headers\":\"Заголовки\",\n    \"Response Messages\":\"Что может прийти в ответ\",\n    \"Try it out!\":\"Попробовать!\",\n    \"Show/Hide\":\"Показать/Скрыть\",\n    \"List Operations\":\"Операции кратко\",\n    \"Expand Operations\":\"Операции подробно\",\n    \"Raw\":\"В сыром виде\",\n    \"can't parse JSON.  Raw result\":\"Не удается распарсить ответ:\",\n    \"Example Value\":\"Пример\",\n    \"Model Schema\":\"Структура\",\n    \"Model\":\"Описание\",\n    \"Click to set as parameter value\":\"Нажмите, чтобы испльзовать в качестве значения параметра\",\n    \"apply\":\"применить\",\n    \"Username\":\"Имя пользователя\",\n    \"Password\":\"Пароль\",\n    \"Terms of service\":\"Условия использования\",\n    \"Created by\":\"Разработано\",\n    \"See more at\":\"Еще тут\",\n    \"Contact the developer\":\"Связаться с разработчиком\",\n    \"api version\":\"Версия API\",\n    \"Response Content Type\":\"Content Type ответа\",\n    \"Parameter content type:\":\"Content Type параметра:\",\n    \"fetching resource\":\"Получение ресурса\",\n    \"fetching resource list\":\"Получение ресурсов\",\n    \"Explore\":\"Показать\",\n    \"Show Swagger Petstore Example Apis\":\"Показать примеры АПИ\",\n    \"Can't read from server. It may not have the appropriate access-control-origin settings.\":\"Не удается получить ответ от сервера. Возможно, проблема с настройками доступа\",\n    \"Please specify the protocol for\":\"Пожалуйста, укажите протокол для\",\n    \"Can't read swagger JSON from\":\"Не получается прочитать swagger json из\",\n    \"Finished Loading Resource Information. Rendering Swagger UI\":\"Загрузка информации о ресурсах завершена. Рендерим\",\n    \"Unable to read api\":\"Не удалось прочитать api\",\n    \"from path\":\"по адресу\",\n    \"server returned\":\"сервер сказал\"\n});\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lang/translator.js":"'use strict';\n\n/**\n * Translator for documentation pages.\n *\n * To enable translation you should include one of language-files in your index.html\n * after <script src='lang/translator.js' type='text/javascript'></script>.\n * For example - <script src='lang/ru.js' type='text/javascript'></script>\n *\n * If you wish to translate some new texsts you should do two things:\n * 1. Add a new phrase pair (\"New Phrase\": \"New Translation\") into your language file (for example lang/ru.js). It will be great if you add it in other language files too.\n * 2. Mark that text it templates this way <anyHtmlTag data-sw-translate>New Phrase</anyHtmlTag> or <anyHtmlTag data-sw-translate value='New Phrase'/>.\n * The main thing here is attribute data-sw-translate. Only inner html, title-attribute and value-attribute are going to translate.\n *\n */\nwindow.SwaggerTranslator = {\n\n    _words:[],\n\n    translate: function(sel) {\n      var $this = this;\n      sel = sel || '[data-sw-translate]';\n\n      $(sel).each(function() {\n        $(this).html($this._tryTranslate($(this).html()));\n\n        $(this).val($this._tryTranslate($(this).val()));\n        $(this).attr('title', $this._tryTranslate($(this).attr('title')));\n      });\n    },\n\n    _tryTranslate: function(word) {\n      return this._words[$.trim(word)] !== undefined ? this._words[$.trim(word)] : word;\n    },\n\n    learn: function(wordsMap) {\n      this._words = wordsMap;\n    }\n};\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lang/tr.js":"'use strict';\n\n/* jshint quotmark: double */\nwindow.SwaggerTranslator.learn({\n    \"Warning: Deprecated\":\"Uyarı: Deprecated\",\n    \"Implementation Notes\":\"Gerçekleştirim Notları\",\n    \"Response Class\":\"Dönen Sınıf\",\n    \"Status\":\"Statü\",\n    \"Parameters\":\"Parametreler\",\n    \"Parameter\":\"Parametre\",\n    \"Value\":\"Değer\",\n    \"Description\":\"Açıklama\",\n    \"Parameter Type\":\"Parametre Tipi\",\n    \"Data Type\":\"Veri Tipi\",\n    \"Response Messages\":\"Dönüş Mesajı\",\n    \"HTTP Status Code\":\"HTTP Statü Kodu\",\n    \"Reason\":\"Gerekçe\",\n    \"Response Model\":\"Dönüş Modeli\",\n    \"Request URL\":\"İstek URL\",\n    \"Response Body\":\"Dönüş İçeriği\",\n    \"Response Code\":\"Dönüş Kodu\",\n    \"Response Headers\":\"Dönüş Üst Bilgileri\",\n    \"Hide Response\":\"Dönüşü Gizle\",\n    \"Headers\":\"Üst Bilgiler\",\n    \"Try it out!\":\"Dene!\",\n    \"Show/Hide\":\"Göster/Gizle\",\n    \"List Operations\":\"Operasyonları Listele\",\n    \"Expand Operations\":\"Operasyonları Aç\",\n    \"Raw\":\"Ham\",\n    \"can't parse JSON.  Raw result\":\"JSON çözümlenemiyor.  Ham sonuç\",\n    \"Model Schema\":\"Model Şema\",\n    \"Model\":\"Model\",\n    \"apply\":\"uygula\",\n    \"Username\":\"Kullanıcı Adı\",\n    \"Password\":\"Parola\",\n    \"Terms of service\":\"Servis şartları\",\n    \"Created by\":\"Oluşturan\",\n    \"See more at\":\"Daha fazlası için\",\n    \"Contact the developer\":\"Geliştirici ile İletişime Geçin\",\n    \"api version\":\"api versiyon\",\n    \"Response Content Type\":\"Dönüş İçerik Tipi\",\n    \"fetching resource\":\"kaynak getiriliyor\",\n    \"fetching resource list\":\"kaynak listesi getiriliyor\",\n    \"Explore\":\"Keşfet\",\n    \"Show Swagger Petstore Example Apis\":\"Swagger Petstore Örnek Api'yi Gör\",\n    \"Can't read from server.  It may not have the appropriate access-control-origin settings.\":\"Sunucudan okuma yapılamıyor. Sunucu access-control-origin ayarlarınızı kontrol edin.\",\n    \"Please specify the protocol for\":\"Lütfen istenen adres için protokol belirtiniz\",\n    \"Can't read swagger JSON from\":\"Swagger JSON bu kaynaktan okunamıyor\",\n    \"Finished Loading Resource Information. Rendering Swagger UI\":\"Kaynak baglantısı tamamlandı. Swagger UI gösterime hazırlanıyor\",\n    \"Unable to read api\":\"api okunamadı\",\n    \"from path\":\"yoldan\",\n    \"server returned\":\"sunucuya dönüldü\"\n});\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lang/zh-cn.js":"'use strict';\n\n/* jshint quotmark: double */\nwindow.SwaggerTranslator.learn({\n    \"Warning: Deprecated\":\"警告：已过时\",\n    \"Implementation Notes\":\"实现备注\",\n    \"Response Class\":\"响应类\",\n    \"Status\":\"状态\",\n    \"Parameters\":\"参数\",\n    \"Parameter\":\"参数\",\n    \"Value\":\"值\",\n    \"Description\":\"描述\",\n    \"Parameter Type\":\"参数类型\",\n    \"Data Type\":\"数据类型\",\n    \"Response Messages\":\"响应消息\",\n    \"HTTP Status Code\":\"HTTP状态码\",\n    \"Reason\":\"原因\",\n    \"Response Model\":\"响应模型\",\n    \"Request URL\":\"请求URL\",\n    \"Response Body\":\"响应体\",\n    \"Response Code\":\"响应码\",\n    \"Response Headers\":\"响应头\",\n    \"Hide Response\":\"隐藏响应\",\n    \"Headers\":\"头\",\n    \"Try it out!\":\"试一下！\",\n    \"Show/Hide\":\"显示/隐藏\",\n    \"List Operations\":\"显示操作\",\n    \"Expand Operations\":\"展开操作\",\n    \"Raw\":\"原始\",\n    \"can't parse JSON.  Raw result\":\"无法解析JSON. 原始结果\",\n    \"Model Schema\":\"模型架构\",\n    \"Model\":\"模型\",\n    \"apply\":\"应用\",\n    \"Username\":\"用户名\",\n    \"Password\":\"密码\",\n    \"Terms of service\":\"服务条款\",\n    \"Created by\":\"创建者\",\n    \"See more at\":\"查看更多：\",\n    \"Contact the developer\":\"联系开发者\",\n    \"api version\":\"api版本\",\n    \"Response Content Type\":\"响应Content Type\",\n    \"fetching resource\":\"正在获取资源\",\n    \"fetching resource list\":\"正在获取资源列表\",\n    \"Explore\":\"浏览\",\n    \"Show Swagger Petstore Example Apis\":\"显示 Swagger Petstore 示例 Apis\",\n    \"Can't read from server.  It may not have the appropriate access-control-origin settings.\":\"无法从服务器读取。可能没有正确设置access-control-origin。\",\n    \"Please specify the protocol for\":\"请指定协议：\",\n    \"Can't read swagger JSON from\":\"无法读取swagger JSON于\",\n    \"Finished Loading Resource Information. Rendering Swagger UI\":\"已加载资源信息。正在渲染Swagger UI\",\n    \"Unable to read api\":\"无法读取api\",\n    \"from path\":\"从路径\",\n    \"server returned\":\"服务器返回\"\n});\n","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lib/handlebars-2.0.0.js":"/*!\n\n handlebars v2.0.0\n\nCopyright (C) 2011-2014 by Yehuda Katz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n@license\n*/\n!function(a,b){\"function\"==typeof define&&define.amd?define([],b):\"object\"==typeof exports?module.exports=b():a.Handlebars=a.Handlebars||b()}(this,function(){var a=function(){\"use strict\";function a(a){this.string=a}var b;return a.prototype.toString=function(){return\"\"+this.string},b=a}(),b=function(a){\"use strict\";function b(a){return i[a]}function c(a){for(var b=1;b<arguments.length;b++)for(var c in arguments[b])Object.prototype.hasOwnProperty.call(arguments[b],c)&&(a[c]=arguments[b][c]);return a}function d(a){return a instanceof h?a.toString():null==a?\"\":a?(a=\"\"+a,k.test(a)?a.replace(j,b):a):a+\"\"}function e(a){return a||0===a?n(a)&&0===a.length?!0:!1:!0}function f(a,b){return(a?a+\".\":\"\")+b}var g={},h=a,i={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},j=/[&<>\"'`]/g,k=/[&<>\"'`]/;g.extend=c;var l=Object.prototype.toString;g.toString=l;var m=function(a){return\"function\"==typeof a};m(/x/)&&(m=function(a){return\"function\"==typeof a&&\"[object Function]\"===l.call(a)});var m;g.isFunction=m;var n=Array.isArray||function(a){return a&&\"object\"==typeof a?\"[object Array]\"===l.call(a):!1};return g.isArray=n,g.escapeExpression=d,g.isEmpty=e,g.appendContextPath=f,g}(a),c=function(){\"use strict\";function a(a,b){var d;b&&b.firstLine&&(d=b.firstLine,a+=\" - \"+d+\":\"+b.firstColumn);for(var e=Error.prototype.constructor.call(this,a),f=0;f<c.length;f++)this[c[f]]=e[c[f]];d&&(this.lineNumber=d,this.column=b.firstColumn)}var b,c=[\"description\",\"fileName\",\"lineNumber\",\"message\",\"name\",\"number\",\"stack\"];return a.prototype=new Error,b=a}(),d=function(a,b){\"use strict\";function c(a,b){this.helpers=a||{},this.partials=b||{},d(this)}function d(a){a.registerHelper(\"helperMissing\",function(){if(1===arguments.length)return void 0;throw new g(\"Missing helper: '\"+arguments[arguments.length-1].name+\"'\")}),a.registerHelper(\"blockHelperMissing\",function(b,c){var d=c.inverse,e=c.fn;if(b===!0)return e(this);if(b===!1||null==b)return d(this);if(k(b))return b.length>0?(c.ids&&(c.ids=[c.name]),a.helpers.each(b,c)):d(this);if(c.data&&c.ids){var g=q(c.data);g.contextPath=f.appendContextPath(c.data.contextPath,c.name),c={data:g}}return e(b,c)}),a.registerHelper(\"each\",function(a,b){if(!b)throw new g(\"Must pass iterator to #each\");var c,d,e=b.fn,h=b.inverse,i=0,j=\"\";if(b.data&&b.ids&&(d=f.appendContextPath(b.data.contextPath,b.ids[0])+\".\"),l(a)&&(a=a.call(this)),b.data&&(c=q(b.data)),a&&\"object\"==typeof a)if(k(a))for(var m=a.length;m>i;i++)c&&(c.index=i,c.first=0===i,c.last=i===a.length-1,d&&(c.contextPath=d+i)),j+=e(a[i],{data:c});else for(var n in a)a.hasOwnProperty(n)&&(c&&(c.key=n,c.index=i,c.first=0===i,d&&(c.contextPath=d+n)),j+=e(a[n],{data:c}),i++);return 0===i&&(j=h(this)),j}),a.registerHelper(\"if\",function(a,b){return l(a)&&(a=a.call(this)),!b.hash.includeZero&&!a||f.isEmpty(a)?b.inverse(this):b.fn(this)}),a.registerHelper(\"unless\",function(b,c){return a.helpers[\"if\"].call(this,b,{fn:c.inverse,inverse:c.fn,hash:c.hash})}),a.registerHelper(\"with\",function(a,b){l(a)&&(a=a.call(this));var c=b.fn;if(f.isEmpty(a))return b.inverse(this);if(b.data&&b.ids){var d=q(b.data);d.contextPath=f.appendContextPath(b.data.contextPath,b.ids[0]),b={data:d}}return c(a,b)}),a.registerHelper(\"log\",function(b,c){var d=c.data&&null!=c.data.level?parseInt(c.data.level,10):1;a.log(d,b)}),a.registerHelper(\"lookup\",function(a,b){return a&&a[b]})}var e={},f=a,g=b,h=\"2.0.0\";e.VERSION=h;var i=6;e.COMPILER_REVISION=i;var j={1:\"<= 1.0.rc.2\",2:\"== 1.0.0-rc.3\",3:\"== 1.0.0-rc.4\",4:\"== 1.x.x\",5:\"== 2.0.0-alpha.x\",6:\">= 2.0.0-beta.1\"};e.REVISION_CHANGES=j;var k=f.isArray,l=f.isFunction,m=f.toString,n=\"[object Object]\";e.HandlebarsEnvironment=c,c.prototype={constructor:c,logger:o,log:p,registerHelper:function(a,b){if(m.call(a)===n){if(b)throw new g(\"Arg not supported with multiple helpers\");f.extend(this.helpers,a)}else this.helpers[a]=b},unregisterHelper:function(a){delete this.helpers[a]},registerPartial:function(a,b){m.call(a)===n?f.extend(this.partials,a):this.partials[a]=b},unregisterPartial:function(a){delete this.partials[a]}};var o={methodMap:{0:\"debug\",1:\"info\",2:\"warn\",3:\"error\"},DEBUG:0,INFO:1,WARN:2,ERROR:3,level:3,log:function(a,b){if(o.level<=a){var c=o.methodMap[a];\"undefined\"!=typeof console&&console[c]&&console[c].call(console,b)}}};e.logger=o;var p=o.log;e.log=p;var q=function(a){var b=f.extend({},a);return b._parent=a,b};return e.createFrame=q,e}(b,c),e=function(a,b,c){\"use strict\";function d(a){var b=a&&a[0]||1,c=m;if(b!==c){if(c>b){var d=n[c],e=n[b];throw new l(\"Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (\"+d+\") or downgrade your runtime to an older version (\"+e+\").\")}throw new l(\"Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (\"+a[1]+\").\")}}function e(a,b){if(!b)throw new l(\"No environment passed to template\");if(!a||!a.main)throw new l(\"Unknown template object: \"+typeof a);b.VM.checkRevision(a.compiler);var c=function(c,d,e,f,g,h,i,j,m){g&&(f=k.extend({},f,g));var n=b.VM.invokePartial.call(this,c,e,f,h,i,j,m);if(null==n&&b.compile){var o={helpers:h,partials:i,data:j,depths:m};i[e]=b.compile(c,{data:void 0!==j,compat:a.compat},b),n=i[e](f,o)}if(null!=n){if(d){for(var p=n.split(\"\\n\"),q=0,r=p.length;r>q&&(p[q]||q+1!==r);q++)p[q]=d+p[q];n=p.join(\"\\n\")}return n}throw new l(\"The partial \"+e+\" could not be compiled when running in runtime-only mode\")},d={lookup:function(a,b){for(var c=a.length,d=0;c>d;d++)if(a[d]&&null!=a[d][b])return a[d][b]},lambda:function(a,b){return\"function\"==typeof a?a.call(b):a},escapeExpression:k.escapeExpression,invokePartial:c,fn:function(b){return a[b]},programs:[],program:function(a,b,c){var d=this.programs[a],e=this.fn(a);return b||c?d=f(this,a,e,b,c):d||(d=this.programs[a]=f(this,a,e)),d},data:function(a,b){for(;a&&b--;)a=a._parent;return a},merge:function(a,b){var c=a||b;return a&&b&&a!==b&&(c=k.extend({},b,a)),c},noop:b.VM.noop,compilerInfo:a.compiler},e=function(b,c){c=c||{};var f=c.data;e._setup(c),!c.partial&&a.useData&&(f=i(b,f));var g;return a.useDepths&&(g=c.depths?[b].concat(c.depths):[b]),a.main.call(d,b,d.helpers,d.partials,f,g)};return e.isTop=!0,e._setup=function(c){c.partial?(d.helpers=c.helpers,d.partials=c.partials):(d.helpers=d.merge(c.helpers,b.helpers),a.usePartial&&(d.partials=d.merge(c.partials,b.partials)))},e._child=function(b,c,e){if(a.useDepths&&!e)throw new l(\"must pass parent depths\");return f(d,b,a[b],c,e)},e}function f(a,b,c,d,e){var f=function(b,f){return f=f||{},c.call(a,b,a.helpers,a.partials,f.data||d,e&&[b].concat(e))};return f.program=b,f.depth=e?e.length:0,f}function g(a,b,c,d,e,f,g){var h={partial:!0,helpers:d,partials:e,data:f,depths:g};if(void 0===a)throw new l(\"The partial \"+b+\" could not be found\");return a instanceof Function?a(c,h):void 0}function h(){return\"\"}function i(a,b){return b&&\"root\"in b||(b=b?o(b):{},b.root=a),b}var j={},k=a,l=b,m=c.COMPILER_REVISION,n=c.REVISION_CHANGES,o=c.createFrame;return j.checkRevision=d,j.template=e,j.program=f,j.invokePartial=g,j.noop=h,j}(b,c,d),f=function(a,b,c,d,e){\"use strict\";var f,g=a,h=b,i=c,j=d,k=e,l=function(){var a=new g.HandlebarsEnvironment;return j.extend(a,g),a.SafeString=h,a.Exception=i,a.Utils=j,a.escapeExpression=j.escapeExpression,a.VM=k,a.template=function(b){return k.template(b,a)},a},m=l();return m.create=l,m[\"default\"]=m,f=m}(d,a,c,b,e),g=function(a){\"use strict\";function b(a){a=a||{},this.firstLine=a.first_line,this.firstColumn=a.first_column,this.lastColumn=a.last_column,this.lastLine=a.last_line}var c,d=a,e={ProgramNode:function(a,c,d){b.call(this,d),this.type=\"program\",this.statements=a,this.strip=c},MustacheNode:function(a,c,d,f,g){if(b.call(this,g),this.type=\"mustache\",this.strip=f,null!=d&&d.charAt){var h=d.charAt(3)||d.charAt(2);this.escaped=\"{\"!==h&&\"&\"!==h}else this.escaped=!!d;this.sexpr=a instanceof e.SexprNode?a:new e.SexprNode(a,c),this.id=this.sexpr.id,this.params=this.sexpr.params,this.hash=this.sexpr.hash,this.eligibleHelper=this.sexpr.eligibleHelper,this.isHelper=this.sexpr.isHelper},SexprNode:function(a,c,d){b.call(this,d),this.type=\"sexpr\",this.hash=c;var e=this.id=a[0],f=this.params=a.slice(1);this.isHelper=!(!f.length&&!c),this.eligibleHelper=this.isHelper||e.isSimple},PartialNode:function(a,c,d,e,f){b.call(this,f),this.type=\"partial\",this.partialName=a,this.context=c,this.hash=d,this.strip=e,this.strip.inlineStandalone=!0},BlockNode:function(a,c,d,e,f){b.call(this,f),this.type=\"block\",this.mustache=a,this.program=c,this.inverse=d,this.strip=e,d&&!c&&(this.isInverse=!0)},RawBlockNode:function(a,c,f,g){if(b.call(this,g),a.sexpr.id.original!==f)throw new d(a.sexpr.id.original+\" doesn't match \"+f,this);c=new e.ContentNode(c,g),this.type=\"block\",this.mustache=a,this.program=new e.ProgramNode([c],{},g)},ContentNode:function(a,c){b.call(this,c),this.type=\"content\",this.original=this.string=a},HashNode:function(a,c){b.call(this,c),this.type=\"hash\",this.pairs=a},IdNode:function(a,c){b.call(this,c),this.type=\"ID\";for(var e=\"\",f=[],g=0,h=\"\",i=0,j=a.length;j>i;i++){var k=a[i].part;if(e+=(a[i].separator||\"\")+k,\"..\"===k||\".\"===k||\"this\"===k){if(f.length>0)throw new d(\"Invalid path: \"+e,this);\"..\"===k?(g++,h+=\"../\"):this.isScoped=!0}else f.push(k)}this.original=e,this.parts=f,this.string=f.join(\".\"),this.depth=g,this.idName=h+this.string,this.isSimple=1===a.length&&!this.isScoped&&0===g,this.stringModeValue=this.string},PartialNameNode:function(a,c){b.call(this,c),this.type=\"PARTIAL_NAME\",this.name=a.original},DataNode:function(a,c){b.call(this,c),this.type=\"DATA\",this.id=a,this.stringModeValue=a.stringModeValue,this.idName=\"@\"+a.stringModeValue},StringNode:function(a,c){b.call(this,c),this.type=\"STRING\",this.original=this.string=this.stringModeValue=a},NumberNode:function(a,c){b.call(this,c),this.type=\"NUMBER\",this.original=this.number=a,this.stringModeValue=Number(a)},BooleanNode:function(a,c){b.call(this,c),this.type=\"BOOLEAN\",this.bool=a,this.stringModeValue=\"true\"===a},CommentNode:function(a,c){b.call(this,c),this.type=\"comment\",this.comment=a,this.strip={inlineStandalone:!0}}};return c=e}(c),h=function(){\"use strict\";var a,b=function(){function a(){this.yy={}}var b={trace:function(){},yy:{},symbols_:{error:2,root:3,program:4,EOF:5,program_repetition0:6,statement:7,mustache:8,block:9,rawBlock:10,partial:11,CONTENT:12,COMMENT:13,openRawBlock:14,END_RAW_BLOCK:15,OPEN_RAW_BLOCK:16,sexpr:17,CLOSE_RAW_BLOCK:18,openBlock:19,block_option0:20,closeBlock:21,openInverse:22,block_option1:23,OPEN_BLOCK:24,CLOSE:25,OPEN_INVERSE:26,inverseAndProgram:27,INVERSE:28,OPEN_ENDBLOCK:29,path:30,OPEN:31,OPEN_UNESCAPED:32,CLOSE_UNESCAPED:33,OPEN_PARTIAL:34,partialName:35,param:36,partial_option0:37,partial_option1:38,sexpr_repetition0:39,sexpr_option0:40,dataName:41,STRING:42,NUMBER:43,BOOLEAN:44,OPEN_SEXPR:45,CLOSE_SEXPR:46,hash:47,hash_repetition_plus0:48,hashSegment:49,ID:50,EQUALS:51,DATA:52,pathSegments:53,SEP:54,$accept:0,$end:1},terminals_:{2:\"error\",5:\"EOF\",12:\"CONTENT\",13:\"COMMENT\",15:\"END_RAW_BLOCK\",16:\"OPEN_RAW_BLOCK\",18:\"CLOSE_RAW_BLOCK\",24:\"OPEN_BLOCK\",25:\"CLOSE\",26:\"OPEN_INVERSE\",28:\"INVERSE\",29:\"OPEN_ENDBLOCK\",31:\"OPEN\",32:\"OPEN_UNESCAPED\",33:\"CLOSE_UNESCAPED\",34:\"OPEN_PARTIAL\",42:\"STRING\",43:\"NUMBER\",44:\"BOOLEAN\",45:\"OPEN_SEXPR\",46:\"CLOSE_SEXPR\",50:\"ID\",51:\"EQUALS\",52:\"DATA\",54:\"SEP\"},productions_:[0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[10,3],[14,3],[9,4],[9,4],[19,3],[22,3],[27,2],[21,3],[8,3],[8,3],[11,5],[11,4],[17,3],[17,1],[36,1],[36,1],[36,1],[36,1],[36,1],[36,3],[47,1],[49,3],[35,1],[35,1],[35,1],[41,2],[30,1],[53,3],[53,1],[6,0],[6,2],[20,0],[20,1],[23,0],[23,1],[37,0],[37,1],[38,0],[38,1],[39,0],[39,2],[40,0],[40,1],[48,1],[48,2]],performAction:function(a,b,c,d,e,f){var g=f.length-1;switch(e){case 1:return d.prepareProgram(f[g-1].statements,!0),f[g-1];case 2:this.$=new d.ProgramNode(d.prepareProgram(f[g]),{},this._$);break;case 3:this.$=f[g];break;case 4:this.$=f[g];break;case 5:this.$=f[g];break;case 6:this.$=f[g];break;case 7:this.$=new d.ContentNode(f[g],this._$);break;case 8:this.$=new d.CommentNode(f[g],this._$);break;case 9:this.$=new d.RawBlockNode(f[g-2],f[g-1],f[g],this._$);break;case 10:this.$=new d.MustacheNode(f[g-1],null,\"\",\"\",this._$);break;case 11:this.$=d.prepareBlock(f[g-3],f[g-2],f[g-1],f[g],!1,this._$);break;case 12:this.$=d.prepareBlock(f[g-3],f[g-2],f[g-1],f[g],!0,this._$);break;case 13:this.$=new d.MustacheNode(f[g-1],null,f[g-2],d.stripFlags(f[g-2],f[g]),this._$);break;case 14:this.$=new d.MustacheNode(f[g-1],null,f[g-2],d.stripFlags(f[g-2],f[g]),this._$);break;case 15:this.$={strip:d.stripFlags(f[g-1],f[g-1]),program:f[g]};break;case 16:this.$={path:f[g-1],strip:d.stripFlags(f[g-2],f[g])};break;case 17:this.$=new d.MustacheNode(f[g-1],null,f[g-2],d.stripFlags(f[g-2],f[g]),this._$);break;case 18:this.$=new d.MustacheNode(f[g-1],null,f[g-2],d.stripFlags(f[g-2],f[g]),this._$);break;case 19:this.$=new d.PartialNode(f[g-3],f[g-2],f[g-1],d.stripFlags(f[g-4],f[g]),this._$);break;case 20:this.$=new d.PartialNode(f[g-2],void 0,f[g-1],d.stripFlags(f[g-3],f[g]),this._$);break;case 21:this.$=new d.SexprNode([f[g-2]].concat(f[g-1]),f[g],this._$);break;case 22:this.$=new d.SexprNode([f[g]],null,this._$);break;case 23:this.$=f[g];break;case 24:this.$=new d.StringNode(f[g],this._$);break;case 25:this.$=new d.NumberNode(f[g],this._$);break;case 26:this.$=new d.BooleanNode(f[g],this._$);break;case 27:this.$=f[g];break;case 28:f[g-1].isHelper=!0,this.$=f[g-1];break;case 29:this.$=new d.HashNode(f[g],this._$);break;case 30:this.$=[f[g-2],f[g]];break;case 31:this.$=new d.PartialNameNode(f[g],this._$);break;case 32:this.$=new d.PartialNameNode(new d.StringNode(f[g],this._$),this._$);break;case 33:this.$=new d.PartialNameNode(new d.NumberNode(f[g],this._$));break;case 34:this.$=new d.DataNode(f[g],this._$);break;case 35:this.$=new d.IdNode(f[g],this._$);break;case 36:f[g-2].push({part:f[g],separator:f[g-1]}),this.$=f[g-2];break;case 37:this.$=[{part:f[g]}];break;case 38:this.$=[];break;case 39:f[g-1].push(f[g]);break;case 48:this.$=[];break;case 49:f[g-1].push(f[g]);break;case 52:this.$=[f[g]];break;case 53:f[g-1].push(f[g])}},table:[{3:1,4:2,5:[2,38],6:3,12:[2,38],13:[2,38],16:[2,38],24:[2,38],26:[2,38],31:[2,38],32:[2,38],34:[2,38]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:[1,10],13:[1,11],14:16,16:[1,20],19:14,22:15,24:[1,18],26:[1,19],28:[2,2],29:[2,2],31:[1,12],32:[1,13],34:[1,17]},{1:[2,1]},{5:[2,39],12:[2,39],13:[2,39],16:[2,39],24:[2,39],26:[2,39],28:[2,39],29:[2,39],31:[2,39],32:[2,39],34:[2,39]},{5:[2,3],12:[2,3],13:[2,3],16:[2,3],24:[2,3],26:[2,3],28:[2,3],29:[2,3],31:[2,3],32:[2,3],34:[2,3]},{5:[2,4],12:[2,4],13:[2,4],16:[2,4],24:[2,4],26:[2,4],28:[2,4],29:[2,4],31:[2,4],32:[2,4],34:[2,4]},{5:[2,5],12:[2,5],13:[2,5],16:[2,5],24:[2,5],26:[2,5],28:[2,5],29:[2,5],31:[2,5],32:[2,5],34:[2,5]},{5:[2,6],12:[2,6],13:[2,6],16:[2,6],24:[2,6],26:[2,6],28:[2,6],29:[2,6],31:[2,6],32:[2,6],34:[2,6]},{5:[2,7],12:[2,7],13:[2,7],16:[2,7],24:[2,7],26:[2,7],28:[2,7],29:[2,7],31:[2,7],32:[2,7],34:[2,7]},{5:[2,8],12:[2,8],13:[2,8],16:[2,8],24:[2,8],26:[2,8],28:[2,8],29:[2,8],31:[2,8],32:[2,8],34:[2,8]},{17:21,30:22,41:23,50:[1,26],52:[1,25],53:24},{17:27,30:22,41:23,50:[1,26],52:[1,25],53:24},{4:28,6:3,12:[2,38],13:[2,38],16:[2,38],24:[2,38],26:[2,38],28:[2,38],29:[2,38],31:[2,38],32:[2,38],34:[2,38]},{4:29,6:3,12:[2,38],13:[2,38],16:[2,38],24:[2,38],26:[2,38],28:[2,38],29:[2,38],31:[2,38],32:[2,38],34:[2,38]},{12:[1,30]},{30:32,35:31,42:[1,33],43:[1,34],50:[1,26],53:24},{17:35,30:22,41:23,50:[1,26],52:[1,25],53:24},{17:36,30:22,41:23,50:[1,26],52:[1,25],53:24},{17:37,30:22,41:23,50:[1,26],52:[1,25],53:24},{25:[1,38]},{18:[2,48],25:[2,48],33:[2,48],39:39,42:[2,48],43:[2,48],44:[2,48],45:[2,48],46:[2,48],50:[2,48],52:[2,48]},{18:[2,22],25:[2,22],33:[2,22],46:[2,22]},{18:[2,35],25:[2,35],33:[2,35],42:[2,35],43:[2,35],44:[2,35],45:[2,35],46:[2,35],50:[2,35],52:[2,35],54:[1,40]},{30:41,50:[1,26],53:24},{18:[2,37],25:[2,37],33:[2,37],42:[2,37],43:[2,37],44:[2,37],45:[2,37],46:[2,37],50:[2,37],52:[2,37],54:[2,37]},{33:[1,42]},{20:43,27:44,28:[1,45],29:[2,40]},{23:46,27:47,28:[1,45],29:[2,42]},{15:[1,48]},{25:[2,46],30:51,36:49,38:50,41:55,42:[1,52],43:[1,53],44:[1,54],45:[1,56],47:57,48:58,49:60,50:[1,59],52:[1,25],53:24},{25:[2,31],42:[2,31],43:[2,31],44:[2,31],45:[2,31],50:[2,31],52:[2,31]},{25:[2,32],42:[2,32],43:[2,32],44:[2,32],45:[2,32],50:[2,32],52:[2,32]},{25:[2,33],42:[2,33],43:[2,33],44:[2,33],45:[2,33],50:[2,33],52:[2,33]},{25:[1,61]},{25:[1,62]},{18:[1,63]},{5:[2,17],12:[2,17],13:[2,17],16:[2,17],24:[2,17],26:[2,17],28:[2,17],29:[2,17],31:[2,17],32:[2,17],34:[2,17]},{18:[2,50],25:[2,50],30:51,33:[2,50],36:65,40:64,41:55,42:[1,52],43:[1,53],44:[1,54],45:[1,56],46:[2,50],47:66,48:58,49:60,50:[1,59],52:[1,25],53:24},{50:[1,67]},{18:[2,34],25:[2,34],33:[2,34],42:[2,34],43:[2,34],44:[2,34],45:[2,34],46:[2,34],50:[2,34],52:[2,34]},{5:[2,18],12:[2,18],13:[2,18],16:[2,18],24:[2,18],26:[2,18],28:[2,18],29:[2,18],31:[2,18],32:[2,18],34:[2,18]},{21:68,29:[1,69]},{29:[2,41]},{4:70,6:3,12:[2,38],13:[2,38],16:[2,38],24:[2,38],26:[2,38],29:[2,38],31:[2,38],32:[2,38],34:[2,38]},{21:71,29:[1,69]},{29:[2,43]},{5:[2,9],12:[2,9],13:[2,9],16:[2,9],24:[2,9],26:[2,9],28:[2,9],29:[2,9],31:[2,9],32:[2,9],34:[2,9]},{25:[2,44],37:72,47:73,48:58,49:60,50:[1,74]},{25:[1,75]},{18:[2,23],25:[2,23],33:[2,23],42:[2,23],43:[2,23],44:[2,23],45:[2,23],46:[2,23],50:[2,23],52:[2,23]},{18:[2,24],25:[2,24],33:[2,24],42:[2,24],43:[2,24],44:[2,24],45:[2,24],46:[2,24],50:[2,24],52:[2,24]},{18:[2,25],25:[2,25],33:[2,25],42:[2,25],43:[2,25],44:[2,25],45:[2,25],46:[2,25],50:[2,25],52:[2,25]},{18:[2,26],25:[2,26],33:[2,26],42:[2,26],43:[2,26],44:[2,26],45:[2,26],46:[2,26],50:[2,26],52:[2,26]},{18:[2,27],25:[2,27],33:[2,27],42:[2,27],43:[2,27],44:[2,27],45:[2,27],46:[2,27],50:[2,27],52:[2,27]},{17:76,30:22,41:23,50:[1,26],52:[1,25],53:24},{25:[2,47]},{18:[2,29],25:[2,29],33:[2,29],46:[2,29],49:77,50:[1,74]},{18:[2,37],25:[2,37],33:[2,37],42:[2,37],43:[2,37],44:[2,37],45:[2,37],46:[2,37],50:[2,37],51:[1,78],52:[2,37],54:[2,37]},{18:[2,52],25:[2,52],33:[2,52],46:[2,52],50:[2,52]},{12:[2,13],13:[2,13],16:[2,13],24:[2,13],26:[2,13],28:[2,13],29:[2,13],31:[2,13],32:[2,13],34:[2,13]},{12:[2,14],13:[2,14],16:[2,14],24:[2,14],26:[2,14],28:[2,14],29:[2,14],31:[2,14],32:[2,14],34:[2,14]},{12:[2,10]},{18:[2,21],25:[2,21],33:[2,21],46:[2,21]},{18:[2,49],25:[2,49],33:[2,49],42:[2,49],43:[2,49],44:[2,49],45:[2,49],46:[2,49],50:[2,49],52:[2,49]},{18:[2,51],25:[2,51],33:[2,51],46:[2,51]},{18:[2,36],25:[2,36],33:[2,36],42:[2,36],43:[2,36],44:[2,36],45:[2,36],46:[2,36],50:[2,36],52:[2,36],54:[2,36]},{5:[2,11],12:[2,11],13:[2,11],16:[2,11],24:[2,11],26:[2,11],28:[2,11],29:[2,11],31:[2,11],32:[2,11],34:[2,11]},{30:79,50:[1,26],53:24},{29:[2,15]},{5:[2,12],12:[2,12],13:[2,12],16:[2,12],24:[2,12],26:[2,12],28:[2,12],29:[2,12],31:[2,12],32:[2,12],34:[2,12]},{25:[1,80]},{25:[2,45]},{51:[1,78]},{5:[2,20],12:[2,20],13:[2,20],16:[2,20],24:[2,20],26:[2,20],28:[2,20],29:[2,20],31:[2,20],32:[2,20],34:[2,20]},{46:[1,81]},{18:[2,53],25:[2,53],33:[2,53],46:[2,53],50:[2,53]},{30:51,36:82,41:55,42:[1,52],43:[1,53],44:[1,54],45:[1,56],50:[1,26],52:[1,25],53:24},{25:[1,83]},{5:[2,19],12:[2,19],13:[2,19],16:[2,19],24:[2,19],26:[2,19],28:[2,19],29:[2,19],31:[2,19],32:[2,19],34:[2,19]},{18:[2,28],25:[2,28],33:[2,28],42:[2,28],43:[2,28],44:[2,28],45:[2,28],46:[2,28],50:[2,28],52:[2,28]},{18:[2,30],25:[2,30],33:[2,30],46:[2,30],50:[2,30]},{5:[2,16],12:[2,16],13:[2,16],16:[2,16],24:[2,16],26:[2,16],28:[2,16],29:[2,16],31:[2,16],32:[2,16],34:[2,16]}],defaultActions:{4:[2,1],44:[2,41],47:[2,43],57:[2,47],63:[2,10],70:[2,15],73:[2,45]},parseError:function(a){throw new Error(a)},parse:function(a){function b(){var a;return a=c.lexer.lex()||1,\"number\"!=typeof a&&(a=c.symbols_[a]||a),a}var c=this,d=[0],e=[null],f=[],g=this.table,h=\"\",i=0,j=0,k=0;this.lexer.setInput(a),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,\"undefined\"==typeof this.lexer.yylloc&&(this.lexer.yylloc={});var l=this.lexer.yylloc;f.push(l);var m=this.lexer.options&&this.lexer.options.ranges;\"function\"==typeof this.yy.parseError&&(this.parseError=this.yy.parseError);for(var n,o,p,q,r,s,t,u,v,w={};;){if(p=d[d.length-1],this.defaultActions[p]?q=this.defaultActions[p]:((null===n||\"undefined\"==typeof n)&&(n=b()),q=g[p]&&g[p][n]),\"undefined\"==typeof q||!q.length||!q[0]){var x=\"\";if(!k){v=[];for(s in g[p])this.terminals_[s]&&s>2&&v.push(\"'\"+this.terminals_[s]+\"'\");x=this.lexer.showPosition?\"Parse error on line \"+(i+1)+\":\\n\"+this.lexer.showPosition()+\"\\nExpecting \"+v.join(\", \")+\", got '\"+(this.terminals_[n]||n)+\"'\":\"Parse error on line \"+(i+1)+\": Unexpected \"+(1==n?\"end of input\":\"'\"+(this.terminals_[n]||n)+\"'\"),this.parseError(x,{text:this.lexer.match,token:this.terminals_[n]||n,line:this.lexer.yylineno,loc:l,expected:v})}}if(q[0]instanceof Array&&q.length>1)throw new Error(\"Parse Error: multiple actions possible at state: \"+p+\", token: \"+n);switch(q[0]){case 1:d.push(n),e.push(this.lexer.yytext),f.push(this.lexer.yylloc),d.push(q[1]),n=null,o?(n=o,o=null):(j=this.lexer.yyleng,h=this.lexer.yytext,i=this.lexer.yylineno,l=this.lexer.yylloc,k>0&&k--);break;case 2:if(t=this.productions_[q[1]][1],w.$=e[e.length-t],w._$={first_line:f[f.length-(t||1)].first_line,last_line:f[f.length-1].last_line,first_column:f[f.length-(t||1)].first_column,last_column:f[f.length-1].last_column},m&&(w._$.range=[f[f.length-(t||1)].range[0],f[f.length-1].range[1]]),r=this.performAction.call(w,h,j,i,this.yy,q[1],e,f),\"undefined\"!=typeof r)return r;t&&(d=d.slice(0,-1*t*2),e=e.slice(0,-1*t),f=f.slice(0,-1*t)),d.push(this.productions_[q[1]][0]),e.push(w.$),f.push(w._$),u=g[d[d.length-2]][d[d.length-1]],d.push(u);break;case 3:return!0}}return!0}},c=function(){var a={EOF:1,parseError:function(a,b){if(!this.yy.parser)throw new Error(a);this.yy.parser.parseError(a,b)},setInput:function(a){return this._input=a,this._more=this._less=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match=\"\",this.conditionStack=[\"INITIAL\"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var a=this._input[0];this.yytext+=a,this.yyleng++,this.offset++,this.match+=a,this.matched+=a;var b=a.match(/(?:\\r\\n?|\\n).*/g);return b?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),a},unput:function(a){var b=a.length,c=a.split(/(?:\\r\\n?|\\n)/g);this._input=a+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-b-1),this.offset-=b;var d=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),c.length-1&&(this.yylineno-=c.length-1);var e=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:c?(c.length===d.length?this.yylloc.first_column:0)+d[d.length-c.length].length-c[0].length:this.yylloc.first_column-b},this.options.ranges&&(this.yylloc.range=[e[0],e[0]+this.yyleng-b]),this},more:function(){return this._more=!0,this},less:function(a){this.unput(this.match.slice(a))},pastInput:function(){var a=this.matched.substr(0,this.matched.length-this.match.length);return(a.length>20?\"...\":\"\")+a.substr(-20).replace(/\\n/g,\"\")},upcomingInput:function(){var a=this.match;return a.length<20&&(a+=this._input.substr(0,20-a.length)),(a.substr(0,20)+(a.length>20?\"...\":\"\")).replace(/\\n/g,\"\")},showPosition:function(){var a=this.pastInput(),b=new Array(a.length+1).join(\"-\");return a+this.upcomingInput()+\"\\n\"+b+\"^\"},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var a,b,c,d,e;this._more||(this.yytext=\"\",this.match=\"\");for(var f=this._currentRules(),g=0;g<f.length&&(c=this._input.match(this.rules[f[g]]),!c||b&&!(c[0].length>b[0].length)||(b=c,d=g,this.options.flex));g++);return b?(e=b[0].match(/(?:\\r\\n?|\\n).*/g),e&&(this.yylineno+=e.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:e?e[e.length-1].length-e[e.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+b[0].length},this.yytext+=b[0],this.match+=b[0],this.matches=b,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._input=this._input.slice(b[0].length),this.matched+=b[0],a=this.performAction.call(this,this.yy,this,f[d],this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),a?a:void 0):\"\"===this._input?this.EOF:this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},lex:function(){var a=this.next();return\"undefined\"!=typeof a?a:this.lex()},begin:function(a){this.conditionStack.push(a)},popState:function(){return this.conditionStack.pop()},_currentRules:function(){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules},topState:function(){return this.conditionStack[this.conditionStack.length-2]},pushState:function(a){this.begin(a)}};return a.options={},a.performAction=function(a,b,c,d){function e(a,c){return b.yytext=b.yytext.substr(a,b.yyleng-c)}switch(c){case 0:if(\"\\\\\\\\\"===b.yytext.slice(-2)?(e(0,1),this.begin(\"mu\")):\"\\\\\"===b.yytext.slice(-1)?(e(0,1),this.begin(\"emu\")):this.begin(\"mu\"),b.yytext)return 12;break;case 1:return 12;case 2:return this.popState(),12;case 3:return b.yytext=b.yytext.substr(5,b.yyleng-9),this.popState(),15;case 4:return 12;case 5:return e(0,4),this.popState(),13;case 6:return 45;case 7:return 46;case 8:return 16;case 9:return this.popState(),this.begin(\"raw\"),18;case 10:return 34;case 11:return 24;case 12:return 29;case 13:return this.popState(),28;case 14:return this.popState(),28;case 15:return 26;case 16:return 26;case 17:return 32;case 18:return 31;case 19:this.popState(),this.begin(\"com\");break;case 20:return e(3,5),this.popState(),13;case 21:return 31;case 22:return 51;case 23:return 50;case 24:return 50;case 25:return 54;case 26:break;case 27:return this.popState(),33;case 28:return this.popState(),25;case 29:return b.yytext=e(1,2).replace(/\\\\\"/g,'\"'),42;case 30:return b.yytext=e(1,2).replace(/\\\\'/g,\"'\"),42;case 31:return 52;case 32:return 44;case 33:return 44;case 34:return 43;case 35:return 50;case 36:return b.yytext=e(1,2),50;case 37:return\"INVALID\";case 38:return 5}},a.rules=[/^(?:[^\\x00]*?(?=(\\{\\{)))/,/^(?:[^\\x00]+)/,/^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/,/^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/,/^(?:[^\\x00]*?(?=(\\{\\{\\{\\{\\/)))/,/^(?:[\\s\\S]*?--\\}\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{\\{\\{\\{)/,/^(?:\\}\\}\\}\\})/,/^(?:\\{\\{(~)?>)/,/^(?:\\{\\{(~)?#)/,/^(?:\\{\\{(~)?\\/)/,/^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\^)/,/^(?:\\{\\{(~)?\\s*else\\b)/,/^(?:\\{\\{(~)?\\{)/,/^(?:\\{\\{(~)?&)/,/^(?:\\{\\{!--)/,/^(?:\\{\\{![\\s\\S]*?\\}\\})/,/^(?:\\{\\{(~)?)/,/^(?:=)/,/^(?:\\.\\.)/,/^(?:\\.(?=([=~}\\s\\/.)])))/,/^(?:[\\/.])/,/^(?:\\s+)/,/^(?:\\}(~)?\\}\\})/,/^(?:(~)?\\}\\})/,/^(?:\"(\\\\[\"]|[^\"])*\")/,/^(?:'(\\\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\\s)])))/,/^(?:false(?=([~}\\s)])))/,/^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/,/^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)]))))/,/^(?:\\[[^\\]]*\\])/,/^(?:.)/,/^(?:$)/],a.conditions={mu:{rules:[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],inclusive:!1},emu:{rules:[2],inclusive:!1},com:{rules:[5],inclusive:!1},raw:{rules:[3,4],inclusive:!1},INITIAL:{rules:[0,1,38],inclusive:!0}},a}();return b.lexer=c,a.prototype=b,b.Parser=a,new a}();return a=b}(),i=function(a){\"use strict\";function b(a,b){return{left:\"~\"===a.charAt(2),right:\"~\"===b.charAt(b.length-3)}}function c(a,b,c,d,i,k){if(a.sexpr.id.original!==d.path.original)throw new j(a.sexpr.id.original+\" doesn't match \"+d.path.original,a);var l=c&&c.program,m={left:a.strip.left,right:d.strip.right,openStandalone:f(b.statements),closeStandalone:e((l||b).statements)};if(a.strip.right&&g(b.statements,null,!0),l){var n=c.strip;n.left&&h(b.statements,null,!0),n.right&&g(l.statements,null,!0),d.strip.left&&h(l.statements,null,!0),e(b.statements)&&f(l.statements)&&(h(b.statements),g(l.statements))}else d.strip.left&&h(b.statements,null,!0);return i?new this.BlockNode(a,l,b,m,k):new this.BlockNode(a,b,l,m,k)}function d(a,b){for(var c=0,d=a.length;d>c;c++){var i=a[c],j=i.strip;if(j){var k=e(a,c,b,\"partial\"===i.type),l=f(a,c,b),m=j.openStandalone&&k,n=j.closeStandalone&&l,o=j.inlineStandalone&&k&&l;j.right&&g(a,c,!0),j.left&&h(a,c,!0),o&&(g(a,c),h(a,c)&&\"partial\"===i.type&&(i.indent=/([ \\t]+$)/.exec(a[c-1].original)?RegExp.$1:\"\")),m&&(g((i.program||i.inverse).statements),h(a,c)),n&&(g(a,c),h((i.inverse||i.program).statements))}}return a}function e(a,b,c){void 0===b&&(b=a.length);var d=a[b-1],e=a[b-2];return d?\"content\"===d.type?(e||!c?/\\r?\\n\\s*?$/:/(^|\\r?\\n)\\s*?$/).test(d.original):void 0:c}function f(a,b,c){void 0===b&&(b=-1);var d=a[b+1],e=a[b+2];return d?\"content\"===d.type?(e||!c?/^\\s*?\\r?\\n/:/^\\s*?(\\r?\\n|$)/).test(d.original):void 0:c}function g(a,b,c){var d=a[null==b?0:b+1];if(d&&\"content\"===d.type&&(c||!d.rightStripped)){var e=d.string;d.string=d.string.replace(c?/^\\s+/:/^[ \\t]*\\r?\\n?/,\"\"),d.rightStripped=d.string!==e}}function h(a,b,c){var d=a[null==b?a.length-1:b-1];if(d&&\"content\"===d.type&&(c||!d.leftStripped)){var e=d.string;return d.string=d.string.replace(c?/\\s+$/:/[ \\t]+$/,\"\"),d.leftStripped=d.string!==e,d.leftStripped}}var i={},j=a;return i.stripFlags=b,i.prepareBlock=c,i.prepareProgram=d,i}(c),j=function(a,b,c,d){\"use strict\";function e(a){return a.constructor===h.ProgramNode?a:(g.yy=k,g.parse(a))}var f={},g=a,h=b,i=c,j=d.extend;f.parser=g;var k={};return j(k,i,h),f.parse=e,f}(h,g,i,b),k=function(a,b){\"use strict\";function c(){}function d(a,b,c){if(null==a||\"string\"!=typeof a&&a.constructor!==c.AST.ProgramNode)throw new h(\"You must pass a string or Handlebars AST to Handlebars.precompile. You passed \"+a);b=b||{},\"data\"in b||(b.data=!0),b.compat&&(b.useDepths=!0);var d=c.parse(a),e=(new c.Compiler).compile(d,b);return(new c.JavaScriptCompiler).compile(e,b)}function e(a,b,c){function d(){var d=c.parse(a),e=(new c.Compiler).compile(d,b),f=(new c.JavaScriptCompiler).compile(e,b,void 0,!0);return c.template(f)}if(null==a||\"string\"!=typeof a&&a.constructor!==c.AST.ProgramNode)throw new h(\"You must pass a string or Handlebars AST to Handlebars.compile. You passed \"+a);b=b||{},\"data\"in b||(b.data=!0),b.compat&&(b.useDepths=!0);var e,f=function(a,b){return e||(e=d()),e.call(this,a,b)};return f._setup=function(a){return e||(e=d()),e._setup(a)},f._child=function(a,b,c){return e||(e=d()),e._child(a,b,c)},f}function f(a,b){if(a===b)return!0;if(i(a)&&i(b)&&a.length===b.length){for(var c=0;c<a.length;c++)if(!f(a[c],b[c]))return!1;return!0}}var g={},h=a,i=b.isArray,j=[].slice;return g.Compiler=c,c.prototype={compiler:c,equals:function(a){var b=this.opcodes.length;if(a.opcodes.length!==b)return!1;for(var c=0;b>c;c++){var d=this.opcodes[c],e=a.opcodes[c];if(d.opcode!==e.opcode||!f(d.args,e.args))return!1}for(b=this.children.length,c=0;b>c;c++)if(!this.children[c].equals(a.children[c]))return!1;return!0},guid:0,compile:function(a,b){this.opcodes=[],this.children=[],this.depths={list:[]},this.options=b,this.stringParams=b.stringParams,this.trackIds=b.trackIds;var c=this.options.knownHelpers;if(this.options.knownHelpers={helperMissing:!0,blockHelperMissing:!0,each:!0,\"if\":!0,unless:!0,\"with\":!0,log:!0,lookup:!0},c)for(var d in c)this.options.knownHelpers[d]=c[d];return this.accept(a)},accept:function(a){return this[a.type](a)},program:function(a){for(var b=a.statements,c=0,d=b.length;d>c;c++)this.accept(b[c]);return this.isSimple=1===d,this.depths.list=this.depths.list.sort(function(a,b){return a-b}),this},compileProgram:function(a){var b,c=(new this.compiler).compile(a,this.options),d=this.guid++;\nthis.usePartial=this.usePartial||c.usePartial,this.children[d]=c;for(var e=0,f=c.depths.list.length;f>e;e++)b=c.depths.list[e],2>b||this.addDepth(b-1);return d},block:function(a){var b=a.mustache,c=a.program,d=a.inverse;c&&(c=this.compileProgram(c)),d&&(d=this.compileProgram(d));var e=b.sexpr,f=this.classifySexpr(e);\"helper\"===f?this.helperSexpr(e,c,d):\"simple\"===f?(this.simpleSexpr(e),this.opcode(\"pushProgram\",c),this.opcode(\"pushProgram\",d),this.opcode(\"emptyHash\"),this.opcode(\"blockValue\",e.id.original)):(this.ambiguousSexpr(e,c,d),this.opcode(\"pushProgram\",c),this.opcode(\"pushProgram\",d),this.opcode(\"emptyHash\"),this.opcode(\"ambiguousBlockValue\")),this.opcode(\"append\")},hash:function(a){var b,c,d=a.pairs;for(this.opcode(\"pushHash\"),b=0,c=d.length;c>b;b++)this.pushParam(d[b][1]);for(;b--;)this.opcode(\"assignToHash\",d[b][0]);this.opcode(\"popHash\")},partial:function(a){var b=a.partialName;this.usePartial=!0,a.hash?this.accept(a.hash):this.opcode(\"push\",\"undefined\"),a.context?this.accept(a.context):(this.opcode(\"getContext\",0),this.opcode(\"pushContext\")),this.opcode(\"invokePartial\",b.name,a.indent||\"\"),this.opcode(\"append\")},content:function(a){a.string&&this.opcode(\"appendContent\",a.string)},mustache:function(a){this.sexpr(a.sexpr),a.escaped&&!this.options.noEscape?this.opcode(\"appendEscaped\"):this.opcode(\"append\")},ambiguousSexpr:function(a,b,c){var d=a.id,e=d.parts[0],f=null!=b||null!=c;this.opcode(\"getContext\",d.depth),this.opcode(\"pushProgram\",b),this.opcode(\"pushProgram\",c),this.ID(d),this.opcode(\"invokeAmbiguous\",e,f)},simpleSexpr:function(a){var b=a.id;\"DATA\"===b.type?this.DATA(b):b.parts.length?this.ID(b):(this.addDepth(b.depth),this.opcode(\"getContext\",b.depth),this.opcode(\"pushContext\")),this.opcode(\"resolvePossibleLambda\")},helperSexpr:function(a,b,c){var d=this.setupFullMustacheParams(a,b,c),e=a.id,f=e.parts[0];if(this.options.knownHelpers[f])this.opcode(\"invokeKnownHelper\",d.length,f);else{if(this.options.knownHelpersOnly)throw new h(\"You specified knownHelpersOnly, but used the unknown helper \"+f,a);e.falsy=!0,this.ID(e),this.opcode(\"invokeHelper\",d.length,e.original,e.isSimple)}},sexpr:function(a){var b=this.classifySexpr(a);\"simple\"===b?this.simpleSexpr(a):\"helper\"===b?this.helperSexpr(a):this.ambiguousSexpr(a)},ID:function(a){this.addDepth(a.depth),this.opcode(\"getContext\",a.depth);var b=a.parts[0];b?this.opcode(\"lookupOnContext\",a.parts,a.falsy,a.isScoped):this.opcode(\"pushContext\")},DATA:function(a){this.options.data=!0,this.opcode(\"lookupData\",a.id.depth,a.id.parts)},STRING:function(a){this.opcode(\"pushString\",a.string)},NUMBER:function(a){this.opcode(\"pushLiteral\",a.number)},BOOLEAN:function(a){this.opcode(\"pushLiteral\",a.bool)},comment:function(){},opcode:function(a){this.opcodes.push({opcode:a,args:j.call(arguments,1)})},addDepth:function(a){0!==a&&(this.depths[a]||(this.depths[a]=!0,this.depths.list.push(a)))},classifySexpr:function(a){var b=a.isHelper,c=a.eligibleHelper,d=this.options;if(c&&!b){var e=a.id.parts[0];d.knownHelpers[e]?b=!0:d.knownHelpersOnly&&(c=!1)}return b?\"helper\":c?\"ambiguous\":\"simple\"},pushParams:function(a){for(var b=0,c=a.length;c>b;b++)this.pushParam(a[b])},pushParam:function(a){this.stringParams?(a.depth&&this.addDepth(a.depth),this.opcode(\"getContext\",a.depth||0),this.opcode(\"pushStringParam\",a.stringModeValue,a.type),\"sexpr\"===a.type&&this.sexpr(a)):(this.trackIds&&this.opcode(\"pushId\",a.type,a.idName||a.stringModeValue),this.accept(a))},setupFullMustacheParams:function(a,b,c){var d=a.params;return this.pushParams(d),this.opcode(\"pushProgram\",b),this.opcode(\"pushProgram\",c),a.hash?this.hash(a.hash):this.opcode(\"emptyHash\"),d}},g.precompile=d,g.compile=e,g}(c,b),l=function(a,b){\"use strict\";function c(a){this.value=a}function d(){}var e,f=a.COMPILER_REVISION,g=a.REVISION_CHANGES,h=b;d.prototype={nameLookup:function(a,b){return d.isValidJavaScriptVariableName(b)?a+\".\"+b:a+\"['\"+b+\"']\"},depthedLookup:function(a){return this.aliases.lookup=\"this.lookup\",'lookup(depths, \"'+a+'\")'},compilerInfo:function(){var a=f,b=g[a];return[a,b]},appendToBuffer:function(a){return this.environment.isSimple?\"return \"+a+\";\":{appendToBuffer:!0,content:a,toString:function(){return\"buffer += \"+a+\";\"}}},initializeBuffer:function(){return this.quotedString(\"\")},namespace:\"Handlebars\",compile:function(a,b,c,d){this.environment=a,this.options=b,this.stringParams=this.options.stringParams,this.trackIds=this.options.trackIds,this.precompile=!d,this.name=this.environment.name,this.isChild=!!c,this.context=c||{programs:[],environments:[]},this.preamble(),this.stackSlot=0,this.stackVars=[],this.aliases={},this.registers={list:[]},this.hashes=[],this.compileStack=[],this.inlineStack=[],this.compileChildren(a,b),this.useDepths=this.useDepths||a.depths.list.length||this.options.compat;var e,f,g,i=a.opcodes;for(f=0,g=i.length;g>f;f++)e=i[f],this[e.opcode].apply(this,e.args);if(this.pushSource(\"\"),this.stackSlot||this.inlineStack.length||this.compileStack.length)throw new h(\"Compile completed with content left on stack\");var j=this.createFunctionContext(d);if(this.isChild)return j;var k={compiler:this.compilerInfo(),main:j},l=this.context.programs;for(f=0,g=l.length;g>f;f++)l[f]&&(k[f]=l[f]);return this.environment.usePartial&&(k.usePartial=!0),this.options.data&&(k.useData=!0),this.useDepths&&(k.useDepths=!0),this.options.compat&&(k.compat=!0),d||(k.compiler=JSON.stringify(k.compiler),k=this.objectLiteral(k)),k},preamble:function(){this.lastContext=0,this.source=[]},createFunctionContext:function(a){var b=\"\",c=this.stackVars.concat(this.registers.list);c.length>0&&(b+=\", \"+c.join(\", \"));for(var d in this.aliases)this.aliases.hasOwnProperty(d)&&(b+=\", \"+d+\"=\"+this.aliases[d]);var e=[\"depth0\",\"helpers\",\"partials\",\"data\"];this.useDepths&&e.push(\"depths\");var f=this.mergeSource(b);return a?(e.push(f),Function.apply(this,e)):\"function(\"+e.join(\",\")+\") {\\n  \"+f+\"}\"},mergeSource:function(a){for(var b,c,d=\"\",e=!this.forceBuffer,f=0,g=this.source.length;g>f;f++){var h=this.source[f];h.appendToBuffer?b=b?b+\"\\n    + \"+h.content:h.content:(b&&(d?d+=\"buffer += \"+b+\";\\n  \":(c=!0,d=b+\";\\n  \"),b=void 0),d+=h+\"\\n  \",this.environment.isSimple||(e=!1))}return e?(b||!d)&&(d+=\"return \"+(b||'\"\"')+\";\\n\"):(a+=\", buffer = \"+(c?\"\":this.initializeBuffer()),d+=b?\"return buffer + \"+b+\";\\n\":\"return buffer;\\n\"),a&&(d=\"var \"+a.substring(2)+(c?\"\":\";\\n  \")+d),d},blockValue:function(a){this.aliases.blockHelperMissing=\"helpers.blockHelperMissing\";var b=[this.contextName(0)];this.setupParams(a,0,b);var c=this.popStack();b.splice(1,0,c),this.push(\"blockHelperMissing.call(\"+b.join(\", \")+\")\")},ambiguousBlockValue:function(){this.aliases.blockHelperMissing=\"helpers.blockHelperMissing\";var a=[this.contextName(0)];this.setupParams(\"\",0,a,!0),this.flushInline();var b=this.topStack();a.splice(1,0,b),this.pushSource(\"if (!\"+this.lastHelper+\") { \"+b+\" = blockHelperMissing.call(\"+a.join(\", \")+\"); }\")},appendContent:function(a){this.pendingContent&&(a=this.pendingContent+a),this.pendingContent=a},append:function(){this.flushInline();var a=this.popStack();this.pushSource(\"if (\"+a+\" != null) { \"+this.appendToBuffer(a)+\" }\"),this.environment.isSimple&&this.pushSource(\"else { \"+this.appendToBuffer(\"''\")+\" }\")},appendEscaped:function(){this.aliases.escapeExpression=\"this.escapeExpression\",this.pushSource(this.appendToBuffer(\"escapeExpression(\"+this.popStack()+\")\"))},getContext:function(a){this.lastContext=a},pushContext:function(){this.pushStackLiteral(this.contextName(this.lastContext))},lookupOnContext:function(a,b,c){var d=0,e=a.length;for(c||!this.options.compat||this.lastContext?this.pushContext():this.push(this.depthedLookup(a[d++]));e>d;d++)this.replaceStack(function(c){var e=this.nameLookup(c,a[d],\"context\");return b?\" && \"+e:\" != null ? \"+e+\" : \"+c})},lookupData:function(a,b){a?this.pushStackLiteral(\"this.data(data, \"+a+\")\"):this.pushStackLiteral(\"data\");for(var c=b.length,d=0;c>d;d++)this.replaceStack(function(a){return\" && \"+this.nameLookup(a,b[d],\"data\")})},resolvePossibleLambda:function(){this.aliases.lambda=\"this.lambda\",this.push(\"lambda(\"+this.popStack()+\", \"+this.contextName(0)+\")\")},pushStringParam:function(a,b){this.pushContext(),this.pushString(b),\"sexpr\"!==b&&(\"string\"==typeof a?this.pushString(a):this.pushStackLiteral(a))},emptyHash:function(){this.pushStackLiteral(\"{}\"),this.trackIds&&this.push(\"{}\"),this.stringParams&&(this.push(\"{}\"),this.push(\"{}\"))},pushHash:function(){this.hash&&this.hashes.push(this.hash),this.hash={values:[],types:[],contexts:[],ids:[]}},popHash:function(){var a=this.hash;this.hash=this.hashes.pop(),this.trackIds&&this.push(\"{\"+a.ids.join(\",\")+\"}\"),this.stringParams&&(this.push(\"{\"+a.contexts.join(\",\")+\"}\"),this.push(\"{\"+a.types.join(\",\")+\"}\")),this.push(\"{\\n    \"+a.values.join(\",\\n    \")+\"\\n  }\")},pushString:function(a){this.pushStackLiteral(this.quotedString(a))},push:function(a){return this.inlineStack.push(a),a},pushLiteral:function(a){this.pushStackLiteral(a)},pushProgram:function(a){null!=a?this.pushStackLiteral(this.programExpression(a)):this.pushStackLiteral(null)},invokeHelper:function(a,b,c){this.aliases.helperMissing=\"helpers.helperMissing\";var d=this.popStack(),e=this.setupHelper(a,b),f=(c?e.name+\" || \":\"\")+d+\" || helperMissing\";this.push(\"((\"+f+\").call(\"+e.callParams+\"))\")},invokeKnownHelper:function(a,b){var c=this.setupHelper(a,b);this.push(c.name+\".call(\"+c.callParams+\")\")},invokeAmbiguous:function(a,b){this.aliases.functionType='\"function\"',this.aliases.helperMissing=\"helpers.helperMissing\",this.useRegister(\"helper\");var c=this.popStack();this.emptyHash();var d=this.setupHelper(0,a,b),e=this.lastHelper=this.nameLookup(\"helpers\",a,\"helper\");this.push(\"((helper = (helper = \"+e+\" || \"+c+\") != null ? helper : helperMissing\"+(d.paramsInit?\"),(\"+d.paramsInit:\"\")+\"),(typeof helper === functionType ? helper.call(\"+d.callParams+\") : helper))\")},invokePartial:function(a,b){var c=[this.nameLookup(\"partials\",a,\"partial\"),\"'\"+b+\"'\",\"'\"+a+\"'\",this.popStack(),this.popStack(),\"helpers\",\"partials\"];this.options.data?c.push(\"data\"):this.options.compat&&c.push(\"undefined\"),this.options.compat&&c.push(\"depths\"),this.push(\"this.invokePartial(\"+c.join(\", \")+\")\")},assignToHash:function(a){var b,c,d,e=this.popStack();this.trackIds&&(d=this.popStack()),this.stringParams&&(c=this.popStack(),b=this.popStack());var f=this.hash;b&&f.contexts.push(\"'\"+a+\"': \"+b),c&&f.types.push(\"'\"+a+\"': \"+c),d&&f.ids.push(\"'\"+a+\"': \"+d),f.values.push(\"'\"+a+\"': (\"+e+\")\")},pushId:function(a,b){\"ID\"===a||\"DATA\"===a?this.pushString(b):\"sexpr\"===a?this.pushStackLiteral(\"true\"):this.pushStackLiteral(\"null\")},compiler:d,compileChildren:function(a,b){for(var c,d,e=a.children,f=0,g=e.length;g>f;f++){c=e[f],d=new this.compiler;var h=this.matchExistingProgram(c);null==h?(this.context.programs.push(\"\"),h=this.context.programs.length,c.index=h,c.name=\"program\"+h,this.context.programs[h]=d.compile(c,b,this.context,!this.precompile),this.context.environments[h]=c,this.useDepths=this.useDepths||d.useDepths):(c.index=h,c.name=\"program\"+h)}},matchExistingProgram:function(a){for(var b=0,c=this.context.environments.length;c>b;b++){var d=this.context.environments[b];if(d&&d.equals(a))return b}},programExpression:function(a){var b=this.environment.children[a],c=(b.depths.list,this.useDepths),d=[b.index,\"data\"];return c&&d.push(\"depths\"),\"this.program(\"+d.join(\", \")+\")\"},useRegister:function(a){this.registers[a]||(this.registers[a]=!0,this.registers.list.push(a))},pushStackLiteral:function(a){return this.push(new c(a))},pushSource:function(a){this.pendingContent&&(this.source.push(this.appendToBuffer(this.quotedString(this.pendingContent))),this.pendingContent=void 0),a&&this.source.push(a)},pushStack:function(a){this.flushInline();var b=this.incrStack();return this.pushSource(b+\" = \"+a+\";\"),this.compileStack.push(b),b},replaceStack:function(a){{var b,d,e,f=\"\";this.isInline()}if(!this.isInline())throw new h(\"replaceStack on non-inline\");var g=this.popStack(!0);if(g instanceof c)f=b=g.value,e=!0;else{d=!this.stackSlot;var i=d?this.incrStack():this.topStackName();f=\"(\"+this.push(i)+\" = \"+g+\")\",b=this.topStack()}var j=a.call(this,b);e||this.popStack(),d&&this.stackSlot--,this.push(\"(\"+f+j+\")\")},incrStack:function(){return this.stackSlot++,this.stackSlot>this.stackVars.length&&this.stackVars.push(\"stack\"+this.stackSlot),this.topStackName()},topStackName:function(){return\"stack\"+this.stackSlot},flushInline:function(){var a=this.inlineStack;if(a.length){this.inlineStack=[];for(var b=0,d=a.length;d>b;b++){var e=a[b];e instanceof c?this.compileStack.push(e):this.pushStack(e)}}},isInline:function(){return this.inlineStack.length},popStack:function(a){var b=this.isInline(),d=(b?this.inlineStack:this.compileStack).pop();if(!a&&d instanceof c)return d.value;if(!b){if(!this.stackSlot)throw new h(\"Invalid stack pop\");this.stackSlot--}return d},topStack:function(){var a=this.isInline()?this.inlineStack:this.compileStack,b=a[a.length-1];return b instanceof c?b.value:b},contextName:function(a){return this.useDepths&&a?\"depths[\"+a+\"]\":\"depth\"+a},quotedString:function(a){return'\"'+a.replace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"').replace(/\\n/g,\"\\\\n\").replace(/\\r/g,\"\\\\r\").replace(/\\u2028/g,\"\\\\u2028\").replace(/\\u2029/g,\"\\\\u2029\")+'\"'},objectLiteral:function(a){var b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(this.quotedString(c)+\":\"+a[c]);return\"{\"+b.join(\",\")+\"}\"},setupHelper:function(a,b,c){var d=[],e=this.setupParams(b,a,d,c),f=this.nameLookup(\"helpers\",b,\"helper\");return{params:d,paramsInit:e,name:f,callParams:[this.contextName(0)].concat(d).join(\", \")}},setupOptions:function(a,b,c){var d,e,f,g={},h=[],i=[],j=[];g.name=this.quotedString(a),g.hash=this.popStack(),this.trackIds&&(g.hashIds=this.popStack()),this.stringParams&&(g.hashTypes=this.popStack(),g.hashContexts=this.popStack()),e=this.popStack(),f=this.popStack(),(f||e)&&(f||(f=\"this.noop\"),e||(e=\"this.noop\"),g.fn=f,g.inverse=e);for(var k=b;k--;)d=this.popStack(),c[k]=d,this.trackIds&&(j[k]=this.popStack()),this.stringParams&&(i[k]=this.popStack(),h[k]=this.popStack());return this.trackIds&&(g.ids=\"[\"+j.join(\",\")+\"]\"),this.stringParams&&(g.types=\"[\"+i.join(\",\")+\"]\",g.contexts=\"[\"+h.join(\",\")+\"]\"),this.options.data&&(g.data=\"data\"),g},setupParams:function(a,b,c,d){var e=this.objectLiteral(this.setupOptions(a,b,c));return d?(this.useRegister(\"options\"),c.push(\"options\"),\"options=\"+e):(c.push(e),\"\")}};for(var i=\"break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield\".split(\" \"),j=d.RESERVED_WORDS={},k=0,l=i.length;l>k;k++)j[i[k]]=!0;return d.isValidJavaScriptVariableName=function(a){return!d.RESERVED_WORDS[a]&&/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(a)},e=d}(d,c),m=function(a,b,c,d,e){\"use strict\";var f,g=a,h=b,i=c.parser,j=c.parse,k=d.Compiler,l=d.compile,m=d.precompile,n=e,o=g.create,p=function(){var a=o();return a.compile=function(b,c){return l(b,c,a)},a.precompile=function(b,c){return m(b,c,a)},a.AST=h,a.Compiler=k,a.JavaScriptCompiler=n,a.Parser=i,a.parse=j,a};return g=p(),g.create=p,g[\"default\"]=g,f=g}(f,g,j,k,l);return m});","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lib/highlight.7.3.pack.js":"var hljs=new function(){function l(o){return o.replace(/&/gm,\"&amp;\").replace(/</gm,\"&lt;\").replace(/>/gm,\"&gt;\")}function b(p){for(var o=p.firstChild;o;o=o.nextSibling){if(o.nodeName==\"CODE\"){return o}if(!(o.nodeType==3&&o.nodeValue.match(/\\s+/))){break}}}function h(p,o){return Array.prototype.map.call(p.childNodes,function(q){if(q.nodeType==3){return o?q.nodeValue.replace(/\\n/g,\"\"):q.nodeValue}if(q.nodeName==\"BR\"){return\"\\n\"}return h(q,o)}).join(\"\")}function a(q){var p=(q.className+\" \"+q.parentNode.className).split(/\\s+/);p=p.map(function(r){return r.replace(/^language-/,\"\")});for(var o=0;o<p.length;o++){if(e[p[o]]||p[o]==\"no-highlight\"){return p[o]}}}function c(q){var o=[];(function p(r,s){for(var t=r.firstChild;t;t=t.nextSibling){if(t.nodeType==3){s+=t.nodeValue.length}else{if(t.nodeName==\"BR\"){s+=1}else{if(t.nodeType==1){o.push({event:\"start\",offset:s,node:t});s=p(t,s);o.push({event:\"stop\",offset:s,node:t})}}}}return s})(q,0);return o}function j(x,v,w){var p=0;var y=\"\";var r=[];function t(){if(x.length&&v.length){if(x[0].offset!=v[0].offset){return(x[0].offset<v[0].offset)?x:v}else{return v[0].event==\"start\"?x:v}}else{return x.length?x:v}}function s(A){function z(B){return\" \"+B.nodeName+'=\"'+l(B.value)+'\"'}return\"<\"+A.nodeName+Array.prototype.map.call(A.attributes,z).join(\"\")+\">\"}while(x.length||v.length){var u=t().splice(0,1)[0];y+=l(w.substr(p,u.offset-p));p=u.offset;if(u.event==\"start\"){y+=s(u.node);r.push(u.node)}else{if(u.event==\"stop\"){var o,q=r.length;do{q--;o=r[q];y+=(\"</\"+o.nodeName.toLowerCase()+\">\")}while(o!=u.node);r.splice(q,1);while(q<r.length){y+=s(r[q]);q++}}}}return y+l(w.substr(p))}function f(q){function o(s,r){return RegExp(s,\"m\"+(q.cI?\"i\":\"\")+(r?\"g\":\"\"))}function p(y,w){if(y.compiled){return}y.compiled=true;var s=[];if(y.k){var r={};function z(A,t){t.split(\" \").forEach(function(B){var C=B.split(\"|\");r[C[0]]=[A,C[1]?Number(C[1]):1];s.push(C[0])})}y.lR=o(y.l||hljs.IR,true);if(typeof y.k==\"string\"){z(\"keyword\",y.k)}else{for(var x in y.k){if(!y.k.hasOwnProperty(x)){continue}z(x,y.k[x])}}y.k=r}if(w){if(y.bWK){y.b=\"\\\\b(\"+s.join(\"|\")+\")\\\\s\"}y.bR=o(y.b?y.b:\"\\\\B|\\\\b\");if(!y.e&&!y.eW){y.e=\"\\\\B|\\\\b\"}if(y.e){y.eR=o(y.e)}y.tE=y.e||\"\";if(y.eW&&w.tE){y.tE+=(y.e?\"|\":\"\")+w.tE}}if(y.i){y.iR=o(y.i)}if(y.r===undefined){y.r=1}if(!y.c){y.c=[]}for(var v=0;v<y.c.length;v++){if(y.c[v]==\"self\"){y.c[v]=y}p(y.c[v],y)}if(y.starts){p(y.starts,w)}var u=[];for(var v=0;v<y.c.length;v++){u.push(y.c[v].b)}if(y.tE){u.push(y.tE)}if(y.i){u.push(y.i)}y.t=u.length?o(u.join(\"|\"),true):{exec:function(t){return null}}}p(q)}function d(D,E){function o(r,M){for(var L=0;L<M.c.length;L++){var K=M.c[L].bR.exec(r);if(K&&K.index==0){return M.c[L]}}}function s(K,r){if(K.e&&K.eR.test(r)){return K}if(K.eW){return s(K.parent,r)}}function t(r,K){return K.i&&K.iR.test(r)}function y(L,r){var K=F.cI?r[0].toLowerCase():r[0];return L.k.hasOwnProperty(K)&&L.k[K]}function G(){var K=l(w);if(!A.k){return K}var r=\"\";var N=0;A.lR.lastIndex=0;var L=A.lR.exec(K);while(L){r+=K.substr(N,L.index-N);var M=y(A,L);if(M){v+=M[1];r+='<span class=\"'+M[0]+'\">'+L[0]+\"</span>\"}else{r+=L[0]}N=A.lR.lastIndex;L=A.lR.exec(K)}return r+K.substr(N)}function z(){if(A.sL&&!e[A.sL]){return l(w)}var r=A.sL?d(A.sL,w):g(w);if(A.r>0){v+=r.keyword_count;B+=r.r}return'<span class=\"'+r.language+'\">'+r.value+\"</span>\"}function J(){return A.sL!==undefined?z():G()}function I(L,r){var K=L.cN?'<span class=\"'+L.cN+'\">':\"\";if(L.rB){x+=K;w=\"\"}else{if(L.eB){x+=l(r)+K;w=\"\"}else{x+=K;w=r}}A=Object.create(L,{parent:{value:A}});B+=L.r}function C(K,r){w+=K;if(r===undefined){x+=J();return 0}var L=o(r,A);if(L){x+=J();I(L,r);return L.rB?0:r.length}var M=s(A,r);if(M){if(!(M.rE||M.eE)){w+=r}x+=J();do{if(A.cN){x+=\"</span>\"}A=A.parent}while(A!=M.parent);if(M.eE){x+=l(r)}w=\"\";if(M.starts){I(M.starts,\"\")}return M.rE?0:r.length}if(t(r,A)){throw\"Illegal\"}w+=r;return r.length||1}var F=e[D];f(F);var A=F;var w=\"\";var B=0;var v=0;var x=\"\";try{var u,q,p=0;while(true){A.t.lastIndex=p;u=A.t.exec(E);if(!u){break}q=C(E.substr(p,u.index-p),u[0]);p=u.index+q}C(E.substr(p));return{r:B,keyword_count:v,value:x,language:D}}catch(H){if(H==\"Illegal\"){return{r:0,keyword_count:0,value:l(E)}}else{throw H}}}function g(s){var o={keyword_count:0,r:0,value:l(s)};var q=o;for(var p in e){if(!e.hasOwnProperty(p)){continue}var r=d(p,s);r.language=p;if(r.keyword_count+r.r>q.keyword_count+q.r){q=r}if(r.keyword_count+r.r>o.keyword_count+o.r){q=o;o=r}}if(q.language){o.second_best=q}return o}function i(q,p,o){if(p){q=q.replace(/^((<[^>]+>|\\t)+)/gm,function(r,v,u,t){return v.replace(/\\t/g,p)})}if(o){q=q.replace(/\\n/g,\"<br>\")}return q}function m(r,u,p){var v=h(r,p);var t=a(r);if(t==\"no-highlight\"){return}var w=t?d(t,v):g(v);t=w.language;var o=c(r);if(o.length){var q=document.createElement(\"pre\");q.innerHTML=w.value;w.value=j(o,c(q),v)}w.value=i(w.value,u,p);var s=r.className;if(!s.match(\"(\\\\s|^)(language-)?\"+t+\"(\\\\s|$)\")){s=s?(s+\" \"+t):t}r.innerHTML=w.value;r.className=s;r.result={language:t,kw:w.keyword_count,re:w.r};if(w.second_best){r.second_best={language:w.second_best.language,kw:w.second_best.keyword_count,re:w.second_best.r}}}function n(){if(n.called){return}n.called=true;Array.prototype.map.call(document.getElementsByTagName(\"pre\"),b).filter(Boolean).forEach(function(o){m(o,hljs.tabReplace)})}function k(){window.addEventListener(\"DOMContentLoaded\",n,false);window.addEventListener(\"load\",n,false)}var e={};this.LANGUAGES=e;this.highlight=d;this.highlightAuto=g;this.fixMarkup=i;this.highlightBlock=m;this.initHighlighting=n;this.initHighlightingOnLoad=k;this.IR=\"[a-zA-Z][a-zA-Z0-9_]*\";this.UIR=\"[a-zA-Z_][a-zA-Z0-9_]*\";this.NR=\"\\\\b\\\\d+(\\\\.\\\\d+)?\";this.CNR=\"(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)\";this.BNR=\"\\\\b(0b[01]+)\";this.RSR=\"!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|\\\\.|-|-=|/|/=|:|;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~\";this.BE={b:\"\\\\\\\\[\\\\s\\\\S]\",r:0};this.ASM={cN:\"string\",b:\"'\",e:\"'\",i:\"\\\\n\",c:[this.BE],r:0};this.QSM={cN:\"string\",b:'\"',e:'\"',i:\"\\\\n\",c:[this.BE],r:0};this.CLCM={cN:\"comment\",b:\"//\",e:\"$\"};this.CBLCLM={cN:\"comment\",b:\"/\\\\*\",e:\"\\\\*/\"};this.HCM={cN:\"comment\",b:\"#\",e:\"$\"};this.NM={cN:\"number\",b:this.NR,r:0};this.CNM={cN:\"number\",b:this.CNR,r:0};this.BNM={cN:\"number\",b:this.BNR,r:0};this.inherit=function(q,r){var o={};for(var p in q){o[p]=q[p]}if(r){for(var p in r){o[p]=r[p]}}return o}}();hljs.LANGUAGES.xml=function(a){var c=\"[A-Za-z0-9\\\\._:-]+\";var b={eW:true,c:[{cN:\"attribute\",b:c,r:0},{b:'=\"',rB:true,e:'\"',c:[{cN:\"value\",b:'\"',eW:true}]},{b:\"='\",rB:true,e:\"'\",c:[{cN:\"value\",b:\"'\",eW:true}]},{b:\"=\",c:[{cN:\"value\",b:\"[^\\\\s/>]+\"}]}]};return{cI:true,c:[{cN:\"pi\",b:\"<\\\\?\",e:\"\\\\?>\",r:10},{cN:\"doctype\",b:\"<!DOCTYPE\",e:\">\",r:10,c:[{b:\"\\\\[\",e:\"\\\\]\"}]},{cN:\"comment\",b:\"<!--\",e:\"-->\",r:10},{cN:\"cdata\",b:\"<\\\\!\\\\[CDATA\\\\[\",e:\"\\\\]\\\\]>\",r:10},{cN:\"tag\",b:\"<style(?=\\\\s|>|$)\",e:\">\",k:{title:\"style\"},c:[b],starts:{e:\"</style>\",rE:true,sL:\"css\"}},{cN:\"tag\",b:\"<script(?=\\\\s|>|$)\",e:\">\",k:{title:\"script\"},c:[b],starts:{e:\"<\\/script>\",rE:true,sL:\"javascript\"}},{b:\"<%\",e:\"%>\",sL:\"vbscript\"},{cN:\"tag\",b:\"</?\",e:\"/?>\",c:[{cN:\"title\",b:\"[^ />]+\"},b]}]}}(hljs);hljs.LANGUAGES.json=function(a){var e={literal:\"true false null\"};var d=[a.QSM,a.CNM];var c={cN:\"value\",e:\",\",eW:true,eE:true,c:d,k:e};var b={b:\"{\",e:\"}\",c:[{cN:\"attribute\",b:'\\\\s*\"',e:'\"\\\\s*:\\\\s*',eB:true,eE:true,c:[a.BE],i:\"\\\\n\",starts:c}],i:\"\\\\S\"};var f={b:\"\\\\[\",e:\"\\\\]\",c:[a.inherit(c,{cN:null})],i:\"\\\\S\"};d.splice(d.length,0,b,f);return{c:d,k:e,i:\"\\\\S\"}}(hljs);","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lib/marked.js":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3]\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(this.smartypants(cap[0]));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/--/g, '\\u2014')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  return html.replace(/&([#\\w]+);/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());","/home/travis/build/npmtest/node-npmtest-swagger-tools/node_modules/swagger-tools/middleware/swagger-ui/lib/swagger-oauth.js":"var appName;\nvar popupMask;\nvar popupDialog;\nvar clientId;\nvar realm;\nvar redirect_uri;\nvar clientSecret;\nvar scopeSeparator;\nvar additionalQueryStringParams;\n\nfunction handleLogin() {\n  var scopes = [];\n\n  var auths = window.swaggerUi.api.authSchemes || window.swaggerUi.api.securityDefinitions;\n  if(auths) {\n    var key;\n    var defs = auths;\n    for(key in defs) {\n      var auth = defs[key];\n      if(auth.type === 'oauth2' && auth.scopes) {\n        var scope;\n        if(Array.isArray(auth.scopes)) {\n          // 1.2 support\n          var i;\n          for(i = 0; i < auth.scopes.length; i++) {\n            scopes.push(auth.scopes[i]);\n          }\n        }\n        else {\n          // 2.0 support\n          for(scope in auth.scopes) {\n            scopes.push({scope: scope, description: auth.scopes[scope], OAuthSchemeKey: key});\n          }\n        }\n      }\n    }\n  }\n\n  if(window.swaggerUi.api\n    && window.swaggerUi.api.info) {\n    appName = window.swaggerUi.api.info.title;\n  }\n\n  $('.api-popup-dialog').remove(); \n  popupDialog = $(\n    [\n      '<div class=\"api-popup-dialog\">',\n      '<div class=\"api-popup-title\">Select OAuth2.0 Scopes</div>',\n      '<div class=\"api-popup-content\">',\n        '<p>Scopes are used to grant an application different levels of access to data on behalf of the end user. Each API may declare one or more scopes.',\n          '<a href=\"#\">Learn how to use</a>',\n        '</p>',\n        '<p><strong>' + appName + '</strong> API requires the following scopes. Select which ones you want to grant to Swagger UI.</p>',\n        '<ul class=\"api-popup-scopes\">',\n        '</ul>',\n        '<p class=\"error-msg\"></p>',\n        '<div class=\"api-popup-actions\"><button class=\"api-popup-authbtn api-button green\" type=\"button\">Authorize</button><button class=\"api-popup-cancel api-button gray\" type=\"button\">Cancel</button></div>',\n      '</div>',\n      '</div>'].join(''));\n  $(document.body).append(popupDialog);\n\n  //TODO: only display applicable scopes (will need to pass them into handleLogin)\n  popup = popupDialog.find('ul.api-popup-scopes').empty();\n  for (i = 0; i < scopes.length; i ++) {\n    scope = scopes[i];\n    str = '<li><input type=\"checkbox\" id=\"scope_' + i + '\" scope=\"' + scope.scope + '\"' +'\" oauthtype=\"' + scope.OAuthSchemeKey +'\"/>' + '<label for=\"scope_' + i + '\">' + scope.scope ;\n    if (scope.description) {\n      if ($.map(auths, function(n, i) { return i; }).length > 1) //if we have more than one scheme, display schemes\n\t    str += '<br/><span class=\"api-scope-desc\">' + scope.description + ' ('+ scope.OAuthSchemeKey+')' +'</span>';\n\t  else\n\t    str += '<br/><span class=\"api-scope-desc\">' + scope.description + '</span>';\n    }\n    str += '</label></li>';\n    popup.append(str);\n  }\n\n  var $win = $(window),\n    dw = $win.width(),\n    dh = $win.height(),\n    st = $win.scrollTop(),\n    dlgWd = popupDialog.outerWidth(),\n    dlgHt = popupDialog.outerHeight(),\n    top = (dh -dlgHt)/2 + st,\n    left = (dw - dlgWd)/2;\n\n  popupDialog.css({\n    top: (top < 0? 0 : top) + 'px',\n    left: (left < 0? 0 : left) + 'px'\n  });\n\n  popupDialog.find('button.api-popup-cancel').click(function() {\n    popupMask.hide();\n    popupDialog.hide();\n    popupDialog.empty();\n    popupDialog = [];\n  });\n\n  $('button.api-popup-authbtn').unbind();\n  popupDialog.find('button.api-popup-authbtn').click(function() {\n    popupMask.hide();\n    popupDialog.hide();\n\n    var authSchemes = window.swaggerUi.api.authSchemes;\n    var host = window.location;\n    var pathname = location.pathname.substring(0, location.pathname.lastIndexOf(\"/\"));\n    var defaultRedirectUrl = host.protocol + '//' + host.host + pathname + '/o2c.html';\n    var redirectUrl = window.oAuthRedirectUrl || defaultRedirectUrl;\n    var url = null;\n    var scopes = []\n    var o = popup.find('input:checked'); \n    var OAuthSchemeKeys = [];\n    var state;\n    for(k =0; k < o.length; k++) {\n      var scope = $(o[k]).attr('scope');\n      if (scopes.indexOf(scope) === -1)\n        scopes.push(scope);\n      var OAuthSchemeKey = $(o[k]).attr('oauthtype');      \n      if (OAuthSchemeKeys.indexOf(OAuthSchemeKey) === -1)\n          OAuthSchemeKeys.push(OAuthSchemeKey);\n    }\n    \n    //TODO: merge not replace if scheme is different from any existing \n    //(needs to be aware of schemes to do so correctly)\n    window.enabledScopes=scopes;    \n    \n    for (var key in authSchemes) { \n      if (authSchemes.hasOwnProperty(key) && OAuthSchemeKeys.indexOf(key) != -1) { //only look at keys that match this scope.\n        var flow = authSchemes[key].flow;\n\n        if(authSchemes[key].type === 'oauth2' && flow && (flow === 'implicit' || flow === 'accessCode')) {\n          var dets = authSchemes[key];\n          url = dets.authorizationUrl + '?response_type=' + (flow === 'implicit' ? 'token' : 'code');\n          window.swaggerUi.tokenName = dets.tokenName || 'access_token';\n          window.swaggerUi.tokenUrl = (flow === 'accessCode' ? dets.tokenUrl : null);\n          state = key;\n        }\n        else if(authSchemes[key].type === 'oauth2' && flow && (flow === 'application')) {\n            var dets = authSchemes[key];\n            window.swaggerUi.tokenName = dets.tokenName || 'access_token';\n            clientCredentialsFlow(scopes, dets.tokenUrl, key);\n            return;\n        }        \n        else if(authSchemes[key].grantTypes) {\n          // 1.2 support\n          var o = authSchemes[key].grantTypes;\n          for(var t in o) {\n            if(o.hasOwnProperty(t) && t === 'implicit') {\n              var dets = o[t];\n              var ep = dets.loginEndpoint.url;\n              url = dets.loginEndpoint.url + '?response_type=token';\n              window.swaggerUi.tokenName = dets.tokenName;\n            }\n            else if (o.hasOwnProperty(t) && t === 'accessCode') {\n              var dets = o[t];\n              var ep = dets.tokenRequestEndpoint.url;\n              url = dets.tokenRequestEndpoint.url + '?response_type=code';\n              window.swaggerUi.tokenName = dets.tokenName;\n            }\n          }\n        }\n      }\n    }\n\n    redirect_uri = redirectUrl;\n\n    url += '&redirect_uri=' + encodeURIComponent(redirectUrl);\n    url += '&realm=' + encodeURIComponent(realm);\n    url += '&client_id=' + encodeURIComponent(clientId);\n    url += '&scope=' + encodeURIComponent(scopes.join(scopeSeparator));\n    url += '&state=' + encodeURIComponent(state);\n    for (var key in additionalQueryStringParams) {\n        url += '&' + key + '=' + encodeURIComponent(additionalQueryStringParams[key]);\n    }\n\n    window.open(url);\n  });\n\n  popupMask.show();\n  popupDialog.show();\n  return;\n}\n\n\nfunction handleLogout() {\n  for(key in window.swaggerUi.api.clientAuthorizations.authz){\n    window.swaggerUi.api.clientAuthorizations.remove(key)\n  }\n  window.enabledScopes = null;\n  $('.api-ic.ic-on').addClass('ic-off');\n  $('.api-ic.ic-on').removeClass('ic-on');\n\n  // set the info box\n  $('.api-ic.ic-warning').addClass('ic-error');\n  $('.api-ic.ic-warning').removeClass('ic-warning');\n}\n\nfunction initOAuth(opts) {\n  var o = (opts||{});\n  var errors = [];\n\n  appName = (o.appName||errors.push('missing appName'));\n  popupMask = (o.popupMask||$('#api-common-mask'));\n  popupDialog = (o.popupDialog||$('.api-popup-dialog'));\n  clientId = (o.clientId||errors.push('missing client id'));\n  clientSecret = (o.clientSecret||null);\n  realm = (o.realm||errors.push('missing realm'));\n  scopeSeparator = (o.scopeSeparator||' ');\n  additionalQueryStringParams = (o.additionalQueryStringParams||{});\n\n  if(errors.length > 0){\n    log('auth unable initialize oauth: ' + errors);\n    return;\n  }\n\n  //$('pre code').each(function(i, e) {hljs.highlightBlock(e)});\n  $('.api-ic').unbind();\n  $('.api-ic').click(function(s) {\n    if($(s.target).hasClass('ic-off'))\n      handleLogin();\n    else {\n      handleLogout();\n    }\n    false;\n  });\n}\n\nfunction clientCredentialsFlow(scopes, tokenUrl, OAuthSchemeKey) {\n    var params = {\n      'client_id': clientId,\n      'client_secret': clientSecret,\n      'scope': scopes.join(' '),\n      'grant_type': 'client_credentials'\n    }\n    $.ajax(\n    {\n      url : tokenUrl,\n      type: \"POST\",\n      data: params,\n      success:function(data, textStatus, jqXHR)\n      {\n        onOAuthComplete(data,OAuthSchemeKey);\n      },\n      error: function(jqXHR, textStatus, errorThrown)\n      {\n        onOAuthComplete(\"\");\n      }\n    });\n    \n  }\n\nwindow.processOAuthCode = function processOAuthCode(data) {\n  var OAuthSchemeKey = data.state;\n  var params = {\n    'client_id': clientId,\n    'code': data.code,\n    'grant_type': 'authorization_code',\n    'redirect_uri': redirect_uri\n  };\n\n  if (clientSecret) {\n    params.client_secret = clientSecret;\n  }\n\n  $.ajax(\n  {\n    url : window.swaggerUi.tokenUrl,\n    type: \"POST\",\n    data: params,\n    success:function(data, textStatus, jqXHR)\n    {\n      onOAuthComplete(data, OAuthSchemeKey);\n    },\n    error: function(jqXHR, textStatus, errorThrown)\n    {\n      onOAuthComplete(\"\");\n    }\n  });\n};\n\nwindow.onOAuthComplete = function onOAuthComplete(token,OAuthSchemeKey) {\n  if(token) {\n    if(token.error) {\n      var checkbox = $('input[type=checkbox],.secured')\n      checkbox.each(function(pos){\n        checkbox[pos].checked = false;\n      });\n      alert(token.error);\n    }\n    else {\n      var b = token[window.swaggerUi.tokenName];      \n      if (!OAuthSchemeKey){\n          OAuthSchemeKey = token.state;\n      }\n      if(b){\n        // if all roles are satisfied\n        var o = null;\n        $.each($('.auth .api-ic .api_information_panel'), function(k, v) { \n          var children = v;\n          if(children && children.childNodes) {\n            var requiredScopes = [];\n            $.each((children.childNodes), function (k1, v1){\n              var inner = v1.innerHTML;\n              if(inner)\n                requiredScopes.push(inner);\n            });\n            var diff = [];\n            for(var i=0; i < requiredScopes.length; i++) {\n              var s = requiredScopes[i];\n              if(window.enabledScopes && window.enabledScopes.indexOf(s) == -1) {\n                diff.push(s);\n              }\n            }\n            if(diff.length > 0){\n              o = v.parentNode.parentNode;\n              $(o.parentNode).find('.api-ic.ic-on').addClass('ic-off');\n              $(o.parentNode).find('.api-ic.ic-on').removeClass('ic-on');\n\n              // sorry, not all scopes are satisfied\n              $(o).find('.api-ic').addClass('ic-warning');\n              $(o).find('.api-ic').removeClass('ic-error');\n            }\n            else {\n              o = v.parentNode.parentNode;\n              $(o.parentNode).find('.api-ic.ic-off').addClass('ic-on');\n              $(o.parentNode).find('.api-ic.ic-off').removeClass('ic-off');\n\n              // all scopes are satisfied\n              $(o).find('.api-ic').addClass('ic-info');\n              $(o).find('.api-ic').removeClass('ic-warning');\n              $(o).find('.api-ic').removeClass('ic-error');\n            }\n          }\n        });\n        window.swaggerUi.api.clientAuthorizations.add(OAuthSchemeKey, new SwaggerClient.ApiKeyAuthorization('Authorization', 'Bearer ' + b, 'header'));\n      }\n    }\n  }\n};\n"}